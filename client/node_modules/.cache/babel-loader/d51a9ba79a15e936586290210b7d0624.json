{"ast":null,"code":"import { Class, deepExtend, deg, rad, round, defined } from '../common';\nimport { datums } from './datums';\n\nfunction toSquare(value) {\n  return value * value;\n}\n\nvar math = Math,\n    abs = math.abs,\n    atan = math.atan,\n    atan2 = math.atan2,\n    cos = math.cos,\n    sin = math.sin,\n    tan = math.tan;\nexport var Location = function (Class) {\n  function Location(lat, lng) {\n    Class.call(this);\n    this.initProperties();\n\n    if (arguments.length === 1) {\n      this.lat = lat[0];\n      this.lng = lat[1];\n    } else {\n      this.lat = lat;\n      this.lng = lng;\n    }\n  }\n\n  if (Class) Location.__proto__ = Class;\n  Location.prototype = Object.create(Class && Class.prototype);\n  Location.prototype.constructor = Location;\n\n  Location.prototype.initProperties = function initProperties() {\n    deepExtend(this, {\n      DISTANCE_ITERATIONS: 100,\n      DISTANCE_CONVERGENCE: 1e-12,\n      DISTANCE_PRECISION: 2,\n      FORMAT: '{0:N6}{1:N6}'\n    });\n  };\n\n  Location.prototype.toArray = function toArray() {\n    return [this.lat, this.lng];\n  };\n\n  Location.prototype.equals = function equals(loc) {\n    return loc && loc.lat === this.lat && loc.lng === this.lng;\n  };\n\n  Location.prototype.clone = function clone() {\n    return new Location(this.lat, this.lng);\n  };\n\n  Location.prototype.round = function round$1(precision) {\n    this.lng = round(this.lng, precision);\n    this.lat = round(this.lat, precision);\n    return this;\n  };\n\n  Location.prototype.wrap = function wrap() {\n    this.lng = this.lng % 180;\n    this.lat = this.lat % 90;\n    return this;\n  };\n\n  Location.prototype.distanceTo = function distanceTo(dest, datum) {\n    return this.greatCircleTo(dest, datum).distance;\n  };\n\n  Location.prototype.destination = function destination(distance, initialBearing, initialDatum) {\n    var bearing = rad(initialBearing);\n    var datum = initialDatum || datums.WGS84;\n    var fromLat = rad(this.lat);\n    var fromLng = rad(this.lng);\n    var dToR = distance / datum.a;\n    var lat = math.asin(sin(fromLat) * cos(dToR) + cos(fromLat) * sin(dToR) * cos(bearing));\n    var lng = fromLng + atan2(sin(bearing) * sin(dToR) * cos(fromLat), cos(dToR) - sin(fromLat) * sin(lat));\n    return new Location(deg(lat), deg(lng));\n  };\n\n  Location.prototype.greatCircleTo = function greatCircleTo(initialDest, initialDatum) {\n    var this$1 = this;\n    var dest = Location.create(dest);\n    var datum = initialDatum || datums.WGS84;\n\n    if (!dest || this.clone().round(8).equals(dest.clone().round(8))) {\n      return {\n        distance: 0,\n        azimuthFrom: 0,\n        azimuthTo: 0\n      };\n    } // See http://en.wikipedia.org/wiki/Vincenty's_formulae#Notation\n    // o == sigma\n    // A == alpha\n\n\n    var a = datum.a;\n    var b = datum.b;\n    var f = datum.f;\n    var L = rad(dest.lng - this.lng);\n    var U1 = atan((1 - f) * tan(rad(this.lat)));\n    var sinU1 = sin(U1);\n    var cosU1 = cos(U1);\n    var U2 = atan((1 - f) * tan(rad(dest.lat)));\n    var sinU2 = sin(U2);\n    var cosU2 = cos(U2);\n    var lambda = L;\n    var prevLambda;\n    var i = this.DISTANCE_ITERATIONS;\n    var converged = false;\n    var sinLambda;\n    var cosLambda;\n    var sino;\n    var cosA2;\n    var coso;\n    var cos2om;\n    var sigma;\n\n    while (!converged && i-- > 0) {\n      sinLambda = sin(lambda);\n      cosLambda = cos(lambda);\n      sino = math.sqrt(toSquare(cosU2 * sinLambda) + toSquare(cosU1 * sinU2 - sinU1 * cosU2 * cosLambda));\n      coso = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n      sigma = atan2(sino, coso);\n      var sinA = cosU1 * cosU2 * sinLambda / sino;\n      cosA2 = 1 - toSquare(sinA);\n      cos2om = 0;\n\n      if (cosA2 !== 0) {\n        cos2om = coso - 2 * sinU1 * sinU2 / cosA2;\n      }\n\n      prevLambda = lambda;\n      var C = f / 16 * cosA2 * (4 + f * (4 - 3 * cosA2));\n      lambda = L + (1 - C) * f * sinA * (sigma + C * sino * (cos2om + C * coso * (-1 + 2 * toSquare(cos2om))));\n      converged = abs(lambda - prevLambda) <= this$1.DISTANCE_CONVERGENCE;\n    }\n\n    var u2 = cosA2 * (toSquare(a) - toSquare(b)) / toSquare(b);\n    var A = 1 + u2 / 16384 * (4096 + u2 * (-768 + u2 * (320 - 175 * u2)));\n    var B = u2 / 1024 * (256 + u2 * (-128 + u2 * (74 - 47 * u2)));\n    var deltao = B * sino * (cos2om + B / 4 * (coso * (-1 + 2 * toSquare(cos2om)) - B / 6 * cos2om * (-3 + 4 * toSquare(sino)) * (-3 + 4 * toSquare(cos2om))));\n    var azimuthFrom = atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n    var azimuthTo = atan2(cosU1 * sinLambda, -sinU1 * cosU2 + cosU1 * sinU2 * cosLambda);\n    return {\n      distance: round(b * A * (sigma - deltao), this.DISTANCE_PRECISION),\n      azimuthFrom: deg(azimuthFrom),\n      azimuthTo: deg(azimuthTo)\n    };\n  }; // IE < 9 doesn't allow to override toString on definition\n\n\n  Location.prototype.toString = function toString() {\n    // return kendo.format(this.FORMAT, this.lat, this.lng);\n    return String(this.lat) + \",\" + String(this.lng);\n  };\n\n  Location.fromLngLat = function fromLngLat(lngAndLat) {\n    return new Location(lngAndLat[1], lngAndLat[0]);\n  };\n\n  Location.fromLatLng = function fromLatLng(lngAndLat) {\n    return new Location(lngAndLat[0], lngAndLat[1]);\n  };\n\n  Location.create = function create(a, b) {\n    if (defined(a)) {\n      if (a instanceof Location) {\n        return a.clone();\n      } else if (arguments.length === 1 && a.length === 2) {\n        return Location.fromLatLng(a);\n      }\n\n      return new Location(a, b);\n    }\n  };\n\n  return Location;\n}(Class);","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-charts/dist/es/map/location.js"],"names":["Class","deepExtend","deg","rad","round","defined","datums","toSquare","value","math","Math","abs","atan","atan2","cos","sin","tan","Location","lat","lng","call","initProperties","arguments","length","__proto__","prototype","Object","create","constructor","DISTANCE_ITERATIONS","DISTANCE_CONVERGENCE","DISTANCE_PRECISION","FORMAT","toArray","equals","loc","clone","round$1","precision","wrap","distanceTo","dest","datum","greatCircleTo","distance","destination","initialBearing","initialDatum","bearing","WGS84","fromLat","fromLng","dToR","a","asin","initialDest","this$1","azimuthFrom","azimuthTo","b","f","L","U1","sinU1","cosU1","U2","sinU2","cosU2","lambda","prevLambda","i","converged","sinLambda","cosLambda","sino","cosA2","coso","cos2om","sigma","sqrt","sinA","C","u2","A","B","deltao","toString","String","fromLngLat","lngAndLat","fromLatLng"],"mappings":"AAAA,SACIA,KADJ,EAEIC,UAFJ,EAGIC,GAHJ,EAIIC,GAJJ,EAKIC,KALJ,EAMIC,OANJ,QAOO,WAPP;AASA,SACIC,MADJ,QAEO,UAFP;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SAAOA,KAAK,GAAGA,KAAf;AACH;;AAGD,IAAIC,IAAI,GAAGC,IAAX;AAAA,IACIC,GAAG,GAAGF,IAAI,CAACE,GADf;AAAA,IAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAAA,IAGIC,KAAK,GAAGJ,IAAI,CAACI,KAHjB;AAAA,IAIIC,GAAG,GAAGL,IAAI,CAACK,GAJf;AAAA,IAKIC,GAAG,GAAGN,IAAI,CAACM,GALf;AAAA,IAMIC,GAAG,GAAGP,IAAI,CAACO,GANf;AAQA,OAAO,IAAIC,QAAQ,GAAI,UAAUjB,KAAV,EAAiB;AACpC,WAASiB,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACxBnB,IAAAA,KAAK,CAACoB,IAAN,CAAW,IAAX;AAEA,SAAKC,cAAL;;AAEA,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB,WAAKL,GAAL,GAAWA,GAAG,CAAC,CAAD,CAAd;AACA,WAAKC,GAAL,GAAWD,GAAG,CAAC,CAAD,CAAd;AACH,KAHD,MAGO;AACH,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAKC,GAAL,GAAWA,GAAX;AACH;AACJ;;AAED,MAAKnB,KAAL,EAAaiB,QAAQ,CAACO,SAAT,GAAqBxB,KAArB;AACbiB,EAAAA,QAAQ,CAACQ,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAe3B,KAAK,IAAIA,KAAK,CAACyB,SAA9B,CAArB;AACAR,EAAAA,QAAQ,CAACQ,SAAT,CAAmBG,WAAnB,GAAiCX,QAAjC;;AAEAA,EAAAA,QAAQ,CAACQ,SAAT,CAAmBJ,cAAnB,GAAoC,SAASA,cAAT,GAA2B;AAC3DpB,IAAAA,UAAU,CAAC,IAAD,EAAO;AACb4B,MAAAA,mBAAmB,EAAE,GADR;AAEbC,MAAAA,oBAAoB,EAAE,KAFT;AAGbC,MAAAA,kBAAkB,EAAE,CAHP;AAIbC,MAAAA,MAAM,EAAE;AAJK,KAAP,CAAV;AAMH,GAPD;;AASAf,EAAAA,QAAQ,CAACQ,SAAT,CAAmBQ,OAAnB,GAA6B,SAASA,OAAT,GAAoB;AAC7C,WAAO,CACH,KAAKf,GADF,EAEH,KAAKC,GAFF,CAAP;AAIH,GALD;;AAOAF,EAAAA,QAAQ,CAACQ,SAAT,CAAmBS,MAAnB,GAA4B,SAASA,MAAT,CAAiBC,GAAjB,EAAsB;AAC9C,WAAOA,GAAG,IAAIA,GAAG,CAACjB,GAAJ,KAAY,KAAKA,GAAxB,IAA+BiB,GAAG,CAAChB,GAAJ,KAAY,KAAKA,GAAvD;AACH,GAFD;;AAIAF,EAAAA,QAAQ,CAACQ,SAAT,CAAmBW,KAAnB,GAA2B,SAASA,KAAT,GAAkB;AACzC,WAAO,IAAInB,QAAJ,CAAa,KAAKC,GAAlB,EAAuB,KAAKC,GAA5B,CAAP;AACH,GAFD;;AAIAF,EAAAA,QAAQ,CAACQ,SAAT,CAAmBrB,KAAnB,GAA2B,SAASiC,OAAT,CAAkBC,SAAlB,EAA6B;AACpD,SAAKnB,GAAL,GAAWf,KAAK,CAAC,KAAKe,GAAN,EAAWmB,SAAX,CAAhB;AACA,SAAKpB,GAAL,GAAWd,KAAK,CAAC,KAAKc,GAAN,EAAWoB,SAAX,CAAhB;AACA,WAAO,IAAP;AACH,GAJD;;AAMArB,EAAAA,QAAQ,CAACQ,SAAT,CAAmBc,IAAnB,GAA0B,SAASA,IAAT,GAAiB;AACvC,SAAKpB,GAAL,GAAW,KAAKA,GAAL,GAAW,GAAtB;AACA,SAAKD,GAAL,GAAW,KAAKA,GAAL,GAAW,EAAtB;AACA,WAAO,IAAP;AACH,GAJD;;AAMAD,EAAAA,QAAQ,CAACQ,SAAT,CAAmBe,UAAnB,GAAgC,SAASA,UAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAC9D,WAAO,KAAKC,aAAL,CAAmBF,IAAnB,EAAyBC,KAAzB,EAAgCE,QAAvC;AACH,GAFD;;AAIA3B,EAAAA,QAAQ,CAACQ,SAAT,CAAmBoB,WAAnB,GAAiC,SAASA,WAAT,CAAsBD,QAAtB,EAAgCE,cAAhC,EAAgDC,YAAhD,EAA8D;AAC3F,QAAIC,OAAO,GAAG7C,GAAG,CAAC2C,cAAD,CAAjB;AACA,QAAIJ,KAAK,GAAGK,YAAY,IAAIzC,MAAM,CAAC2C,KAAnC;AACA,QAAIC,OAAO,GAAG/C,GAAG,CAAC,KAAKe,GAAN,CAAjB;AACA,QAAIiC,OAAO,GAAGhD,GAAG,CAAC,KAAKgB,GAAN,CAAjB;AACA,QAAIiC,IAAI,GAAGR,QAAQ,GAAGF,KAAK,CAACW,CAA5B;AACA,QAAInC,GAAG,GAAGT,IAAI,CAAC6C,IAAL,CAAUvC,GAAG,CAACmC,OAAD,CAAH,GAAepC,GAAG,CAACsC,IAAD,CAAlB,GAA2BtC,GAAG,CAACoC,OAAD,CAAH,GAAenC,GAAG,CAACqC,IAAD,CAAlB,GAA2BtC,GAAG,CAACkC,OAAD,CAAnE,CAAV;AACA,QAAI7B,GAAG,GAAGgC,OAAO,GAAGtC,KAAK,CAACE,GAAG,CAACiC,OAAD,CAAH,GAAejC,GAAG,CAACqC,IAAD,CAAlB,GAA2BtC,GAAG,CAACoC,OAAD,CAA/B,EAA0CpC,GAAG,CAACsC,IAAD,CAAH,GAAYrC,GAAG,CAACmC,OAAD,CAAH,GAAenC,GAAG,CAACG,GAAD,CAAxE,CAAzB;AAEA,WAAO,IAAID,QAAJ,CAAaf,GAAG,CAACgB,GAAD,CAAhB,EAAuBhB,GAAG,CAACiB,GAAD,CAA1B,CAAP;AACH,GAVD;;AAYAF,EAAAA,QAAQ,CAACQ,SAAT,CAAmBkB,aAAnB,GAAmC,SAASA,aAAT,CAAwBY,WAAxB,EAAqCR,YAArC,EAAmD;AAClF,QAAIS,MAAM,GAAG,IAAb;AAEA,QAAIf,IAAI,GAAGxB,QAAQ,CAACU,MAAT,CAAgBc,IAAhB,CAAX;AACA,QAAIC,KAAK,GAAGK,YAAY,IAAIzC,MAAM,CAAC2C,KAAnC;;AAEA,QAAI,CAACR,IAAD,IAAS,KAAKL,KAAL,GAAahC,KAAb,CAAmB,CAAnB,EAAsB8B,MAAtB,CAA6BO,IAAI,CAACL,KAAL,GAAahC,KAAb,CAAmB,CAAnB,CAA7B,CAAb,EAAkE;AAC9D,aAAO;AACHwC,QAAAA,QAAQ,EAAE,CADP;AAEHa,QAAAA,WAAW,EAAE,CAFV;AAGHC,QAAAA,SAAS,EAAE;AAHR,OAAP;AAKH,KAZiF,CAclF;AACA;AACA;;;AAEA,QAAIL,CAAC,GAAGX,KAAK,CAACW,CAAd;AACA,QAAIM,CAAC,GAAGjB,KAAK,CAACiB,CAAd;AACA,QAAIC,CAAC,GAAGlB,KAAK,CAACkB,CAAd;AACA,QAAIC,CAAC,GAAG1D,GAAG,CAACsC,IAAI,CAACtB,GAAL,GAAW,KAAKA,GAAjB,CAAX;AACA,QAAI2C,EAAE,GAAGlD,IAAI,CAAC,CAAC,IAAIgD,CAAL,IAAU5C,GAAG,CAACb,GAAG,CAAC,KAAKe,GAAN,CAAJ,CAAd,CAAb;AACA,QAAI6C,KAAK,GAAGhD,GAAG,CAAC+C,EAAD,CAAf;AACA,QAAIE,KAAK,GAAGlD,GAAG,CAACgD,EAAD,CAAf;AACA,QAAIG,EAAE,GAAGrD,IAAI,CAAC,CAAC,IAAIgD,CAAL,IAAU5C,GAAG,CAACb,GAAG,CAACsC,IAAI,CAACvB,GAAN,CAAJ,CAAd,CAAb;AACA,QAAIgD,KAAK,GAAGnD,GAAG,CAACkD,EAAD,CAAf;AACA,QAAIE,KAAK,GAAGrD,GAAG,CAACmD,EAAD,CAAf;AACA,QAAIG,MAAM,GAAGP,CAAb;AACA,QAAIQ,UAAJ;AACA,QAAIC,CAAC,GAAG,KAAKzC,mBAAb;AACA,QAAI0C,SAAS,GAAG,KAAhB;AACA,QAAIC,SAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,KAAJ;;AAEA,WAAO,CAACP,SAAD,IAAcD,CAAC,KAAK,CAA3B,EAA8B;AAC1BE,MAAAA,SAAS,GAAGzD,GAAG,CAACqD,MAAD,CAAf;AACAK,MAAAA,SAAS,GAAG3D,GAAG,CAACsD,MAAD,CAAf;AACAM,MAAAA,IAAI,GAAGjE,IAAI,CAACsE,IAAL,CAAUxE,QAAQ,CAAC4D,KAAK,GAAGK,SAAT,CAAR,GAA8BjE,QAAQ,CAACyD,KAAK,GAAGE,KAAR,GAAgBH,KAAK,GAAGI,KAAR,GAAgBM,SAAjC,CAAhD,CAAP;AACAG,MAAAA,IAAI,GAAGb,KAAK,GAAGG,KAAR,GAAgBF,KAAK,GAAGG,KAAR,GAAgBM,SAAvC;AACAK,MAAAA,KAAK,GAAGjE,KAAK,CAAC6D,IAAD,EAAOE,IAAP,CAAb;AAEA,UAAII,IAAI,GAAGhB,KAAK,GAAGG,KAAR,GAAgBK,SAAhB,GAA4BE,IAAvC;AACAC,MAAAA,KAAK,GAAG,IAAIpE,QAAQ,CAACyE,IAAD,CAApB;AACAH,MAAAA,MAAM,GAAG,CAAT;;AAEA,UAAIF,KAAK,KAAK,CAAd,EAAiB;AACbE,QAAAA,MAAM,GAAGD,IAAI,GAAG,IAAIb,KAAJ,GAAYG,KAAZ,GAAoBS,KAApC;AACH;;AAEDN,MAAAA,UAAU,GAAGD,MAAb;AACA,UAAIa,CAAC,GAAGrB,CAAC,GAAG,EAAJ,GAASe,KAAT,IAAkB,IAAIf,CAAC,IAAI,IAAI,IAAIe,KAAZ,CAAvB,CAAR;AACAP,MAAAA,MAAM,GAAGP,CAAC,GAAG,CAAC,IAAIoB,CAAL,IAAUrB,CAAV,GAAcoB,IAAd,IAAsBF,KAAK,GAAGG,CAAC,GAAGP,IAAJ,IAAYG,MAAM,GAAGI,CAAC,GAAGL,IAAJ,IAAY,CAAC,CAAD,GAAK,IAAIrE,QAAQ,CAACsE,MAAD,CAA7B,CAArB,CAA9B,CAAb;AACAN,MAAAA,SAAS,GAAG5D,GAAG,CAACyD,MAAM,GAAGC,UAAV,CAAH,IAA4Bb,MAAM,CAAC1B,oBAA/C;AACH;;AAED,QAAIoD,EAAE,GAAGP,KAAK,IAAIpE,QAAQ,CAAC8C,CAAD,CAAR,GAAc9C,QAAQ,CAACoD,CAAD,CAA1B,CAAL,GAAsCpD,QAAQ,CAACoD,CAAD,CAAvD;AACA,QAAIwB,CAAC,GAAG,IAAID,EAAE,GAAG,KAAL,IAAc,OAAOA,EAAE,IAAI,CAAC,GAAD,GAAOA,EAAE,IAAI,MAAM,MAAMA,EAAhB,CAAb,CAAvB,CAAZ;AACA,QAAIE,CAAC,GAAGF,EAAE,GAAG,IAAL,IAAa,MAAMA,EAAE,IAAI,CAAC,GAAD,GAAOA,EAAE,IAAI,KAAK,KAAKA,EAAd,CAAb,CAArB,CAAR;AACA,QAAIG,MAAM,GAAGD,CAAC,GAAGV,IAAJ,IAAYG,MAAM,GAAGO,CAAC,GAAG,CAAJ,IAASR,IAAI,IAAI,CAAC,CAAD,GAAK,IAAIrE,QAAQ,CAACsE,MAAD,CAArB,CAAJ,GAAqCO,CAAC,GAAG,CAAJ,GAAQP,MAAR,IAAkB,CAAC,CAAD,GAAK,IAAItE,QAAQ,CAACmE,IAAD,CAAnC,KAA8C,CAAC,CAAD,GAAK,IAAInE,QAAQ,CAACsE,MAAD,CAA/D,CAA9C,CAArB,CAAb;AAEA,QAAIpB,WAAW,GAAG5C,KAAK,CAACsD,KAAK,GAAGK,SAAT,EAAoBR,KAAK,GAAGE,KAAR,GAAgBH,KAAK,GAAGI,KAAR,GAAgBM,SAApD,CAAvB;AACA,QAAIf,SAAS,GAAG7C,KAAK,CAACmD,KAAK,GAAGQ,SAAT,EAAoB,CAACT,KAAD,GAASI,KAAT,GAAiBH,KAAK,GAAGE,KAAR,GAAgBO,SAArD,CAArB;AAEA,WAAO;AACH7B,MAAAA,QAAQ,EAAExC,KAAK,CAACuD,CAAC,GAAGwB,CAAJ,IAASL,KAAK,GAAGO,MAAjB,CAAD,EAA2B,KAAKtD,kBAAhC,CADZ;AAEH0B,MAAAA,WAAW,EAAEvD,GAAG,CAACuD,WAAD,CAFb;AAGHC,MAAAA,SAAS,EAAExD,GAAG,CAACwD,SAAD;AAHX,KAAP;AAKH,GA1ED,CAvEoC,CAmJpC;;;AACAzC,EAAAA,QAAQ,CAACQ,SAAT,CAAmB6D,QAAnB,GAA8B,SAASA,QAAT,GAAqB;AAC/C;AACA,WAAOC,MAAM,CAAC,KAAKrE,GAAN,CAAN,GAAmB,GAAnB,GAAyBqE,MAAM,CAAC,KAAKpE,GAAN,CAAtC;AACH,GAHD;;AAKAF,EAAAA,QAAQ,CAACuE,UAAT,GAAsB,SAASA,UAAT,CAAqBC,SAArB,EAAgC;AAClD,WAAO,IAAIxE,QAAJ,CAAawE,SAAS,CAAC,CAAD,CAAtB,EAA2BA,SAAS,CAAC,CAAD,CAApC,CAAP;AACH,GAFD;;AAIAxE,EAAAA,QAAQ,CAACyE,UAAT,GAAsB,SAASA,UAAT,CAAqBD,SAArB,EAAgC;AAClD,WAAO,IAAIxE,QAAJ,CAAawE,SAAS,CAAC,CAAD,CAAtB,EAA2BA,SAAS,CAAC,CAAD,CAApC,CAAP;AACH,GAFD;;AAIAxE,EAAAA,QAAQ,CAACU,MAAT,GAAkB,SAASA,MAAT,CAAiB0B,CAAjB,EAAoBM,CAApB,EAAuB;AACrC,QAAItD,OAAO,CAACgD,CAAD,CAAX,EAAgB;AACZ,UAAIA,CAAC,YAAYpC,QAAjB,EAA2B;AACvB,eAAOoC,CAAC,CAACjB,KAAF,EAAP;AACH,OAFD,MAEO,IAAId,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B8B,CAAC,CAAC9B,MAAF,KAAa,CAA3C,EAA8C;AACjD,eAAON,QAAQ,CAACyE,UAAT,CAAoBrC,CAApB,CAAP;AACH;;AAED,aAAO,IAAIpC,QAAJ,CAAaoC,CAAb,EAAgBM,CAAhB,CAAP;AACH;AACJ,GAVD;;AAYA,SAAO1C,QAAP;AACH,CA9KsB,CA8KrBjB,KA9KqB,CAAhB","sourcesContent":["import {\n    Class,\n    deepExtend,\n    deg,\n    rad,\n    round,\n    defined\n} from '../common';\n\nimport {\n    datums\n} from './datums';\n\nfunction toSquare(value) {\n    return value * value;\n}\n\n\nvar math = Math,\n    abs = math.abs,\n    atan = math.atan,\n    atan2 = math.atan2,\n    cos = math.cos,\n    sin = math.sin,\n    tan = math.tan;\n\nexport var Location = (function (Class) {\n    function Location(lat, lng) {\n        Class.call(this);\n\n        this.initProperties();\n\n        if (arguments.length === 1) {\n            this.lat = lat[0];\n            this.lng = lat[1];\n        } else {\n            this.lat = lat;\n            this.lng = lng;\n        }\n    }\n\n    if ( Class ) Location.__proto__ = Class;\n    Location.prototype = Object.create( Class && Class.prototype );\n    Location.prototype.constructor = Location;\n\n    Location.prototype.initProperties = function initProperties () {\n        deepExtend(this, {\n            DISTANCE_ITERATIONS: 100,\n            DISTANCE_CONVERGENCE: 1e-12,\n            DISTANCE_PRECISION: 2,\n            FORMAT: '{0:N6}{1:N6}'\n        });\n    };\n\n    Location.prototype.toArray = function toArray () {\n        return [\n            this.lat,\n            this.lng\n        ];\n    };\n\n    Location.prototype.equals = function equals (loc) {\n        return loc && loc.lat === this.lat && loc.lng === this.lng;\n    };\n\n    Location.prototype.clone = function clone () {\n        return new Location(this.lat, this.lng);\n    };\n\n    Location.prototype.round = function round$1 (precision) {\n        this.lng = round(this.lng, precision);\n        this.lat = round(this.lat, precision);\n        return this;\n    };\n\n    Location.prototype.wrap = function wrap () {\n        this.lng = this.lng % 180;\n        this.lat = this.lat % 90;\n        return this;\n    };\n\n    Location.prototype.distanceTo = function distanceTo (dest, datum) {\n        return this.greatCircleTo(dest, datum).distance;\n    };\n\n    Location.prototype.destination = function destination (distance, initialBearing, initialDatum) {\n        var bearing = rad(initialBearing);\n        var datum = initialDatum || datums.WGS84;\n        var fromLat = rad(this.lat);\n        var fromLng = rad(this.lng);\n        var dToR = distance / datum.a;\n        var lat = math.asin(sin(fromLat) * cos(dToR) + cos(fromLat) * sin(dToR) * cos(bearing));\n        var lng = fromLng + atan2(sin(bearing) * sin(dToR) * cos(fromLat), cos(dToR) - sin(fromLat) * sin(lat));\n\n        return new Location(deg(lat), deg(lng));\n    };\n\n    Location.prototype.greatCircleTo = function greatCircleTo (initialDest, initialDatum) {\n        var this$1 = this;\n\n        var dest = Location.create(dest);\n        var datum = initialDatum || datums.WGS84;\n\n        if (!dest || this.clone().round(8).equals(dest.clone().round(8))) {\n            return {\n                distance: 0,\n                azimuthFrom: 0,\n                azimuthTo: 0\n            };\n        }\n\n        // See http://en.wikipedia.org/wiki/Vincenty's_formulae#Notation\n        // o == sigma\n        // A == alpha\n\n        var a = datum.a;\n        var b = datum.b;\n        var f = datum.f;\n        var L = rad(dest.lng - this.lng);\n        var U1 = atan((1 - f) * tan(rad(this.lat)));\n        var sinU1 = sin(U1);\n        var cosU1 = cos(U1);\n        var U2 = atan((1 - f) * tan(rad(dest.lat)));\n        var sinU2 = sin(U2);\n        var cosU2 = cos(U2);\n        var lambda = L;\n        var prevLambda;\n        var i = this.DISTANCE_ITERATIONS;\n        var converged = false;\n        var sinLambda;\n        var cosLambda;\n        var sino;\n        var cosA2;\n        var coso;\n        var cos2om;\n        var sigma;\n\n        while (!converged && i-- > 0) {\n            sinLambda = sin(lambda);\n            cosLambda = cos(lambda);\n            sino = math.sqrt(toSquare(cosU2 * sinLambda) + toSquare(cosU1 * sinU2 - sinU1 * cosU2 * cosLambda));\n            coso = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n            sigma = atan2(sino, coso);\n\n            var sinA = cosU1 * cosU2 * sinLambda / sino;\n            cosA2 = 1 - toSquare(sinA);\n            cos2om = 0;\n\n            if (cosA2 !== 0) {\n                cos2om = coso - 2 * sinU1 * sinU2 / cosA2;\n            }\n\n            prevLambda = lambda;\n            var C = f / 16 * cosA2 * (4 + f * (4 - 3 * cosA2));\n            lambda = L + (1 - C) * f * sinA * (sigma + C * sino * (cos2om + C * coso * (-1 + 2 * toSquare(cos2om))));\n            converged = abs(lambda - prevLambda) <= this$1.DISTANCE_CONVERGENCE;\n        }\n\n        var u2 = cosA2 * (toSquare(a) - toSquare(b)) / toSquare(b);\n        var A = 1 + u2 / 16384 * (4096 + u2 * (-768 + u2 * (320 - 175 * u2)));\n        var B = u2 / 1024 * (256 + u2 * (-128 + u2 * (74 - 47 * u2)));\n        var deltao = B * sino * (cos2om + B / 4 * (coso * (-1 + 2 * toSquare(cos2om)) - B / 6 * cos2om * (-3 + 4 * toSquare(sino)) * (-3 + 4 * toSquare(cos2om))));\n\n        var azimuthFrom = atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n        var azimuthTo = atan2(cosU1 * sinLambda, -sinU1 * cosU2 + cosU1 * sinU2 * cosLambda);\n\n        return {\n            distance: round(b * A * (sigma - deltao), this.DISTANCE_PRECISION),\n            azimuthFrom: deg(azimuthFrom),\n            azimuthTo: deg(azimuthTo)\n        };\n    };\n\n    // IE < 9 doesn't allow to override toString on definition\n    Location.prototype.toString = function toString () {\n        // return kendo.format(this.FORMAT, this.lat, this.lng);\n        return String(this.lat) + \",\" + String(this.lng);\n    };\n\n    Location.fromLngLat = function fromLngLat (lngAndLat) {\n        return new Location(lngAndLat[1], lngAndLat[0]);\n    };\n\n    Location.fromLatLng = function fromLatLng (lngAndLat) {\n        return new Location(lngAndLat[0], lngAndLat[1]);\n    };\n\n    Location.create = function create (a, b) {\n        if (defined(a)) {\n            if (a instanceof Location) {\n                return a.clone();\n            } else if (arguments.length === 1 && a.length === 2) {\n                return Location.fromLatLng(a);\n            }\n\n            return new Location(a, b);\n        }\n    };\n\n    return Location;\n}(Class));\n"]},"metadata":{},"sourceType":"module"}
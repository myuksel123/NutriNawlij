[{"/home/meryem/repos/NutriNear2/client/src/index.js":"1","/home/meryem/repos/NutriNear2/client/src/pages/index.js":"2","/home/meryem/repos/NutriNear2/client/src/pages/Home.jsx":"3","/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx":"4","/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx":"5"},{"size":553,"mtime":1660361260185,"results":"6","hashOfConfig":"7"},{"size":138,"mtime":1660361274450,"results":"8","hashOfConfig":"7"},{"size":582,"mtime":1660891850480,"results":"9","hashOfConfig":"7"},{"size":14294,"mtime":1660891843180,"results":"10","hashOfConfig":"7"},{"size":1990,"mtime":1660942943416,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"1xl389b",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/meryem/repos/NutriNear2/client/src/index.js",["30"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route, Switch, NavLink } from \"react-router-dom\";\nimport {\n  Home,\n  Questions,\n  Catalog\n} from \"./pages\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path= \"/questions\" component = {Questions}/>\n      <Route exact path = \"/catalog\" component = {Catalog}/>\n    </Switch>\n  </Router>,\n\n  document.getElementById(\"root\")\n \n);",["31","32"],"/home/meryem/repos/NutriNear2/client/src/pages/index.js",[],[],"/home/meryem/repos/NutriNear2/client/src/pages/Home.jsx",[],[],"/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx",["33","34"],[],"import { NavLink, Link } from 'react-router-dom';\nimport React, { useState } from 'react'\nimport Catalog from './Catalog';\n\nfunction App(){\n    const [vitA,setVitA] = useState(false);\n    const [vitAColor,setVitAColor] = useState('greenyellow');\n\n    const [vitB1,setVitB1] = useState(false);\n    const [vitB1Color,setVitB1Color] = useState('greenyellow');\n\n    const [vitB2,setVitB2] = useState(false);\n    const [vitB2Color,setVitB2Color] = useState('greenyellow');\n\n    const [vitB3,setVitB3] = useState(false);\n    const [vitB3Color,setVitB3Color] = useState('greenyellow');\n\n    const [vitB5,setVitB5] = useState(false);\n    const [vitB5Color,setVitB5Color] = useState('greenyellow');\n\n    const [vitB6,setVitB6] = useState(false);\n    const [vitB6Color,setVitB6Color] = useState('greenyellow');\n\n    const [vitB7,setVitB7] = useState(false);\n    const [vitB7Color,setVitB7Color] = useState('greenyellow');\n\n    const [vitB9,setVitB9] = useState(false);\n    const [vitB9Color,setVitB9Color] = useState('greenyellow');\n\n    const [vitB12,setVitB12] = useState(false);\n    const [vitB12Color,setVitB12Color] = useState('greenyellow');\n\n    const [vitC,setVitC] = useState(false);\n    const [vitCColor,setVitCColor] = useState('greenyellow');\n\n    const [vitD,setVitD] = useState(false);\n    const [vitDColor,setVitDColor] = useState('greenyellow');\n\n    const [vitE,setVitE] = useState(false);\n    const [vitEColor,setVitEColor] = useState('greenyellow');\n\n    const [vitK,setVitK] = useState(false);\n    const [vitKColor,setVitKColor] = useState('greenyellow');\n\n    const [Calcium,setCalcium] = useState(false);\n    const [CalciumColor,setCalciumColor] = useState('greenyellow');\n\n    const [Phos,Phosset] = useState(false);\n    const [PhosColor,setPhosColor] = useState('greenyellow');\n\n    const [Mag,Magset] = useState(false);\n    const [MagColor,setMagColor] = useState('greenyellow');\n\n    const [Sod,Sodset] = useState(false);\n    const [SodColor,setSodColor] = useState('greenyellow');\n\n    const [Chlo,Chloset] = useState(false);\n    const [ChloColor,setChloColor] = useState('greenyellow');\n\n    const [Pot,Potset] = useState(false);\n    const [PotColor,setPotColor] = useState('greenyellow');\n\n    const [Sul,Sulset] = useState(false);\n    const [SulColor,setSulColor] = useState('greenyellow');\n\n    const [Ir,Ironset] = useState(false);\n    const [IrColor,setIrColor] = useState('greenyellow');\n\n    const [Mang,Mangset] = useState(false);\n    const [MangColor,setMangColor] = useState('greenyellow');\n\n    const [Cop,Copset] = useState(false);\n    const [CopColor,setCopColor] = useState('greenyellow');\n\n    const [Zi,Ziset] = useState(false);\n    const [ZiColor,setZiColor] = useState('greenyellow');\n\n    const [Io,Ioset] = useState(false);\n    const [IoColor,setIoColor] = useState('greenyellow');\n\n    const [Flo,Floset] = useState(false);\n    const [FloColor,setFloColor] = useState('greenyellow');\n\n    const [Sel,Selset] = useState(false);\n    const [SelColor,setSelColor] = useState('greenyellow');\n\n    const [Protein,setProtein] = useState(false);\n    const [ProteinColor,setProteinColor] = useState('greenyellow');\n\n    const [Saturated,setSaturated] = useState(false);\n    const [SaturatedColor,setSaturatedColor] = useState('greenyellow');\n\n    const [PolyUnsaturated,setPolyUnsaturated] = useState(false);\n    const [PolyUnsaturatedColor,setPolyUnsaturatedColor] = useState('greenyellow');\n\n    const [MonoUnsaturated,setMonoUnsaturated] = useState(false);\n    const [MonoUnsaturatedColor,setMonoUnsaturatedColor] = useState('greenyellow');\n\n    const [Starch,setStarch] = useState(false);\n    const [StarchColor,setStarchColor] = useState('greenyellow');\n\n    const [Sugar,setSugar] = useState(false);\n    const [SugarColor,setSugarColor] = useState('greenyellow');\n\n    const [Fiber,setFiber] = useState(false);\n    const [FiberColor,setFiberColor] = useState('greenyellow');\n\n    return(\n        <div id = 'questionspage' class =\"body\">\n            <div id = \"macros\">\n    <div class = \"header\">Macros</div>\n    <div class = \"options\">\n        \n        <div class = \"macro\">\n            <h4>Fats</h4>\n          <div class = \"buttons\">\n            <button class = \"button\" onClick={() => {\n        const bool = !PolyUnsaturated;\n        setPolyUnsaturated(bool);\n          bool ? setPolyUnsaturatedColor(\"lightcyan\")  : setPolyUnsaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PolyUnsaturatedColor}}>Poly-Unsaturated</button>\n\n<button class = \"button\" onClick={() => {\n        const bool = !MonoUnsaturated;\n        setMonoUnsaturated(bool);\n          bool ? setMonoUnsaturatedColor(\"lightcyan\")  : setMonoUnsaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MonoUnsaturatedColor}}>Mono-Unsaturated</button>\n\n             <button class = \"button\" onClick={() => {\n        const bool = !Saturated;\n        setSaturated(bool);\n          bool ? setSaturatedColor(\"lightcyan\")  : setSaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SaturatedColor }}>Saturated</button>\n\n        </div>\n        </div>\n\n\n        <div class = \"macro\">\n          <h4>Protein</h4>\n          <div class = \"buttons\">\n        <button class = \"button\" onClick={() => {\n        const bool = !Protein;\n        setProtein(bool);\n          bool ? setProteinColor(\"lightcyan\")  : setProteinColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ProteinColor }}>Protein</button> \n        </div>\n          </div>\n          \n\n        <div class = \"macro\">\n          <h4>Carbohydrates</h4>\n          <div class = \"buttons\">\n             \n           <button class = \"button\" onClick={() => {\n        const bool = !Starch;\n        setStarch(bool);\n          bool ? setStarchColor(\"lightcyan\")  : setStarchColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: StarchColor}}>Starches \n         (Complex Carohydrates)</button>\n         \n<button class = \"button\" onClick={() => {\n        const bool = !Fiber;\n        setFiber(bool);\n          bool ? setFiberColor(\"lightcyan\")  : setFiberColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: FiberColor }}>Fiber</button>\n\n<button class = \"button\" onClick={() => {\n        const bool = !Sugar;\n        setSugar(bool);\n          bool ? setSugarColor(\"lightcyan\")  : setSugarColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SugarColor }}>Sugar</button>\n</div>\n        </div>\n\n    </div>\n    </div>\n\n    <div id=\"micros\">\n        <div className =\"header\">Micros</div>\n        <div className = \"choice\">\n            <div className =\"section\">\n            <h1>Vitamins</h1>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitA;\n        setVitA(bool);\n          bool ? setVitAColor(\"lightcyan\")  : setVitAColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitAColor }}>A</button>\n\n            <button class = \"button\"  onClick ={() => {\n        const bool = !vitB1;\n        setVitB1(!vitB1);\n          bool ? setVitB1Color(\"lightcyan\")  : setVitB1Color(\"greenyellow\");   \n        }} \n         style={{ backgroundColor: vitB1Color }} >B1(thiamine)</button>\n\n            <button class = \"button\"  onClick ={() => {\n        const bool = !vitB2;\n        setVitB2(!vitB2);\n          bool ? setVitB2Color(\"lightcyan\")  : setVitB2Color(\"greenyellow\");   \n        }} \n         style={{ backgroundColor: vitB2Color }}>B2(riboflavin)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB3;\n        setVitB3(!vitB3);\n        bool ? setVitB3Color(\"lightcyan\")  : setVitB3Color(\"greenyellow\");   \n        console.log(vitB3);\n        }} \n         style={{ backgroundColor: vitB3Color }}>B3(niacin)</button>\n            \n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB5;\n            setVitB5(!vitB5); \n          bool ? setVitB5Color(\"lightcyan\")  : setVitB5Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB5Color }}>B5(pantothenic acid)</button>\n\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB6;\n            setVitB6(!vitB6); \n          bool ? setVitB6Color(\"lightcyan\")  : setVitB6Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB6Color }}>B6(pyridoxine)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB7;\n            setVitB7(!vitB7); \n          bool ? setVitB7Color(\"lightcyan\")  : setVitB7Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB7Color }} >B7(biotin)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB9;\n            setVitB9(!vitB9); \n          bool ? setVitB9Color(\"lightcyan\")  : setVitB9Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB9Color }} >B9(folate)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB12;\n            setVitB12(!vitB12); \n          bool ? setVitB12Color(\"lightcyan\")  : setVitB12Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB12Color }}>B12(cobalamin)</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitC;\n        setVitC(bool);\n          bool ? setVitCColor(\"lightcyan\")  : setVitCColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitCColor }} >C</button>\n         \n            <button class = \"button\" onClick={() => {\n        const bool = !vitD;\n        setVitD(bool);\n          bool ? setVitDColor(\"lightcyan\")  : setVitDColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitDColor }}  >D</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitE;\n        setVitE(bool);\n          bool ? setVitEColor(\"lightcyan\")  : setVitEColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitEColor }}>E</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitK;\n        setVitK(bool);\n          bool ? setVitKColor(\"lightcyan\")  : setVitKColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitKColor }}>K</button>\n            </div>\n\n            <div class =\"section\">\n            <h1>Minerals</h1>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Calcium;\n        setCalcium(bool);\n          bool ? setCalciumColor(\"lightcyan\")  : setCalciumColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: CalciumColor }}>Calcium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Phos;\n        Phosset(bool);\n          bool ? setPhosColor(\"lightcyan\")  : setPhosColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PhosColor }}>Phosphorus</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Mag;\n        Magset(bool);\n          bool ? setMagColor(\"lightcyan\")  : setMagColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MagColor }}>Magnesium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sod;\n        Sodset(bool);\n          bool ? setSodColor(\"lightcyan\")  : setSodColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SodColor }}>Sodium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Chlo;\n        Chloset(bool);\n          bool ? setChloColor(\"lightcyan\")  : setChloColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ChloColor }}>Chloride</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Pot;\n        Potset(bool);\n          bool ? setPotColor(\"lightcyan\")  : setPotColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PotColor }}>Potassium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sul;\n        Sulset(bool);\n          bool ? setSulColor(\"lightcyan\")  : setSulColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SulColor }}>Sulfur</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Ir;\n        Ironset(bool);\n          bool ? setIrColor(\"lightcyan\")  : setIrColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: IrColor }}>Iron</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Mang;\n        Mangset(bool);\n          bool ? setMangColor(\"lightcyan\")  : setMangColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MangColor }}>Manganese</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Cop;\n        Copset(bool);\n          bool ? setCopColor(\"lightcyan\")  : setCopColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: CopColor }}>Copper</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Zi;\n        Ziset(bool);\n          bool ? setZiColor(\"lightcyan\")  : setZiColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ZiColor }}>Zinc</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Io;\n        Ioset(bool);\n          bool ? setIoColor(\"lightcyan\")  : setIoColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: IoColor }}>Iodine</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Flo;\n        Floset(bool);\n          bool ? setFloColor(\"lightcyan\")  : setFloColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: FloColor }}>Flouride</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sel;\n        Selset(bool);\n          bool ? setSelColor(\"lightcyan\")  : setSelColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SelColor }}>Selenium</button>\n\n            </div>\n\n        </div>\n    </div>\n    <Link\n     to={{\n      pathname:\"../catalog\",\n      state: {vitA,vitB1,vitB2,vitB3,vitB5,vitB6,vitB7,vitB9,\n      vitB12,vitC,vitD,vitE,vitK,Calcium,Phos,Mag,Sod,Chlo,Pot,Sul,Ir,\n    Mang,Cop,Zi,Io,Sel,Protein,MonoUnsaturated,Saturated,PolyUnsaturated,Starch,Fiber,Sugar},\n     }}><button class = \"next\">\n    To the Results!</button>\n    </Link>\n  \n        </div>\n    );\n}\nexport default App;","/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx",["35","36","37","38"],[],{"ruleId":"39","severity":1,"message":"40","line":4,"column":50,"nodeType":"41","messageId":"42","endLine":4,"endColumn":57},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":17},{"ruleId":"39","severity":1,"message":"47","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":22,"column":8,"nodeType":"50","endLine":22,"endColumn":10,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":31,"column":10,"nodeType":"54","messageId":"55","endLine":31,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":31,"column":42,"nodeType":"54","messageId":"55","endLine":31,"endColumn":44},{"ruleId":"52","severity":1,"message":"53","line":46,"column":19,"nodeType":"54","messageId":"55","endLine":46,"endColumn":21},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'Catalog' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["58"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [props.location.state]",{"range":"61","text":"62"},[544,546],"[props.location.state]"]
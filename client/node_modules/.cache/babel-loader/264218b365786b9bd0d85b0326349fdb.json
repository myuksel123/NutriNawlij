{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport { NavLink } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Catalog from './Catalog';\nimport ReactDom from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [vitA, setVitA] = useState(false);\n  const [vitAColor, setVitAColor] = useState('gray');\n  const [vitB1, setVitB1] = useState(false);\n  const [vitB1Color, setVitB1Color] = useState('gray');\n  const [vitB2, setVitB2] = useState(false);\n  const [vitB2Color, setVitB2Color] = useState('gray');\n  const [vitB3, setVitB3] = useState(false);\n  const [vitB3Color, setVitB3Color] = useState('gray');\n  const [vitB5, setVitB5] = useState(false);\n  const [vitB5Color, setVitB5Color] = useState('gray');\n  const [vitB6, setVitB6] = useState(false);\n  const [vitB6Color, setVitB6Color] = useState('gray');\n  const [vitB7, setVitB7] = useState(false);\n  const [vitB7Color, setVitB7Color] = useState('gray');\n  const [vitB9, setVitB9] = useState(false);\n  const [vitB9Color, setVitB9Color] = useState('gray');\n  const [vitB12, setVitB12] = useState(false);\n  const [vitB12Color, setVitB12Color] = useState('gray');\n  const [vitC, setVitC] = useState(false);\n  const [vitCColor, setVitCColor] = useState('gray');\n  const [vitD, setVitD] = useState(false);\n  const [vitDColor, setVitDColor] = useState('gray');\n  const [vitE, setVitE] = useState(false);\n  const [vitEColor, setVitEColor] = useState('gray');\n  const [vitK, setVitK] = useState(false);\n  const [vitKColor, setVitKColor] = useState('gray');\n  const [Calcium, setCalcium] = useState(false);\n  const [CalciumColor, setCalciumColor] = useState('gray');\n  const [Phos, Phosset] = useState(false);\n  const [PhosColor, setPhosColor] = useState('gray');\n  const [Mag, Magset] = useState(false);\n  const [MagColor, setMagColor] = useState('gray');\n  const [Sod, Sodset] = useState(false);\n  const [SodColor, setSodColor] = useState('gray');\n  const [Chlo, Chloset] = useState(false);\n  const [ChloColor, setChloColor] = useState('gray');\n  const [Pot, Potset] = useState(false);\n  const [PotColor, setPotColor] = useState('gray');\n  const [Sul, Sulset] = useState(false);\n  const [SulColor, setSulColor] = useState('gray');\n  const [Ir, Ironset] = useState(false);\n  const [IrColor, setIrColor] = useState('gray');\n  const [Mang, Mangset] = useState(false);\n  const [MangColor, setMangColor] = useState('gray');\n  const [Cop, Copset] = useState(false);\n  const [CopColor, setCopColor] = useState('gray');\n  const [Zi, Ziset] = useState(false);\n  const [ZiColor, setZiColor] = useState('gray');\n  const [Io, Ioset] = useState(false);\n  const [IoColor, setIoColor] = useState('gray');\n  const [Flo, Floset] = useState(false);\n  const [FloColor, setFloColor] = useState('gray');\n  const [Sel, Selset] = useState(false);\n  const [SelColor, setSelColor] = useState('gray');\n  const [Vegn, Vegnset] = useState(false);\n  const [VegnColor, setVegnColor] = useState('gray');\n  const [Vege, Vegeset] = useState(false);\n  const [VegeColor, setVegeColor] = useState('gray');\n  const [Hal, Halset] = useState(false);\n  const [HalColor, setHalColor] = useState('gray');\n  const [Kosh, Koshset] = useState(false);\n  const [KoshColor, setKoshColor] = useState('gray');\n  const element = \"button>1</button>\";\n  ReactDom.render( /*#__PURE__*/React.createElement(\"button\", null, \"1\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"macros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header\",\n        children: \"Macros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"How much protein?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [\"How much of each fat?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"scale\",\n            children: \"Unsaturated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Omega-3s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Saturated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Omega-6s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [\"How much of each Carb?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Starches (Complex Carbohydrates)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"micros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Micros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select the ones you want to get more of\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Vitamins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitA;\n              setVitA(bool);\n              bool ? setVitAColor(\"red\") : setVitAColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitAColor\n            },\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB1;\n              setVitB1(!vitB1);\n              bool ? setVitB1Color(\"red\") : setVitB1Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB1Color\n            },\n            children: \"B1(thiamine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB2;\n              setVitB2(!vitB2);\n              bool ? setVitB2Color(\"red\") : setVitB2Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB2Color\n            },\n            children: \"B2(riboflavin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB3;\n              setVitB3(!vitB3);\n              bool ? setVitB3Color(\"red\") : setVitB3Color(\"gray\");\n              console.log(vitB3);\n            },\n            style: {\n              backgroundColor: vitB3Color\n            },\n            children: \"B3(niacin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB5;\n              setVitB5(!vitB5);\n              bool ? setVitB5Color(\"red\") : setVitB5Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB5Color\n            },\n            children: \"B5(pantothenic acid)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB6;\n              setVitB6(!vitB6);\n              bool ? setVitB6Color(\"red\") : setVitB6Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB6Color\n            },\n            children: \"B6(pyridoxine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB7;\n              setVitB7(!vitB7);\n              bool ? setVitB7Color(\"red\") : setVitB7Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB7Color\n            },\n            children: \"B7(biotin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB9;\n              setVitB9(!vitB9);\n              bool ? setVitB9Color(\"red\") : setVitB9Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB9Color\n            },\n            children: \"B9(folate)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB12;\n              setVitB12(!vitB12);\n              bool ? setVitB12Color(\"red\") : setVitB12Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB12Color\n            },\n            children: \"B12(cobalamin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitC;\n              setVitC(bool);\n              bool ? setVitCColor(\"red\") : setVitCColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitCColor\n            },\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitD;\n              setVitD(bool);\n              bool ? setVitDColor(\"red\") : setVitDColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitDColor\n            },\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitE;\n              setVitE(bool);\n              bool ? setVitEColor(\"red\") : setVitEColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitEColor\n            },\n            children: \"E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitK;\n              setVitK(bool);\n              bool ? setVitKColor(\"red\") : setVitKColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitKColor\n            },\n            children: \"K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Minerals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Calcium;\n              setCalcium(bool);\n              bool ? setCalciumColor(\"red\") : setCalciumColor(\"gray\");\n            },\n            style: {\n              backgroundColor: CalciumColor\n            },\n            children: \"Calcium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Phos;\n              Phosset(bool);\n              bool ? setPhosColor(\"red\") : setPhosColor(\"gray\");\n            },\n            style: {\n              backgroundColor: PhosColor\n            },\n            children: \"Phosphorus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Mag;\n              Magset(bool);\n              bool ? setMagColor(\"red\") : setMagColor(\"gray\");\n            },\n            style: {\n              backgroundColor: MagColor\n            },\n            children: \"Magnesium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sod;\n              Sodset(bool);\n              bool ? setSodColor(\"red\") : setSodColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SodColor\n            },\n            children: \"Sodium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Chlo;\n              Chloset(bool);\n              bool ? setChloColor(\"red\") : setChloColor(\"gray\");\n            },\n            style: {\n              backgroundColor: ChloColor\n            },\n            children: \"Chloride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Pot;\n              Potset(bool);\n              bool ? setPotColor(\"red\") : setPotColor(\"gray\");\n            },\n            style: {\n              backgroundColor: PotColor\n            },\n            children: \"Potassium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sul;\n              Sulset(bool);\n              bool ? setSulColor(\"red\") : setSulColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SulColor\n            },\n            children: \"Sulfur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Ir;\n              Ironset(bool);\n              bool ? setIrColor(\"red\") : setIrColor(\"gray\");\n            },\n            style: {\n              backgroundColor: IrColor\n            },\n            children: \"Iron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Mang;\n              Mangset(bool);\n              bool ? setMangColor(\"red\") : setMangColor(\"gray\");\n            },\n            style: {\n              backgroundColor: MangColor\n            },\n            children: \"Manganese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Cop;\n              Copset(bool);\n              bool ? setCopColor(\"red\") : setCopColor(\"gray\");\n            },\n            style: {\n              backgroundColor: CopColor\n            },\n            children: \"Copper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Zi;\n              Ziset(bool);\n              bool ? setZiColor(\"red\") : setZiColor(\"gray\");\n            },\n            style: {\n              backgroundColor: ZiColor\n            },\n            children: \"Zinc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Io;\n              Ioset(bool);\n              bool ? setIoColor(\"red\") : setIoColor(\"gray\");\n            },\n            style: {\n              backgroundColor: IoColor\n            },\n            children: \"Iodine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Flo;\n              Floset(bool);\n              bool ? setFloColor(\"red\") : setFloColor(\"gray\");\n            },\n            style: {\n              backgroundColor: FloColor\n            },\n            children: \"Flouride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sel;\n              Selset(bool);\n              bool ? setSelColor(\"red\") : setSelColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SelColor\n            },\n            children: \"Selenium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"restrictions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Do any of these apply to you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Vegn;\n          Vegnset(bool);\n          bool ? setVegnColor(\"red\") : setVegnColor(\"gray\");\n        },\n        style: {\n          backgroundColor: VegnColor\n        },\n        children: \"Vegan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Vege;\n          Vegeset(bool);\n          bool ? setVegeColor(\"red\") : setVegeColor(\"gray\");\n        },\n        style: {\n          backgroundColor: VegeColor\n        },\n        children: \"Vegetarian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Hal;\n          Halset(bool);\n          bool ? setHalColor(\"red\") : setHalColor(\"gray\");\n        },\n        style: {\n          backgroundColor: HalColor\n        },\n        children: \"Halal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Kosh;\n          Koshset(bool);\n          bool ? setKoshColor(\"red\") : setKoshColor(\"gray\");\n        },\n        style: {\n          backgroundColor: KoshColor\n        },\n        children: \"Kosher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"source.js\",\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Allergies\",\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"allergies\",\n          name: \"allergies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/catalog\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Catalog, {\n      VitaminA: vitA,\n      VitaminB1: vitB1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"TSDPLW02V3ZwbDnoP0bLmltzcMA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx"],"names":["NavLink","React","useState","Catalog","ReactDom","App","vitA","setVitA","vitAColor","setVitAColor","vitB1","setVitB1","vitB1Color","setVitB1Color","vitB2","setVitB2","vitB2Color","setVitB2Color","vitB3","setVitB3","vitB3Color","setVitB3Color","vitB5","setVitB5","vitB5Color","setVitB5Color","vitB6","setVitB6","vitB6Color","setVitB6Color","vitB7","setVitB7","vitB7Color","setVitB7Color","vitB9","setVitB9","vitB9Color","setVitB9Color","vitB12","setVitB12","vitB12Color","setVitB12Color","vitC","setVitC","vitCColor","setVitCColor","vitD","setVitD","vitDColor","setVitDColor","vitE","setVitE","vitEColor","setVitEColor","vitK","setVitK","vitKColor","setVitKColor","Calcium","setCalcium","CalciumColor","setCalciumColor","Phos","Phosset","PhosColor","setPhosColor","Mag","Magset","MagColor","setMagColor","Sod","Sodset","SodColor","setSodColor","Chlo","Chloset","ChloColor","setChloColor","Pot","Potset","PotColor","setPotColor","Sul","Sulset","SulColor","setSulColor","Ir","Ironset","IrColor","setIrColor","Mang","Mangset","MangColor","setMangColor","Cop","Copset","CopColor","setCopColor","Zi","Ziset","ZiColor","setZiColor","Io","Ioset","IoColor","setIoColor","Flo","Floset","FloColor","setFloColor","Sel","Selset","SelColor","setSelColor","Vegn","Vegnset","VegnColor","setVegnColor","Vege","Vegeset","VegeColor","setVegeColor","Hal","Halset","HalColor","setHalColor","Kosh","Koshset","KoshColor","setKoshColor","element","render","createElement","bool","backgroundColor","console","log"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACU,UAAD,EAAYC,aAAZ,IAA6BX,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACc,UAAD,EAAYC,aAAZ,IAA6Bf,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACgB,KAAD,EAAOC,QAAP,IAAmBjB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACkB,UAAD,EAAYC,aAAZ,IAA6BnB,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACoB,KAAD,EAAOC,QAAP,IAAmBrB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACsB,UAAD,EAAYC,aAAZ,IAA6BvB,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACwB,KAAD,EAAOC,QAAP,IAAmBzB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAAC0B,UAAD,EAAYC,aAAZ,IAA6B3B,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAAC4B,KAAD,EAAOC,QAAP,IAAmB7B,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAAC8B,UAAD,EAAYC,aAAZ,IAA6B/B,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACgC,KAAD,EAAOC,QAAP,IAAmBjC,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACkC,UAAD,EAAYC,aAAZ,IAA6BnC,QAAQ,CAAC,MAAD,CAA3C;AAEA,QAAM,CAACoC,MAAD,EAAQC,SAAR,IAAqBrC,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACsC,WAAD,EAAaC,cAAb,IAA+BvC,QAAQ,CAAC,MAAD,CAA7C;AAEA,QAAM,CAACwC,IAAD,EAAMC,OAAN,IAAiBzC,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC0C,SAAD,EAAWC,YAAX,IAA2B3C,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAAC4C,IAAD,EAAMC,OAAN,IAAiB7C,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC8C,SAAD,EAAWC,YAAX,IAA2B/C,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACgD,IAAD,EAAMC,OAAN,IAAiBjD,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACkD,SAAD,EAAWC,YAAX,IAA2BnD,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACoD,IAAD,EAAMC,OAAN,IAAiBrD,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACsD,SAAD,EAAWC,YAAX,IAA2BvD,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACwD,OAAD,EAASC,UAAT,IAAuBzD,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAAC0D,YAAD,EAAcC,eAAd,IAAiC3D,QAAQ,CAAC,MAAD,CAA/C;AAEA,QAAM,CAAC4D,IAAD,EAAMC,OAAN,IAAiB7D,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC8D,SAAD,EAAWC,YAAX,IAA2B/D,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACgE,GAAD,EAAKC,MAAL,IAAejE,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAACkE,QAAD,EAAUC,WAAV,IAAyBnE,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACoE,GAAD,EAAKC,MAAL,IAAerE,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAACsE,QAAD,EAAUC,WAAV,IAAyBvE,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACwE,IAAD,EAAMC,OAAN,IAAiBzE,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC0E,SAAD,EAAWC,YAAX,IAA2B3E,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAAC4E,GAAD,EAAKC,MAAL,IAAe7E,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAAC8E,QAAD,EAAUC,WAAV,IAAyB/E,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACgF,GAAD,EAAKC,MAAL,IAAejF,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAACkF,QAAD,EAAUC,WAAV,IAAyBnF,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACoF,EAAD,EAAIC,OAAJ,IAAerF,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAACsF,OAAD,EAASC,UAAT,IAAuBvF,QAAQ,CAAC,MAAD,CAArC;AAEA,QAAM,CAACwF,IAAD,EAAMC,OAAN,IAAiBzF,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC0F,SAAD,EAAWC,YAAX,IAA2B3F,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAAC4F,GAAD,EAAKC,MAAL,IAAe7F,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAAC8F,QAAD,EAAUC,WAAV,IAAyB/F,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACgG,EAAD,EAAIC,KAAJ,IAAajG,QAAQ,CAAC,KAAD,CAA3B;AACA,QAAM,CAACkG,OAAD,EAASC,UAAT,IAAuBnG,QAAQ,CAAC,MAAD,CAArC;AAEA,QAAM,CAACoG,EAAD,EAAIC,KAAJ,IAAarG,QAAQ,CAAC,KAAD,CAA3B;AACA,QAAM,CAACsG,OAAD,EAASC,UAAT,IAAuBvG,QAAQ,CAAC,MAAD,CAArC;AAEA,QAAM,CAACwG,GAAD,EAAKC,MAAL,IAAezG,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAAC0G,QAAD,EAAUC,WAAV,IAAyB3G,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAAC4G,GAAD,EAAKC,MAAL,IAAe7G,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAAC8G,QAAD,EAAUC,WAAV,IAAyB/G,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAACgH,IAAD,EAAMC,OAAN,IAAiBjH,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACkH,SAAD,EAAWC,YAAX,IAA2BnH,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACoH,IAAD,EAAMC,OAAN,IAAiBrH,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACsH,SAAD,EAAWC,YAAX,IAA2BvH,QAAQ,CAAC,MAAD,CAAzC;AAEA,QAAM,CAACwH,GAAD,EAAKC,MAAL,IAAezH,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAAC0H,QAAD,EAAUC,WAAV,IAAyB3H,QAAQ,CAAC,MAAD,CAAvC;AAEA,QAAM,CAAC4H,IAAD,EAAMC,OAAN,IAAiB7H,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC8H,SAAD,EAAWC,YAAX,IAA2B/H,QAAQ,CAAC,MAAD,CAAzC;AAGA,QAAMgI,OAAO,GAAG,mBAAhB;AACA9H,EAAAA,QAAQ,CAAC+H,MAAT,eACIlI,KAAK,CAACmI,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,GAApC,CADJ;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,EAAE,EAAG,QAAV;AAAA,8BACR;AAAK,QAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAER;AAAK,QAAA,KAAK,EAAG,SAAb;AAAA,gCACI;AAAK,UAAA,KAAK,EAAG,OAAb;AAAA,iCACA;AAAK,YAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,KAAK,EAAG,OAAb;AAAA,2DAEI;AAAK,YAAA,EAAE,EAAG,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,YAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAQI;AAAK,YAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eAWI;AAAK,YAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAuBI;AAAK,UAAA,KAAK,EAAG,OAAb;AAAA,4DAEI;AAAK,YAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,YAAA,KAAK,EAAG;AAAb;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsCJ;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAG,QAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE,SAAhB;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAGA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMC,IAAI,GAAG,CAAC/H,IAAd;AACAC,cAAAA,OAAO,CAAC8H,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAG5H,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6H,cAAAA,eAAe,EAAE9H;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAUA;AAAQ,YAAA,OAAO,EAAG,MAAM;AAC5B,oBAAM6H,IAAI,GAAG,CAAC3H,KAAd;AACAC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACE2H,cAAAA,IAAI,GAAGxH,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyH,cAAAA,eAAe,EAAE1H;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,eAiBA;AAAS,YAAA,OAAO,EAAG,MAAM;AAC7B,oBAAMyH,IAAI,GAAG,CAACvH,KAAd;AACAC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACEuH,cAAAA,IAAI,GAAGpH,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqH,cAAAA,eAAe,EAAEtH;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBA,eAwBA;AAAS,YAAA,OAAO,EAAG,MAAM;AAC7B,oBAAMqH,IAAI,GAAG,CAACnH,KAAd;AACAC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAmH,cAAAA,IAAI,GAAGhH,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACAkH,cAAAA,OAAO,CAACC,GAAR,CAAYtH,KAAZ;AACC,aALG;AAMH,YAAA,KAAK,EAAE;AAAEoH,cAAAA,eAAe,EAAElH;AAAnB,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBA,eAgCA;AAAS,YAAA,OAAO,EAAG,MAAM;AAC7B,oBAAMiH,IAAI,GAAG,CAAC/G,KAAd;AACIC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACF+G,cAAAA,IAAI,GAAG5G,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6G,cAAAA,eAAe,EAAE9G;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCA,eAwCA;AAAQ,YAAA,OAAO,EAAG,MAAM;AAC5B,oBAAM6G,IAAI,GAAG,CAAC3G,KAAd;AACIC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACF2G,cAAAA,IAAI,GAAGxG,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyG,cAAAA,eAAe,EAAE1G;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxCA,eA+CA;AAAQ,YAAA,OAAO,EAAG,MAAM;AAC5B,oBAAMyG,IAAI,GAAG,CAACvG,KAAd;AACIC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACFuG,cAAAA,IAAI,GAAGpG,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqG,cAAAA,eAAe,EAAEtG;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CA,eAsDA;AAAQ,YAAA,OAAO,EAAG,MAAM;AAC5B,oBAAMqG,IAAI,GAAG,CAACnG,KAAd;AACIC,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACFmG,cAAAA,IAAI,GAAGhG,aAAa,CAAC,KAAD,CAAhB,GAA2BA,aAAa,CAAC,MAAD,CAA5C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEiG,cAAAA,eAAe,EAAElG;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtDA,eA6DA;AAAQ,YAAA,OAAO,EAAG,MAAM;AAC5B,oBAAMiG,IAAI,GAAG,CAAC/F,MAAd;AACIC,cAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACF+F,cAAAA,IAAI,GAAG5F,cAAc,CAAC,KAAD,CAAjB,GAA4BA,cAAc,CAAC,MAAD,CAA9C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6F,cAAAA,eAAe,EAAE9F;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7DA,eAoEA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAM6F,IAAI,GAAG,CAAC3F,IAAd;AACAC,cAAAA,OAAO,CAAC0F,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGxF,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyF,cAAAA,eAAe,EAAE1F;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApEA,eA2EA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMyF,IAAI,GAAG,CAACvF,IAAd;AACAC,cAAAA,OAAO,CAACsF,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGpF,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqF,cAAAA,eAAe,EAAEtF;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3EA,eAkFA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMqF,IAAI,GAAG,CAACnF,IAAd;AACAC,cAAAA,OAAO,CAACkF,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGhF,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEiF,cAAAA,eAAe,EAAElF;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlFA,eAyFA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMiF,IAAI,GAAG,CAAC/E,IAAd;AACAC,cAAAA,OAAO,CAAC8E,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAG5E,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6E,cAAAA,eAAe,EAAE9E;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkGI;AAAK,UAAA,KAAK,EAAE,SAAZ;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAGA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAM6E,IAAI,GAAG,CAAC3E,OAAd;AACAC,cAAAA,UAAU,CAAC0E,IAAD,CAAV;AACEA,cAAAA,IAAI,GAAGxE,eAAe,CAAC,KAAD,CAAlB,GAA6BA,eAAe,CAAC,MAAD,CAAhD;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyE,cAAAA,eAAe,EAAE1E;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAUA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMyE,IAAI,GAAG,CAACvE,IAAd;AACAC,cAAAA,OAAO,CAACsE,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGpE,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqE,cAAAA,eAAe,EAAEtE;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,eAiBA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMqE,IAAI,GAAG,CAACnE,GAAd;AACAC,cAAAA,MAAM,CAACkE,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGhE,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEiE,cAAAA,eAAe,EAAElE;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBA,eAwBA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMiE,IAAI,GAAG,CAAC/D,GAAd;AACAC,cAAAA,MAAM,CAAC8D,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAG5D,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6D,cAAAA,eAAe,EAAE9D;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBA,eA+BA;AAAS,YAAA,OAAO,EAAE,MAAM;AAC5B,oBAAM6D,IAAI,GAAG,CAAC3D,IAAd;AACAC,cAAAA,OAAO,CAAC0D,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGxD,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyD,cAAAA,eAAe,EAAE1D;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BA,eAsCA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMyD,IAAI,GAAG,CAACvD,GAAd;AACAC,cAAAA,MAAM,CAACsD,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGpD,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqD,cAAAA,eAAe,EAAEtD;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCA,eA6CA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMqD,IAAI,GAAG,CAACnD,GAAd;AACAC,cAAAA,MAAM,CAACkD,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGhD,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEiD,cAAAA,eAAe,EAAElD;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CA,eAoDA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMiD,IAAI,GAAG,CAAC/C,EAAd;AACAC,cAAAA,OAAO,CAAC8C,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAG5C,UAAU,CAAC,KAAD,CAAb,GAAwBA,UAAU,CAAC,MAAD,CAAtC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6C,cAAAA,eAAe,EAAE9C;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDA,eA2DA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAM6C,IAAI,GAAG,CAAC3C,IAAd;AACAC,cAAAA,OAAO,CAAC0C,IAAD,CAAP;AACEA,cAAAA,IAAI,GAAGxC,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyC,cAAAA,eAAe,EAAE1C;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3DA,eAkEA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMyC,IAAI,GAAG,CAACvC,GAAd;AACAC,cAAAA,MAAM,CAACsC,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGpC,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqC,cAAAA,eAAe,EAAEtC;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlEA,eAyEA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMqC,IAAI,GAAG,CAACnC,EAAd;AACAC,cAAAA,KAAK,CAACkC,IAAD,CAAL;AACEA,cAAAA,IAAI,GAAGhC,UAAU,CAAC,KAAD,CAAb,GAAwBA,UAAU,CAAC,MAAD,CAAtC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEiC,cAAAA,eAAe,EAAElC;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzEA,eAgFA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMiC,IAAI,GAAG,CAAC/B,EAAd;AACAC,cAAAA,KAAK,CAAC8B,IAAD,CAAL;AACEA,cAAAA,IAAI,GAAG5B,UAAU,CAAC,KAAD,CAAb,GAAwBA,UAAU,CAAC,MAAD,CAAtC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAE6B,cAAAA,eAAe,EAAE9B;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhFA,eAuFA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAM6B,IAAI,GAAG,CAAC3B,GAAd;AACAC,cAAAA,MAAM,CAAC0B,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGxB,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEyB,cAAAA,eAAe,EAAE1B;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvFA,eA8FA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAC3B,oBAAMyB,IAAI,GAAG,CAACvB,GAAd;AACAC,cAAAA,MAAM,CAACsB,IAAD,CAAN;AACEA,cAAAA,IAAI,GAAGpB,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,aAJG;AAKH,YAAA,KAAK,EAAE;AAAEqB,cAAAA,eAAe,EAAEtB;AAAnB,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9FA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlGJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCI,eAoPJ;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACvB,gBAAMqB,IAAI,GAAG,CAACnB,IAAd;AACAC,UAAAA,OAAO,CAACkB,IAAD,CAAP;AACEA,UAAAA,IAAI,GAAGhB,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,SAJD;AAKC,QAAA,KAAK,EAAE;AAAEiB,UAAAA,eAAe,EAAElB;AAAnB,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAUI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACvB,gBAAMiB,IAAI,GAAG,CAACf,IAAd;AACAC,UAAAA,OAAO,CAACc,IAAD,CAAP;AACEA,UAAAA,IAAI,GAAGZ,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,SAJD;AAKC,QAAA,KAAK,EAAE;AAAEa,UAAAA,eAAe,EAAEd;AAAnB,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAiBI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACvB,gBAAMa,IAAI,GAAG,CAACX,GAAd;AACAC,UAAAA,MAAM,CAACU,IAAD,CAAN;AACEA,UAAAA,IAAI,GAAGR,WAAW,CAAC,KAAD,CAAd,GAAyBA,WAAW,CAAC,MAAD,CAAxC;AACD,SAJD;AAKC,QAAA,KAAK,EAAE;AAAES,UAAAA,eAAe,EAAEV;AAAnB,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAwBI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACvB,gBAAMS,IAAI,GAAG,CAACP,IAAd;AACAC,UAAAA,OAAO,CAACM,IAAD,CAAP;AACEA,UAAAA,IAAI,GAAGJ,YAAY,CAAC,KAAD,CAAf,GAA0BA,YAAY,CAAC,MAAD,CAA1C;AACD,SAJD;AAKC,QAAA,KAAK,EAAE;AAAEK,UAAAA,eAAe,EAAEN;AAAnB,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA+BI;AAAM,QAAA,MAAM,EAAE,WAAd;AAA0B,QAAA,MAAM,EAAG,MAAnC;AAAA,gCACI;AAAQ,UAAA,GAAG,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,WAAtB;AAAkC,UAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApPI,eAyRJ,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAA,6BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAzRI,eA2RJ,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAE1H,IAAnB;AAAyB,MAAA,SAAS,EAAGI;AAArC;AAAA;AAAA;AAAA;AAAA,YA3RI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+RH;;GAnYQL,G;;KAAAA,G;AAoYT,eAAeA,GAAf","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React, { useState } from 'react'\nimport Catalog from './Catalog';\nimport ReactDom from 'react-dom';\n\nfunction App(){\n    const [vitA,setVitA] = useState(false);\n    const [vitAColor,setVitAColor] = useState('gray');\n\n    const [vitB1,setVitB1] = useState(false);\n    const [vitB1Color,setVitB1Color] = useState('gray');\n\n    const [vitB2,setVitB2] = useState(false);\n    const [vitB2Color,setVitB2Color] = useState('gray');\n\n    const [vitB3,setVitB3] = useState(false);\n    const [vitB3Color,setVitB3Color] = useState('gray');\n\n    const [vitB5,setVitB5] = useState(false);\n    const [vitB5Color,setVitB5Color] = useState('gray');\n\n    const [vitB6,setVitB6] = useState(false);\n    const [vitB6Color,setVitB6Color] = useState('gray');\n\n    const [vitB7,setVitB7] = useState(false);\n    const [vitB7Color,setVitB7Color] = useState('gray');\n\n    const [vitB9,setVitB9] = useState(false);\n    const [vitB9Color,setVitB9Color] = useState('gray');\n\n    const [vitB12,setVitB12] = useState(false);\n    const [vitB12Color,setVitB12Color] = useState('gray');\n\n    const [vitC,setVitC] = useState(false);\n    const [vitCColor,setVitCColor] = useState('gray');\n\n    const [vitD,setVitD] = useState(false);\n    const [vitDColor,setVitDColor] = useState('gray');\n\n    const [vitE,setVitE] = useState(false);\n    const [vitEColor,setVitEColor] = useState('gray');\n\n    const [vitK,setVitK] = useState(false);\n    const [vitKColor,setVitKColor] = useState('gray');\n\n    const [Calcium,setCalcium] = useState(false);\n    const [CalciumColor,setCalciumColor] = useState('gray');\n\n    const [Phos,Phosset] = useState(false);\n    const [PhosColor,setPhosColor] = useState('gray');\n\n    const [Mag,Magset] = useState(false);\n    const [MagColor,setMagColor] = useState('gray');\n\n    const [Sod,Sodset] = useState(false);\n    const [SodColor,setSodColor] = useState('gray');\n\n    const [Chlo,Chloset] = useState(false);\n    const [ChloColor,setChloColor] = useState('gray');\n\n    const [Pot,Potset] = useState(false);\n    const [PotColor,setPotColor] = useState('gray');\n\n    const [Sul,Sulset] = useState(false);\n    const [SulColor,setSulColor] = useState('gray');\n\n    const [Ir,Ironset] = useState(false);\n    const [IrColor,setIrColor] = useState('gray');\n\n    const [Mang,Mangset] = useState(false);\n    const [MangColor,setMangColor] = useState('gray');\n\n    const [Cop,Copset] = useState(false);\n    const [CopColor,setCopColor] = useState('gray');\n\n    const [Zi,Ziset] = useState(false);\n    const [ZiColor,setZiColor] = useState('gray');\n\n    const [Io,Ioset] = useState(false);\n    const [IoColor,setIoColor] = useState('gray');\n\n    const [Flo,Floset] = useState(false);\n    const [FloColor,setFloColor] = useState('gray');\n\n    const [Sel,Selset] = useState(false);\n    const [SelColor,setSelColor] = useState('gray');\n\n    const [Vegn,Vegnset] = useState(false);\n    const [VegnColor,setVegnColor] = useState('gray');\n\n    const [Vege,Vegeset] = useState(false);\n    const [VegeColor,setVegeColor] = useState('gray');\n\n    const [Hal,Halset] = useState(false);\n    const [HalColor,setHalColor] = useState('gray');\n\n    const [Kosh,Koshset] = useState(false);\n    const [KoshColor,setKoshColor] = useState('gray');\n\n   \n    const element = \"button>1</button>\";\n    ReactDom.render(\n        React.createElement(\"button\", null, \"1\")\n        );\n        \n    return(\n        <div>\n            <div id = \"macros\">\n    <div class = \"header\">Macros</div>\n    <div class = \"options\">\n        <div class = \"macro\">\n        <div class = \"scale\">\n            How much protein?\n            </div>  \n        </div>\n\n        <div class = \"macro\">\n            How much of each fat?\n            <div id = \"scale\">\n                Unsaturated\n            </div>\n            <div class = \"scale\">\n                Omega-3s\n            </div>\n            <div class = \"scale\">\n                Saturated\n            </div>\n            <div class = \"scale\">\n                Omega-6s\n            </div>\n        </div>\n\n        <div class = \"macro\">\n            How much of each Carb?\n            <div class = \"scale\">\n                Starches (Complex Carbohydrates)\n            </div>\n            <div class = \"scale\">\n            </div>\n        </div>\n\n    </div>\n    </div>\n\n    <div id=\"micros\">\n        <div className =\"header\">Micros</div>\n        <h2>Select the ones you want to get more of</h2>\n        <div className = \"choice\">\n            <div className =\"section\">\n            <h1>Vitamins</h1>\n\n            <button onClick={() => {\n        const bool = !vitA;\n        setVitA(bool);\n          bool ? setVitAColor(\"red\")  : setVitAColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitAColor }}>A</button>\n\n            <button onClick ={() => {\n        const bool = !vitB1;\n        setVitB1(!vitB1);\n          bool ? setVitB1Color(\"red\")  : setVitB1Color(\"gray\");   \n        }} \n         style={{ backgroundColor: vitB1Color }} >B1(thiamine)</button>\n\n            <button  onClick ={() => {\n        const bool = !vitB2;\n        setVitB2(!vitB2);\n          bool ? setVitB2Color(\"red\")  : setVitB2Color(\"gray\");   \n        }} \n         style={{ backgroundColor: vitB2Color }}>B2(riboflavin)</button>\n\n            <button  onClick ={() => {\n        const bool = !vitB3;\n        setVitB3(!vitB3);\n        bool ? setVitB3Color(\"red\")  : setVitB3Color(\"gray\");   \n        console.log(vitB3);\n        }} \n         style={{ backgroundColor: vitB3Color }}>B3(niacin)</button>\n            \n            <button  onClick ={() => {\n        const bool = !vitB5;\n            setVitB5(!vitB5); \n          bool ? setVitB5Color(\"red\")  : setVitB5Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB5Color }}>B5(pantothenic acid)</button>\n\n\n            <button onClick ={() => {\n        const bool = !vitB6;\n            setVitB6(!vitB6); \n          bool ? setVitB6Color(\"red\")  : setVitB6Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB6Color }}>B6(pyridoxine)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB7;\n            setVitB7(!vitB7); \n          bool ? setVitB7Color(\"red\")  : setVitB7Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB7Color }} >B7(biotin)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB9;\n            setVitB9(!vitB9); \n          bool ? setVitB9Color(\"red\")  : setVitB9Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB9Color }} >B9(folate)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB12;\n            setVitB12(!vitB12); \n          bool ? setVitB12Color(\"red\")  : setVitB12Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB12Color }}>B12(cobalamin)</button>\n\n            <button onClick={() => {\n        const bool = !vitC;\n        setVitC(bool);\n          bool ? setVitCColor(\"red\")  : setVitCColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitCColor }} >C</button>\n         \n            <button onClick={() => {\n        const bool = !vitD;\n        setVitD(bool);\n          bool ? setVitDColor(\"red\")  : setVitDColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitDColor }}  >D</button>\n\n            <button onClick={() => {\n        const bool = !vitE;\n        setVitE(bool);\n          bool ? setVitEColor(\"red\")  : setVitEColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitEColor }}>E</button>\n\n            <button onClick={() => {\n        const bool = !vitK;\n        setVitK(bool);\n          bool ? setVitKColor(\"red\")  : setVitKColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitKColor }}>K</button>\n            </div>\n\n            <div class =\"section\">\n            <h1>Minerals</h1>\n\n            <button onClick={() => {\n        const bool = !Calcium;\n        setCalcium(bool);\n          bool ? setCalciumColor(\"red\")  : setCalciumColor(\"gray\");\n        }} \n         style={{ backgroundColor: CalciumColor }}>Calcium</button>\n\n            <button onClick={() => {\n        const bool = !Phos;\n        Phosset(bool);\n          bool ? setPhosColor(\"red\")  : setPhosColor(\"gray\");\n        }} \n         style={{ backgroundColor: PhosColor }}>Phosphorus</button>\n\n            <button onClick={() => {\n        const bool = !Mag;\n        Magset(bool);\n          bool ? setMagColor(\"red\")  : setMagColor(\"gray\");\n        }} \n         style={{ backgroundColor: MagColor }}>Magnesium</button>\n\n            <button onClick={() => {\n        const bool = !Sod;\n        Sodset(bool);\n          bool ? setSodColor(\"red\")  : setSodColor(\"gray\");\n        }} \n         style={{ backgroundColor: SodColor }}>Sodium</button>\n\n            <button  onClick={() => {\n        const bool = !Chlo;\n        Chloset(bool);\n          bool ? setChloColor(\"red\")  : setChloColor(\"gray\");\n        }} \n         style={{ backgroundColor: ChloColor }}>Chloride</button>\n\n            <button onClick={() => {\n        const bool = !Pot;\n        Potset(bool);\n          bool ? setPotColor(\"red\")  : setPotColor(\"gray\");\n        }} \n         style={{ backgroundColor: PotColor }}>Potassium</button>\n\n            <button onClick={() => {\n        const bool = !Sul;\n        Sulset(bool);\n          bool ? setSulColor(\"red\")  : setSulColor(\"gray\");\n        }} \n         style={{ backgroundColor: SulColor }}>Sulfur</button>\n\n            <button onClick={() => {\n        const bool = !Ir;\n        Ironset(bool);\n          bool ? setIrColor(\"red\")  : setIrColor(\"gray\");\n        }} \n         style={{ backgroundColor: IrColor }}>Iron</button>\n\n            <button onClick={() => {\n        const bool = !Mang;\n        Mangset(bool);\n          bool ? setMangColor(\"red\")  : setMangColor(\"gray\");\n        }} \n         style={{ backgroundColor: MangColor }}>Manganese</button>\n\n            <button onClick={() => {\n        const bool = !Cop;\n        Copset(bool);\n          bool ? setCopColor(\"red\")  : setCopColor(\"gray\");\n        }} \n         style={{ backgroundColor: CopColor }}>Copper</button>\n\n            <button onClick={() => {\n        const bool = !Zi;\n        Ziset(bool);\n          bool ? setZiColor(\"red\")  : setZiColor(\"gray\");\n        }} \n         style={{ backgroundColor: ZiColor }}>Zinc</button>\n\n            <button onClick={() => {\n        const bool = !Io;\n        Ioset(bool);\n          bool ? setIoColor(\"red\")  : setIoColor(\"gray\");\n        }} \n         style={{ backgroundColor: IoColor }}>Iodine</button>\n\n            <button onClick={() => {\n        const bool = !Flo;\n        Floset(bool);\n          bool ? setFloColor(\"red\")  : setFloColor(\"gray\");\n        }} \n         style={{ backgroundColor: FloColor }}>Flouride</button>\n\n            <button onClick={() => {\n        const bool = !Sel;\n        Selset(bool);\n          bool ? setSelColor(\"red\")  : setSelColor(\"gray\");\n        }} \n         style={{ backgroundColor: SelColor }}>Selenium</button>\n\n            </div>\n\n        </div>\n    </div>\n    <div id=\"restrictions\">\n        <h1>Do any of these apply to you?</h1>\n\n        <button onClick={() => {\n        const bool = !Vegn;\n        Vegnset(bool);\n          bool ? setVegnColor(\"red\")  : setVegnColor(\"gray\");\n        }} \n         style={{ backgroundColor: VegnColor }}>Vegan</button>\n\n        <button onClick={() => {\n        const bool = !Vege;\n        Vegeset(bool);\n          bool ? setVegeColor(\"red\")  : setVegeColor(\"gray\");\n        }} \n         style={{ backgroundColor: VegeColor }}>Vegetarian</button>\n\n        <button onClick={() => {\n        const bool = !Hal;\n        Halset(bool);\n          bool ? setHalColor(\"red\")  : setHalColor(\"gray\");\n        }} \n         style={{ backgroundColor: HalColor }}>Halal</button>\n\n        <button onClick={() => {\n        const bool = !Kosh;\n        Koshset(bool);\n          bool ? setKoshColor(\"red\")  : setKoshColor(\"gray\");\n        }} \n         style={{ backgroundColor: KoshColor }}>Kosher</button>\n\n        <form action =\"source.js\" method = \"post\">\n            <label  for=\"Allergies\">Allergies:</label>\n            <input type=\"text\" id=\"allergies\" name=\"allergies\"></input>\n        <button>Select</button>\n            </form>\n    </div>\n    <NavLink to=\"/catalog\"><button>\n    Next</button></NavLink>\n    <Catalog VitaminA={vitA} VitaminB1 ={vitB1}/>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}
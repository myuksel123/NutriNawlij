{"ast":null,"code":"import { deepExtend, defined, isFunction, setDefaultOptions } from '../../common';\nimport { MAX_VALUE, MIN_VALUE } from '../../common/constants';\nimport { Box, ChartElement } from '../../core';\nimport CategoricalChart from '../categorical-chart';\nimport evalOptions from '../utils/eval-options';\nimport colorScale from './color-scale';\nimport HeatmapPoint from './heatmap-point';\n\nvar HeatmapChart = function (ChartElement) {\n  function HeatmapChart(plotArea, options) {\n    ChartElement.call(this, options);\n    this.plotArea = plotArea;\n    this.chartService = plotArea.chartService;\n\n    this._initFields();\n\n    this.render();\n  }\n\n  if (ChartElement) HeatmapChart.__proto__ = ChartElement;\n  HeatmapChart.prototype = Object.create(ChartElement && ChartElement.prototype);\n  HeatmapChart.prototype.constructor = HeatmapChart;\n\n  HeatmapChart.prototype._initFields = function _initFields() {\n    this.points = [];\n    this.seriesOptions = [];\n    this.valueRange = {\n      min: MAX_VALUE,\n      max: MIN_VALUE\n    };\n    this._evalSeries = [];\n  };\n\n  HeatmapChart.prototype.render = function render() {\n    this.setRange();\n    this.traverseDataPoints(this.addValue.bind(this));\n  };\n\n  HeatmapChart.prototype.setRange = function setRange() {\n    var this$1 = this;\n    var ref = this;\n    var series = ref.options.series;\n\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var currentSeries = series[seriesIx];\n\n      for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n\n        var valueFields = ref$1.valueFields;\n\n        if (defined(valueFields.value) && valueFields.value !== null) {\n          this$1.valueRange.min = Math.min(this$1.valueRange.min, valueFields.value);\n          this$1.valueRange.max = Math.max(this$1.valueRange.max, valueFields.value);\n        }\n      }\n    }\n  };\n\n  HeatmapChart.prototype.addValue = function addValue(value, fields) {\n    var point;\n\n    if (value && defined(value.value) && value.value !== null) {\n      point = this.createPoint(value, fields);\n\n      if (point) {\n        Object.assign(point, fields);\n      }\n    }\n\n    this.points.push(point);\n  };\n\n  HeatmapChart.prototype.evalPointOptions = function evalPointOptions(options, value, fields) {\n    var series = fields.series;\n    var seriesIx = fields.seriesIx;\n    var state = {\n      defaults: series._defaults,\n      excluded: [\"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\"]\n    };\n    var doEval = this._evalSeries[seriesIx];\n\n    if (!defined(doEval)) {\n      this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n    }\n\n    var pointOptions = options;\n\n    if (doEval) {\n      pointOptions = deepExtend({}, options);\n      evalOptions(pointOptions, {\n        value: value,\n        series: series,\n        dataItem: fields.dataItem,\n        min: this.valueRange.min,\n        max: this.valueRange.max\n      }, state);\n    }\n\n    return pointOptions;\n  };\n\n  HeatmapChart.prototype.pointType = function pointType() {\n    return HeatmapPoint;\n  };\n\n  HeatmapChart.prototype.pointOptions = function pointOptions(series, seriesIx) {\n    var options = this.seriesOptions[seriesIx];\n\n    if (!options) {\n      var defaults = this.pointType().prototype.defaults;\n      this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n        markers: {\n          opacity: series.opacity\n        },\n        tooltip: {\n          format: this.options.tooltip.format\n        },\n        labels: {\n          format: this.options.labels.format\n        }\n      }, series);\n    }\n\n    return options;\n  };\n\n  HeatmapChart.prototype.createPoint = function createPoint(value, fields) {\n    var series = fields.series;\n    var pointOptions = this.pointOptions(series, fields.seriesIx);\n    var color = fields.color || series.color;\n    pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n    if (isFunction(series.color)) {\n      color = pointOptions.color;\n    } else if (this.valueRange.max !== 0) {\n      var scale = colorScale(color);\n      color = scale(value.value / this.valueRange.max);\n    }\n\n    var point = new HeatmapPoint(value, pointOptions);\n    point.color = color;\n    this.append(point);\n    return point;\n  };\n\n  HeatmapChart.prototype.seriesAxes = function seriesAxes(series) {\n    var xAxisName = series.xAxis;\n    var yAxisName = series.yAxis;\n    var plotArea = this.plotArea;\n    var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n    var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n    if (!xAxis) {\n      throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n    }\n\n    if (!yAxis) {\n      throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n    }\n\n    return {\n      xAxis: xAxis,\n      yAxis: yAxis\n    };\n  };\n\n  HeatmapChart.prototype.reflow = function reflow(targetBox) {\n    var this$1 = this;\n    var chartPoints = this.points;\n    var limit = !this.options.clip;\n    var pointIx = 0;\n    this.traverseDataPoints(function (value, fields) {\n      var point = chartPoints[pointIx++];\n      var ref = this$1.seriesAxes(fields.series);\n      var xAxis = ref.xAxis;\n      var yAxis = ref.yAxis;\n      var indexX = xAxis.categoryIndex(value.x);\n      var indexY = yAxis.categoryIndex(value.y);\n      var slotX = xAxis.getSlot(indexX, indexX, limit);\n      var slotY = yAxis.getSlot(indexY, indexY, limit);\n\n      if (point) {\n        if (slotX && slotY) {\n          var pointSlot = this$1.pointSlot(slotX, slotY);\n          point.reflow(pointSlot);\n        } else {\n          point.visible = false;\n        }\n      }\n    });\n    this.box = targetBox;\n  };\n\n  HeatmapChart.prototype.pointSlot = function pointSlot(slotX, slotY) {\n    return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n  };\n\n  HeatmapChart.prototype.traverseDataPoints = function traverseDataPoints(callback) {\n    var this$1 = this;\n    var ref = this;\n    var series = ref.options.series;\n\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var currentSeries = series[seriesIx];\n      var ref$1 = this$1.seriesAxes(currentSeries);\n      var xAxis = ref$1.xAxis;\n      var yAxis = ref$1.yAxis;\n      var xRange = xAxis.currentRangeIndices();\n      var yRange = yAxis.currentRangeIndices();\n\n      for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n        var ref$2 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n\n        var value = ref$2.valueFields;\n        var fields = ref$2.fields;\n        var xIndex = xAxis.totalIndex(value.x);\n        var yIndex = yAxis.totalIndex(value.y);\n        var xIn = xRange.min <= xIndex && xIndex <= xRange.max;\n        var yIn = yRange.min <= yIndex && yIndex <= yRange.max;\n\n        if (xIn && yIn) {\n          callback(value, deepExtend({\n            pointIx: pointIx,\n            series: currentSeries,\n            seriesIx: seriesIx,\n            dataItem: currentSeries.data[pointIx],\n            owner: this$1\n          }, fields));\n        }\n      }\n    }\n  };\n\n  HeatmapChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    var value = point.value;\n    return this.chartService.format.auto(format, value.x, value.y, value.value);\n  };\n\n  HeatmapChart.prototype.animationPoints = function animationPoints() {\n    var points = this.points;\n    var result = [];\n\n    for (var idx = 0; idx < points.length; idx++) {\n      result.push((points[idx] || {}).marker);\n    }\n\n    return result;\n  };\n\n  return HeatmapChart;\n}(ChartElement);\n\nsetDefaultOptions(HeatmapChart, {\n  series: [],\n  tooltip: {\n    format: \"{0}, {1}: {2}\"\n  },\n  labels: {\n    format: \"{2}\"\n  },\n  clip: true\n});\ndeepExtend(HeatmapChart.prototype, {\n  _bindPoint: CategoricalChart.prototype._bindPoint\n});\nexport default HeatmapChart;","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-charts/dist/es/chart/heatmap-chart/heatmap-chart.js"],"names":["deepExtend","defined","isFunction","setDefaultOptions","MAX_VALUE","MIN_VALUE","Box","ChartElement","CategoricalChart","evalOptions","colorScale","HeatmapPoint","HeatmapChart","plotArea","options","call","chartService","_initFields","render","__proto__","prototype","Object","create","constructor","points","seriesOptions","valueRange","min","max","_evalSeries","setRange","traverseDataPoints","addValue","bind","this$1","ref","series","seriesIx","length","currentSeries","pointIx","data","ref$1","_bindPoint","valueFields","value","Math","fields","point","createPoint","assign","push","evalPointOptions","state","defaults","_defaults","excluded","doEval","pointOptions","dataItem","pointType","markers","opacity","tooltip","format","labels","color","scale","append","seriesAxes","xAxisName","xAxis","yAxisName","yAxis","namedXAxes","axisX","namedYAxes","axisY","Error","reflow","targetBox","chartPoints","limit","clip","indexX","categoryIndex","x","indexY","y","slotX","getSlot","slotY","pointSlot","visible","box","x1","y1","x2","y2","callback","xRange","currentRangeIndices","yRange","ref$2","xIndex","totalIndex","yIndex","xIn","yIn","owner","formatPointValue","auto","animationPoints","result","idx","marker"],"mappings":"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","sourcesContent":["import { deepExtend, defined, isFunction, setDefaultOptions } from '../../common';\nimport { MAX_VALUE, MIN_VALUE } from '../../common/constants';\nimport { Box, ChartElement } from '../../core';\nimport CategoricalChart from '../categorical-chart';\nimport evalOptions from '../utils/eval-options';\nimport colorScale from './color-scale';\nimport HeatmapPoint from './heatmap-point';\n\nvar HeatmapChart = (function (ChartElement) {\n    function HeatmapChart(plotArea, options) {\n        ChartElement.call(this, options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this._initFields();\n\n        this.render();\n    }\n\n    if ( ChartElement ) HeatmapChart.__proto__ = ChartElement;\n    HeatmapChart.prototype = Object.create( ChartElement && ChartElement.prototype );\n    HeatmapChart.prototype.constructor = HeatmapChart;\n\n    HeatmapChart.prototype._initFields = function _initFields () {\n        this.points = [];\n        this.seriesOptions = [];\n        this.valueRange = { min: MAX_VALUE, max: MIN_VALUE };\n        this._evalSeries = [];\n    };\n\n    HeatmapChart.prototype.render = function render () {\n        this.setRange();\n        this.traverseDataPoints(this.addValue.bind(this));\n    };\n\n    HeatmapChart.prototype.setRange = function setRange () {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref.options.series;\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var currentSeries = series[seriesIx];\n\n            for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                var valueFields = ref$1.valueFields;\n                if (defined(valueFields.value) && valueFields.value !== null) {\n                    this$1.valueRange.min = Math.min(this$1.valueRange.min, valueFields.value);\n                    this$1.valueRange.max = Math.max(this$1.valueRange.max, valueFields.value);\n                }\n            }\n        }\n    };\n\n    HeatmapChart.prototype.addValue = function addValue (value, fields) {\n        var point;\n        if (value && defined(value.value) && value.value !== null) {\n            point = this.createPoint(value, fields);\n            if (point) {\n                Object.assign(point, fields);\n            }\n        }\n\n        this.points.push(point);\n    };\n\n    HeatmapChart.prototype.evalPointOptions = function evalPointOptions (options, value, fields) {\n        var series = fields.series;\n        var seriesIx = fields.seriesIx;\n        var state = { defaults: series._defaults, excluded: [ \"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\" ] };\n\n        var doEval = this._evalSeries[seriesIx];\n        if (!defined(doEval)) {\n            this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n        }\n\n        var pointOptions = options;\n        if (doEval) {\n            pointOptions = deepExtend({}, options);\n            evalOptions(pointOptions, {\n                value: value,\n                series: series,\n                dataItem: fields.dataItem,\n                min: this.valueRange.min,\n                max: this.valueRange.max\n            }, state);\n        }\n\n        return pointOptions;\n    };\n\n    HeatmapChart.prototype.pointType = function pointType () {\n        return HeatmapPoint;\n    };\n\n    HeatmapChart.prototype.pointOptions = function pointOptions (series, seriesIx) {\n        var options = this.seriesOptions[seriesIx];\n        if (!options) {\n            var defaults = this.pointType().prototype.defaults;\n            this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                markers: {\n                    opacity: series.opacity\n                },\n                tooltip: {\n                    format: this.options.tooltip.format\n                },\n                labels: {\n                    format: this.options.labels.format\n                }\n            }, series);\n        }\n\n        return options;\n    };\n\n    HeatmapChart.prototype.createPoint = function createPoint (value, fields) {\n        var series = fields.series;\n        var pointOptions = this.pointOptions(series, fields.seriesIx);\n        var color = fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        } else if (this.valueRange.max !== 0) {\n            var scale = colorScale(color);\n            color = scale(value.value / this.valueRange.max);\n        }\n\n        var point = new HeatmapPoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    };\n\n    HeatmapChart.prototype.seriesAxes = function seriesAxes (series) {\n        var xAxisName = series.xAxis;\n        var yAxisName = series.yAxis;\n        var plotArea = this.plotArea;\n        var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n        var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n        if (!xAxis) {\n            throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n        }\n\n        if (!yAxis) {\n            throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n        }\n\n        return { xAxis: xAxis, yAxis: yAxis };\n    };\n\n    HeatmapChart.prototype.reflow = function reflow (targetBox) {\n        var this$1 = this;\n\n        var chartPoints = this.points;\n        var limit = !this.options.clip;\n        var pointIx = 0;\n\n\n        this.traverseDataPoints(function (value, fields) {\n            var point = chartPoints[pointIx++];\n            var ref = this$1.seriesAxes(fields.series);\n            var xAxis = ref.xAxis;\n            var yAxis = ref.yAxis;\n            var indexX = xAxis.categoryIndex(value.x);\n            var indexY = yAxis.categoryIndex(value.y);\n            var slotX = xAxis.getSlot(indexX, indexX, limit);\n            var slotY = yAxis.getSlot(indexY, indexY, limit);\n\n            if (point) {\n                if (slotX && slotY) {\n                    var pointSlot = this$1.pointSlot(slotX, slotY);\n                    point.reflow(pointSlot);\n                } else {\n                    point.visible = false;\n                }\n            }\n        });\n\n        this.box = targetBox;\n    };\n\n    HeatmapChart.prototype.pointSlot = function pointSlot (slotX, slotY) {\n        return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n    };\n\n    HeatmapChart.prototype.traverseDataPoints = function traverseDataPoints (callback) {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref.options.series;\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var currentSeries = series[seriesIx];\n            var ref$1 = this$1.seriesAxes(currentSeries);\n            var xAxis = ref$1.xAxis;\n            var yAxis = ref$1.yAxis;\n            var xRange = xAxis.currentRangeIndices();\n            var yRange = yAxis.currentRangeIndices();\n\n            for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                var ref$2 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                var value = ref$2.valueFields;\n                var fields = ref$2.fields;\n                var xIndex = xAxis.totalIndex(value.x);\n                var yIndex = yAxis.totalIndex(value.y);\n                var xIn = xRange.min <= xIndex && xIndex <= xRange.max;\n                var yIn = yRange.min <= yIndex && yIndex <= yRange.max;\n\n                if (xIn && yIn) {\n                    callback(value, deepExtend({\n                        pointIx: pointIx,\n                        series: currentSeries,\n                        seriesIx: seriesIx,\n                        dataItem: currentSeries.data[pointIx],\n                        owner: this$1\n                    }, fields));\n                }\n            }\n        }\n    };\n\n    HeatmapChart.prototype.formatPointValue = function formatPointValue (point, format) {\n        var value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y, value.value);\n    };\n\n    HeatmapChart.prototype.animationPoints = function animationPoints () {\n        var points = this.points;\n        var result = [];\n        for (var idx = 0; idx < points.length; idx++) {\n            result.push((points[idx] || {}).marker);\n        }\n        return result;\n    };\n\n    return HeatmapChart;\n}(ChartElement));\nsetDefaultOptions(HeatmapChart, {\n    series: [],\n    tooltip: {\n        format: \"{0}, {1}: {2}\"\n    },\n    labels: {\n        format: \"{2}\"\n    },\n    clip: true\n});\ndeepExtend(HeatmapChart.prototype, {\n    _bindPoint: CategoricalChart.prototype._bindPoint\n});\n\nexport default HeatmapChart;\n"]},"metadata":{},"sourceType":"module"}
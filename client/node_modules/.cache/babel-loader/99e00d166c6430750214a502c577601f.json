{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = props => {\n  _s();\n\n  //post data to SQL?\n  const [data, setData] = useState([]);\n  const [results, setResults] = useState([]);\n  console.log(JSON.stringify(props.location.state));\n  useEffect(() => {\n    fetch('/data', {\n      method: 'post',\n      body: JSON.stringify(props.location.state),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => res.json()).then(data => setData(data));\n  }, []);\n  console.log(data);\n  let countfood = 0;\n  let previous = \"\";\n  let nutritiousinfo = [];\n  let nutritionamount = [];\n  let nutritionunit = [];\n\n  for (let i = 0; i < data.rowCount; i++) {\n    if (i == 0 || data.rows[i].description == previous) {\n      nutritiousinfo.push(data.rows[i].name);\n      nutritionamount.push(data.rows[i].amount);\n      nutritionunit.push(data.rows[i].unit);\n    } else {\n      let string = `<div>` + previous + `</div>`;\n      let mydiv = document.createElement('div');\n\n      for (let j = 0; j < nutritiousinfo.length; j++) {\n        string = string + `<div>` + nutritiousinfo[j] + `: ` + nutritionamount[j] + ` ` + nutritionunit[j] + '</div>';\n      }\n\n      mydiv.innerHTML = string;\n      mydiv.classList = \"fooditem\";\n      document.getElementById('hello').appendChild(mydiv);\n      nutritiousinfo = [];\n      nutritionamount = [];\n      nutritionunit = [];\n      nutritiousinfo.push(data.rows[i].name);\n      nutritionamount.push(data.rows[i].amount);\n      nutritionunit.push(data.rows[i].unit);\n      countfood++;\n    }\n\n    previous = data.rows[i].description;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hello\",\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"sSt/6LGXKPSM3q9qmNvPylT1pCc=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx"],"names":["React","useState","useEffect","Catalog","props","data","setData","results","setResults","console","log","JSON","stringify","location","state","fetch","method","body","headers","then","res","json","countfood","previous","nutritiousinfo","nutritionamount","nutritionunit","i","rowCount","rows","description","push","name","amount","unit","string","mydiv","document","createElement","j","length","innerHTML","classList","getElementById","appendChild"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState,useEffect} from 'react';\n\n\nconst Catalog = (props) =>{\n\n    //post data to SQL?\n    const[data,setData] = useState([]);\n    const[results,setResults]=useState([]);\n    console.log(JSON.stringify(props.location.state))\n    useEffect(()=>{\n    fetch('/data',{\n        method: 'post',\n\n        body: JSON.stringify(props.location.state),\n\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        }\n    \n    }).then(res=>res.json()).then(data=>setData(data));\n    }, []);\n    console.log(data);\nlet countfood=0;\nlet previous = \"\";\nlet nutritiousinfo = [];\nlet nutritionamount =[];\nlet nutritionunit = [];\n for(let i=0; i<data.rowCount; i++){\n    if(i ==0 || data.rows[i].description ==previous){\n        nutritiousinfo.push(data.rows[i].name);\n        nutritionamount.push(data.rows[i].amount);\n        nutritionunit.push(data.rows[i].unit);\n    }\n    else{\n    let string = `<div>` +previous+ `</div>`;\n    let mydiv = document.createElement('div');\n    for(let j=0; j<nutritiousinfo.length;j++){\n        string = string + `<div>` +nutritiousinfo[j] +\n        `: ` + nutritionamount[j] +` `+\n        nutritionunit[j] + '</div>';\n    }\n    mydiv.innerHTML = string;\n    mydiv.classList = \"fooditem\";\n    document.getElementById('hello').appendChild(mydiv);\n    nutritiousinfo=[];\n    nutritionamount =[];\n    nutritionunit =[];\n    nutritiousinfo.push(data.rows[i].name);\n    nutritionamount.push(data.rows[i].amount);\n    nutritionunit.push(data.rows[i].unit);\n    countfood++;\n    }\n    previous = data.rows[i].description;\n}\n\n    return(\n        <div id='hello'>\n            {results}\n        </div>\n    );\n}\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}
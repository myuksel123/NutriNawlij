{"ast":null,"code":"import toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nimport { limitValue } from '../../drawing-utils'; // Limit the zoom rate between 1% and 90% per mousewheel event.\n// At zoom rates close to 100% the axis range quickly becomes 0.\n\nvar MIN_RATE = 0.01;\nvar MAX_RATE = 0.9;\nvar DEFAULT_RATE = 0.3;\n\nvar MousewheelZoom = function (Class) {\n  function MousewheelZoom(chart, options) {\n    Class.call(this);\n    this.chart = chart;\n    this.options = deepExtend({\n      rate: DEFAULT_RATE\n    }, this.options, options);\n  }\n\n  if (Class) MousewheelZoom.__proto__ = Class;\n  MousewheelZoom.prototype = Object.create(Class && Class.prototype);\n  MousewheelZoom.prototype.constructor = MousewheelZoom;\n\n  MousewheelZoom.prototype.updateRanges = function updateRanges(delta, coords) {\n    var this$1 = this;\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var axisRanges = [];\n    var axes = this.chart._plotArea.axes;\n\n    for (var idx = 0; idx < axes.length; idx++) {\n      var axis = axes[idx];\n      var vertical = axis.options.vertical;\n\n      if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n        var rate = limitValue(this$1.options.rate, MIN_RATE, MAX_RATE);\n        var range = axis.zoomRange(-delta * rate, coords);\n\n        if (range) {\n          axisRanges.push({\n            axis: axis,\n            range: range\n          });\n        }\n      }\n    }\n\n    this.axisRanges = axisRanges;\n    return toChartAxisRanges(axisRanges);\n  };\n\n  MousewheelZoom.prototype.zoom = function zoom() {\n    var axisRanges = this.axisRanges;\n    var plotArea = this.chart._plotArea;\n\n    if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n      for (var idx = 0; idx < axisRanges.length; idx++) {\n        var axisRange = axisRanges[idx];\n        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n      }\n\n      plotArea.redraw(plotArea.panes);\n    }\n  };\n\n  MousewheelZoom.prototype.destroy = function destroy() {\n    delete this.chart;\n  };\n\n  return MousewheelZoom;\n}(Class);\n\nexport default MousewheelZoom;","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-charts/dist/es/chart/pan-and-zoom/mousewheel-zoom.js"],"names":["toChartAxisRanges","X","Y","Class","deepExtend","limitValue","MIN_RATE","MAX_RATE","DEFAULT_RATE","MousewheelZoom","chart","options","call","rate","__proto__","prototype","Object","create","constructor","updateRanges","delta","coords","this$1","lock","toLowerCase","axisRanges","axes","_plotArea","idx","length","axis","vertical","zoomRange","range","push","zoom","plotArea","updateAxisOptions","axisRange","redraw","panes","destroy"],"mappings":"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","sourcesContent":["\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nimport { limitValue } from '../../drawing-utils';\n\n// Limit the zoom rate between 1% and 90% per mousewheel event.\n// At zoom rates close to 100% the axis range quickly becomes 0.\nvar MIN_RATE = 0.01;\nvar MAX_RATE = 0.9;\nvar DEFAULT_RATE = 0.3;\n\nvar MousewheelZoom = (function (Class) {\n    function MousewheelZoom(chart, options) {\n        Class.call(this);\n\n        this.chart = chart;\n        this.options = deepExtend({\n            rate: DEFAULT_RATE\n        }, this.options, options);\n    }\n\n    if ( Class ) MousewheelZoom.__proto__ = Class;\n    MousewheelZoom.prototype = Object.create( Class && Class.prototype );\n    MousewheelZoom.prototype.constructor = MousewheelZoom;\n\n    MousewheelZoom.prototype.updateRanges = function updateRanges (delta, coords) {\n        var this$1 = this;\n\n        var lock = (this.options.lock || \"\").toLowerCase();\n        var axisRanges = [];\n        var axes = this.chart._plotArea.axes;\n\n        for (var idx = 0; idx < axes.length; idx++) {\n            var axis = axes[idx];\n            var vertical = axis.options.vertical;\n\n            if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                var rate = limitValue(this$1.options.rate, MIN_RATE, MAX_RATE);\n                var range = axis.zoomRange(-delta * rate, coords);\n\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n    };\n\n    MousewheelZoom.prototype.zoom = function zoom () {\n        var axisRanges = this.axisRanges;\n        var plotArea = this.chart._plotArea;\n\n        if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    };\n\n    MousewheelZoom.prototype.destroy = function destroy () {\n        delete this.chart;\n    };\n\n    return MousewheelZoom;\n}(Class));\n\nexport default MousewheelZoom;\n"]},"metadata":{},"sourceType":"module"}
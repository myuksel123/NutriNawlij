{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { round, setDefaultOptions } from '../common';\nimport { CENTER, CIRCLE, COORD_PRECISION, CROSS, ROUNDED_RECT, TRIANGLE } from '../common/constants';\nimport { valueOrDefault } from '../drawing-utils';\nimport BoxElement from './box-element';\n\nvar ShapeElement = function (BoxElement) {\n  function ShapeElement(options, pointData) {\n    BoxElement.call(this, options);\n    this.pointData = pointData;\n  }\n\n  if (BoxElement) ShapeElement.__proto__ = BoxElement;\n  ShapeElement.prototype = Object.create(BoxElement && BoxElement.prototype);\n  ShapeElement.prototype.constructor = ShapeElement;\n\n  ShapeElement.prototype.getElement = function getElement() {\n    var ref = this;\n    var options = ref.options;\n    var box = ref.paddingBox;\n    var type = options.type;\n    var rotation = options.rotation;\n    var center = box.center();\n    var halfWidth = box.width() / 2;\n    var halfHeight = box.height() / 2;\n\n    if (!options.visible || !this.hasBox()) {\n      return null;\n    }\n\n    var style = this.visualStyle();\n    var element;\n\n    if (type === CIRCLE) {\n      element = new draw.Circle(new geom.Circle([round(box.x1 + halfWidth, COORD_PRECISION), round(box.y1 + halfHeight, COORD_PRECISION)], Math.min(halfWidth, halfHeight)), style);\n    } else if (type === TRIANGLE) {\n      element = draw.Path.fromPoints([[box.x1 + halfWidth, box.y1], [box.x1, box.y2], [box.x2, box.y2]], style).close();\n    } else if (type === CROSS) {\n      element = new draw.MultiPath(style);\n      element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n      element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n    } else {\n      var rect = box.toRect();\n\n      if (type === ROUNDED_RECT) {\n        var borderRadius = valueOrDefault(options.borderRadius, rect.width() / 5);\n        rect.setCornerRadius(borderRadius);\n      }\n\n      element = draw.Path.fromRect(rect, style);\n    }\n\n    if (rotation) {\n      element.transform(geom.transform().rotate(-rotation, [center.x, center.y]));\n    }\n\n    element.options.zIndex = options.zIndex;\n    return element;\n  };\n\n  ShapeElement.prototype.createElement = function createElement() {\n    var this$1 = this;\n    var customVisual = this.options.visual;\n    var pointData = this.pointData || {};\n    var visual;\n\n    if (customVisual) {\n      visual = customVisual({\n        value: pointData.value,\n        dataItem: pointData.dataItem,\n        sender: this.getSender(),\n        series: pointData.series,\n        category: pointData.category,\n        rect: this.paddingBox.toRect(),\n        options: this.visualOptions(),\n        createVisual: function () {\n          return this$1.getElement();\n        }\n      });\n    } else {\n      visual = this.getElement();\n    }\n\n    return visual;\n  };\n\n  ShapeElement.prototype.visualOptions = function visualOptions() {\n    var options = this.options;\n    return {\n      background: options.background,\n      border: options.border,\n      margin: options.margin,\n      padding: options.padding,\n      type: options.type,\n      size: options.width,\n      visible: options.visible\n    };\n  };\n\n  ShapeElement.prototype.createVisual = function createVisual() {\n    this.visual = this.createElement();\n  };\n\n  return ShapeElement;\n}(BoxElement);\n\nsetDefaultOptions(ShapeElement, {\n  type: CIRCLE,\n  align: CENTER,\n  vAlign: CENTER\n});\nexport default ShapeElement;","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-charts/dist/es/core/shape-element.js"],"names":["drawing","draw","geometry","geom","round","setDefaultOptions","CENTER","CIRCLE","COORD_PRECISION","CROSS","ROUNDED_RECT","TRIANGLE","valueOrDefault","BoxElement","ShapeElement","options","pointData","call","__proto__","prototype","Object","create","constructor","getElement","ref","box","paddingBox","type","rotation","center","halfWidth","width","halfHeight","height","visible","hasBox","style","visualStyle","element","Circle","x1","y1","Math","min","Path","fromPoints","y2","x2","close","MultiPath","moveTo","lineTo","rect","toRect","borderRadius","setCornerRadius","fromRect","transform","rotate","x","y","zIndex","createElement","this$1","customVisual","visual","value","dataItem","sender","getSender","series","category","visualOptions","createVisual","background","border","margin","padding","size","align","vAlign"],"mappings":"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","sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { round, setDefaultOptions } from '../common';\nimport { CENTER, CIRCLE, COORD_PRECISION, CROSS, ROUNDED_RECT, TRIANGLE } from '../common/constants';\nimport { valueOrDefault } from '../drawing-utils';\nimport BoxElement from './box-element';\n\nvar ShapeElement = (function (BoxElement) {\n    function ShapeElement(options, pointData) {\n        BoxElement.call(this, options);\n\n        this.pointData = pointData;\n    }\n\n    if ( BoxElement ) ShapeElement.__proto__ = BoxElement;\n    ShapeElement.prototype = Object.create( BoxElement && BoxElement.prototype );\n    ShapeElement.prototype.constructor = ShapeElement;\n\n    ShapeElement.prototype.getElement = function getElement () {\n        var ref = this;\n        var options = ref.options;\n        var box = ref.paddingBox;\n        var type = options.type;\n        var rotation = options.rotation;\n        var center = box.center();\n        var halfWidth = box.width() / 2;\n        var halfHeight = box.height() / 2;\n\n        if (!options.visible || !this.hasBox()) {\n            return null;\n        }\n\n        var style = this.visualStyle();\n        var element;\n\n        if (type === CIRCLE) {\n            element = new draw.Circle(\n                new geom.Circle([\n                    round(box.x1 + halfWidth, COORD_PRECISION),\n                    round(box.y1 + halfHeight, COORD_PRECISION)\n                ], Math.min(halfWidth, halfHeight)),\n                style\n            );\n        } else if (type === TRIANGLE) {\n            element = draw.Path.fromPoints([\n                [ box.x1 + halfWidth, box.y1 ],\n                [ box.x1, box.y2 ],\n                [ box.x2, box.y2 ]\n            ], style).close();\n        } else if (type === CROSS) {\n            element = new draw.MultiPath(style);\n\n            element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n            element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n        } else {\n            var rect = box.toRect();\n            if (type === ROUNDED_RECT) {\n                var borderRadius = valueOrDefault(options.borderRadius, rect.width() / 5);\n                rect.setCornerRadius(borderRadius);\n            }\n\n            element = draw.Path.fromRect(rect, style);\n        }\n\n        if (rotation) {\n            element.transform(geom.transform()\n                .rotate(-rotation, [ center.x, center.y ])\n            );\n        }\n\n        element.options.zIndex = options.zIndex;\n\n        return element;\n    };\n\n    ShapeElement.prototype.createElement = function createElement () {\n        var this$1 = this;\n\n        var customVisual = this.options.visual;\n        var pointData = this.pointData || {};\n        var visual;\n\n        if (customVisual) {\n            visual = customVisual({\n                value: pointData.value,\n                dataItem: pointData.dataItem,\n                sender: this.getSender(),\n                series: pointData.series,\n                category: pointData.category,\n                rect: this.paddingBox.toRect(),\n                options: this.visualOptions(),\n                createVisual: function () { return this$1.getElement(); }\n            });\n        } else {\n            visual = this.getElement();\n        }\n\n        return visual;\n    };\n\n    ShapeElement.prototype.visualOptions = function visualOptions () {\n        var options = this.options;\n        return {\n            background: options.background,\n            border: options.border,\n            margin: options.margin,\n            padding: options.padding,\n            type: options.type,\n            size: options.width,\n            visible: options.visible\n        };\n    };\n\n    ShapeElement.prototype.createVisual = function createVisual () {\n        this.visual = this.createElement();\n    };\n\n    return ShapeElement;\n}(BoxElement));\n\nsetDefaultOptions(ShapeElement, {\n    type: CIRCLE,\n    align: CENTER,\n    vAlign: CENTER\n});\n\nexport default ShapeElement;\n"]},"metadata":{},"sourceType":"module"}
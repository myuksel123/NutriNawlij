{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = props => {\n  _s();\n\n  //post data to SQL?\n  const [data, setData] = useState([]);\n  const [results, setResults] = useState([]);\n  console.log(JSON.stringify(props.location.state));\n  useEffect(() => {\n    fetch('/data', {\n      method: 'post',\n      body: JSON.stringify(props.location.state),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => res.json()).then(data => setData(data));\n  }, []);\n  console.log(data);\n  let countnutrient = 0;\n  let previous = \"\";\n  let nutritiousinfo = [];\n\n  for (let i = 0; i < data.rowCount; i++) {\n    if (countnutrient == 0 || data.rows[i].description == previous) {\n      countnutrient++;\n      nutritiousinfo.push(data.rows[i].name);\n    } else {\n      results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: i,\n        children: previous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this));\n\n      for (let j = 0; j < nutritiousinfo.length; j++) {\n        let thefood = document.getElementById({\n          i\n        });\n        thefood.appendChild( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"nutritiousinfo[j]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this));\n      }\n\n      nutritiousinfo = [];\n      nutritiousinfo.push(data.rows[i].name);\n    }\n\n    previous = data.rows[i].description;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"sSt/6LGXKPSM3q9qmNvPylT1pCc=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx"],"names":["React","useState","useEffect","Catalog","props","data","setData","results","setResults","console","log","JSON","stringify","location","state","fetch","method","body","headers","then","res","json","countnutrient","previous","nutritiousinfo","i","rowCount","rows","description","push","name","j","length","thefood","document","getElementById","appendChild"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAU;AAAA;;AAEtB;AACA,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACM,OAAD,EAASC,UAAT,IAAqBP,QAAQ,CAAC,EAAD,CAAlC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACS,QAAN,CAAeC,KAA9B,CAAZ;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACda,IAAAA,KAAK,CAAC,OAAD,EAAS;AACVC,MAAAA,MAAM,EAAE,MADE;AAGVC,MAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACS,QAAN,CAAeC,KAA9B,CAHI;AAKVI,MAAAA,OAAO,EAAE;AACL,wBAAgB,iCADX;AAEL,uCAA+B;AAF1B;AALC,KAAT,CAAL,CAUGC,IAVH,CAUQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAVb,EAUyBF,IAVzB,CAU8Bd,IAAI,IAAEC,OAAO,CAACD,IAAD,CAV3C;AAWC,GAZQ,EAYN,EAZM,CAAT;AAaAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACJ,MAAIiB,aAAa,GAAC,CAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,cAAc,GAAG,EAArB;;AACC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACpB,IAAI,CAACqB,QAApB,EAA8BD,CAAC,EAA/B,EAAkC;AAC/B,QAAGH,aAAa,IAAG,CAAhB,IAAqBjB,IAAI,CAACsB,IAAL,CAAUF,CAAV,EAAaG,WAAb,IAA2BL,QAAnD,EAA4D;AACxDD,MAAAA,aAAa;AACbE,MAAAA,cAAc,CAACK,IAAf,CAAoBxB,IAAI,CAACsB,IAAL,CAAUF,CAAV,EAAaK,IAAjC;AACH,KAHD,MAII;AACJvB,MAAAA,OAAO,CAACsB,IAAR,eAAa;AAAK,QAAA,EAAE,EAAGJ,CAAV;AAAA,kBAAcF;AAAd;AAAA;AAAA;AAAA;AAAA,cAAb;;AACA,WAAI,IAAIQ,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACP,cAAc,CAACQ,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,YAAIE,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB;AAACV,UAAAA;AAAD,SAAxB,CAAd;AACAQ,QAAAA,OAAO,CAACG,WAAR,eAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB;AACH;;AACDZ,MAAAA,cAAc,GAAC,EAAf;AACAA,MAAAA,cAAc,CAACK,IAAf,CAAoBxB,IAAI,CAACsB,IAAL,CAAUF,CAAV,EAAaK,IAAjC;AACC;;AACDP,IAAAA,QAAQ,GAAGlB,IAAI,CAACsB,IAAL,CAAUF,CAAV,EAAaG,WAAxB;AACH;;AAEG,sBACI;AAAA,cACKrB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7CD;;GAAMJ,O;;KAAAA,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {useState,useEffect} from 'react';\n\n\nconst Catalog = (props) =>{\n\n    //post data to SQL?\n    const[data,setData] = useState([]);\n    const[results,setResults]=useState([]);\n    console.log(JSON.stringify(props.location.state))\n    useEffect(()=>{\n    fetch('/data',{\n        method: 'post',\n\n        body: JSON.stringify(props.location.state),\n\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        }\n    \n    }).then(res=>res.json()).then(data=>setData(data));\n    }, []);\n    console.log(data);\nlet countnutrient=0;\nlet previous = \"\";\nlet nutritiousinfo = [];\n for(let i=0; i<data.rowCount; i++){\n    if(countnutrient ==0 || data.rows[i].description ==previous){\n        countnutrient++;\n        nutritiousinfo.push(data.rows[i].name);\n    }\n    else{\n    results.push(<div id= {i}>{previous}</div>);\n    for(let j=0; j<nutritiousinfo.length; j++){\n        let thefood = document.getElementById({i});\n        thefood.appendChild(<div>nutritiousinfo[j]</div>)\n    }\n    nutritiousinfo=[];\n    nutritiousinfo.push(data.rows[i].name);\n    }\n    previous = data.rows[i].description;\n}\n\n    return(\n        <div>\n            {results}\n        </div>\n    );\n}\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}
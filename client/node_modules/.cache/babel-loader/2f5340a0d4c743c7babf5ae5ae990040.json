{"ast":null,"code":"import { chartBaseTheme } from '@progress/kendo-charts';\n\nvar font = function (style) {\n  return style.fontWeight + \" \" + style.fontSize + \" \" + style.fontFamily;\n};\n\nvar computedBackgroundColor = function (element) {\n  return window.getComputedStyle(element).backgroundColor;\n};\n\nvar letterPos = function (letter) {\n  return letter.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n};\n\nvar seriesPos = function (name) {\n  var alpha = name.match(/series-([a-z])$/);\n\n  if (alpha !== null) {\n    return letterPos(alpha[1]);\n  }\n\n  var num = name.split('--series-')[1];\n  return parseInt(num, 10) - 1;\n};\n\nvar SERIES_COLORS = 30;\n\nvar seriesTemplate = function () {\n  var result = \"\\n      <div class=\\\"k-var--series-a\\\"></div>\\n      <div class=\\\"k-var--series-b\\\"></div>\\n      <div class=\\\"k-var--series-c\\\"></div>\\n      <div class=\\\"k-var--series-d\\\"></div>\\n      <div class=\\\"k-var--series-e\\\"></div>\\n      <div class=\\\"k-var--series-f\\\"></div>\\n\";\n\n  for (var i = 0; i < SERIES_COLORS; i++) {\n    result += \"\\n      <div class=\\\"k-var--series-\" + (i + 1) + \"\\\"></div>\";\n  }\n\n  return result;\n};\n\nvar template = \"\\n    <div class=\\\"k-var--accent\\\"></div>\\n    <div class=\\\"k-var--base\\\"></div>\\n    <div class=\\\"k-var--background\\\"></div>\\n\\n    <div class=\\\"k-var--normal-background\\\"></div>\\n    <div class=\\\"k-var--normal-text-color\\\"></div>\\n    <div class=\\\"k-var--hover-background\\\"></div>\\n    <div class=\\\"k-var--hover-text-color\\\"></div>\\n    <div class=\\\"k-var--selected-background\\\"></div>\\n    <div class=\\\"k-var--selected-text-color\\\"></div>\\n    <div class=\\\"k-var--chart-error-bars-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-border\\\"></div>\\n    <div class=\\\"k-var--chart-notes-lines\\\"></div>\\n    <div class=\\\"k-var--chart-crosshair-background\\\"></div>\\n\\n    <div class=\\\"k-var--chart-inactive\\\"></div>\\n    <div class=\\\"k-var--chart-major-lines\\\"></div>\\n    <div class=\\\"k-var--chart-minor-lines\\\"></div>\\n    <div class=\\\"k-var--chart-area-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-area-inactive-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-line-inactive-opacity\\\"></div>\\n\\n    <div class=\\\"k-widget k-chart\\\">\\n        <div class=\\\"k-var--chart-font\\\"></div>\\n        <div class=\\\"k-var--chart-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-pane-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-label-font\\\"></div>\\n    </div>\\n\\n    <div class=\\\"k-var--series-unset\\\"></div>\\n    <div class=\\\"k-var--series\\\">\\n      \" + seriesTemplate() + \"\\n    </div>\\n\";\n/**\n * @hidden\n */\n\nvar ThemeService =\n/** @class */\nfunction () {\n  function ThemeService(store) {\n    this.store = store;\n  }\n\n  ThemeService.prototype.setStyle = function (field, value) {\n    this.store.dispatch({\n      type: 'set',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  };\n\n  ThemeService.prototype.setColors = function () {\n    this.mapColor('axisDefaults.crosshair.color', 'chart-crosshair-background');\n    this.mapColor('axisDefaults.labels.color', 'normal-text-color');\n    this.mapColor('axisDefaults.line.color', 'chart-major-lines');\n    this.mapColor('axisDefaults.majorGridLines.color', 'chart-major-lines');\n    this.mapColor('axisDefaults.minorGridLines.color', 'chart-minor-lines');\n    this.mapColor('axisDefaults.notes.icon.background', 'chart-notes-background');\n    this.mapColor('axisDefaults.notes.icon.border.color', 'chart-notes-border');\n    this.mapColor('axisDefaults.notes.line.color', 'chart-notes-lines');\n    this.mapColor('axisDefaults.title.color', 'normal-text-color');\n    this.mapColor('chartArea.background', 'background');\n    this.mapColor('legend.inactiveItems.labels.color', 'chart-inactive');\n    this.mapColor('legend.inactiveItems.markers.color', 'chart-inactive');\n    this.mapColor('legend.labels.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.boxPlot.downColor', 'chart-major-lines');\n    this.mapColor('seriesDefaults.boxPlot.mean.color', 'base');\n    this.mapColor('seriesDefaults.boxPlot.median.color', 'base');\n    this.mapColor('seriesDefaults.boxPlot.whiskers.color', 'accent');\n    this.mapColor('seriesDefaults.bullet.target.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.candlestick.downColor', 'normal-text-color');\n    this.mapColor('seriesDefaults.candlestick.line.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.errorBars.color', 'chart-error-bars-background');\n    this.mapColor('seriesDefaults.horizontalWaterfall.line.color', 'chart-major-lines');\n    this.mapColor('seriesDefaults.icon.border.color', 'chart-major-lines');\n    this.mapColor('seriesDefaults.labels.background', 'background');\n    this.mapColor('seriesDefaults.labels.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.notes.icon.background', 'chart-notes-background');\n    this.mapColor('seriesDefaults.notes.icon.border.color', 'chart-notes-border');\n    this.mapColor('seriesDefaults.notes.line.color', 'chart-notes-lines');\n    this.mapColor('seriesDefaults.verticalBoxPlot.downColor', 'chart-major-lines');\n    this.mapColor('seriesDefaults.verticalBoxPlot.mean.color', 'base');\n    this.mapColor('seriesDefaults.verticalBoxPlot.median.color', 'base');\n    this.mapColor('seriesDefaults.verticalBoxPlot.whiskers.color', 'accent');\n    this.mapColor('seriesDefaults.verticalBullet.target.color', 'normal-text-color');\n    this.mapColor('seriesDefaults.waterfall.line.color', 'chart-major-lines');\n    this.mapColor('title.color', 'normal-text-color');\n    var opacity = parseFloat(this.queryStyle('chart-area-opacity').opacity);\n\n    if (!isNaN(opacity)) {\n      this.setStyle('seriesDefaults.area.opacity', opacity);\n      this.setStyle('seriesDefaults.radarArea.opacity', opacity);\n      this.setStyle('seriesDefaults.verticalArea.opacity', opacity);\n      this.setStyle('seriesDefaults.labels.opacity', opacity);\n    }\n\n    this.setInactiveOpacity(['area', 'verticalArea'], 'chart-area-inactive-opacity');\n    this.setInactiveOpacity(['line', 'verticalLine'], 'chart-line-inactive-opacity');\n  };\n\n  ThemeService.prototype.setFonts = function () {\n    var defaultFont = font(this.queryStyle('chart-font'));\n    var titleFont = font(this.queryStyle('chart-title-font'));\n    var paneTitleFont = font(this.queryStyle('chart-pane-title-font'));\n    var labelFont = font(this.queryStyle('chart-label-font'));\n    this.setStyle('axisDefaults.labels.font', labelFont);\n    this.setStyle('axisDefaults.notes.label.font', defaultFont);\n    this.setStyle('axisDefaults.title.font', defaultFont);\n    this.setStyle('legend.labels.font', defaultFont);\n    this.setStyle('seriesDefaults.labels.font', labelFont);\n    this.setStyle('seriesDefaults.notes.label.font', defaultFont);\n    this.setStyle('title.font', titleFont);\n    this.setStyle('paneDefaults.title.font', paneTitleFont);\n  };\n\n  ThemeService.prototype.setSeriesColors = function () {\n    var element = this.element;\n    var series = [].slice.call(element.querySelectorAll('.k-var--series div'));\n    var unsetColor = computedBackgroundColor(element.querySelector('.k-var--series-unset'));\n    var seriesColors = series.reduce(function (arr, el) {\n      var pos = seriesPos(el.className);\n      var color = computedBackgroundColor(el);\n\n      if (color !== unsetColor) {\n        arr[pos] = color;\n      }\n\n      return arr;\n    }, [] // Will populate the series colors in this array\n    );\n    this.setStyle('seriesColors', seriesColors);\n  };\n\n  ThemeService.prototype.mapColor = function (key, varName) {\n    this.setStyle(key, this.queryStyle(varName).backgroundColor);\n  };\n\n  ThemeService.prototype.queryStyle = function (varName) {\n    var element = this.element;\n    return window.getComputedStyle(element.querySelector(\".k-var--\" + varName));\n  };\n\n  ThemeService.prototype.setInactiveOpacity = function (seriesTypes, selector) {\n    var _this = this;\n\n    var inactiveOpacity = parseFloat(this.queryStyle(selector).opacity);\n\n    if (!isNaN(inactiveOpacity) && inactiveOpacity < 1) {\n      seriesTypes.forEach(function (type) {\n        return _this.setStyle(\"seriesDefaults.\" + type + \".highlight.inactiveOpacity\", inactiveOpacity);\n      });\n    }\n  };\n\n  return ThemeService;\n}();\n\nvar loadTheme = function (store, done) {\n  var service = new ThemeService(store);\n\n  if (typeof document === 'undefined') {\n    store.dispatch({\n      type: 'push',\n      payload: chartBaseTheme()\n    });\n    return;\n  }\n\n  var container = service.element = document.createElement('div');\n  container.style.display = 'none';\n  container.innerHTML = template;\n  document.body.appendChild(container);\n\n  try {\n    store.dispatch({\n      type: 'push',\n      payload: chartBaseTheme()\n    });\n    service.setColors();\n    service.setFonts();\n    service.setSeriesColors();\n  } finally {\n    document.body.removeChild(service.element);\n    delete service.element;\n    done();\n  }\n};\n\nexport { loadTheme };","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-react-charts/dist/es/theming/theme-service.js"],"names":["chartBaseTheme","font","style","fontWeight","fontSize","fontFamily","computedBackgroundColor","element","window","getComputedStyle","backgroundColor","letterPos","letter","toLowerCase","charCodeAt","seriesPos","name","alpha","match","num","split","parseInt","SERIES_COLORS","seriesTemplate","result","i","template","ThemeService","store","prototype","setStyle","field","value","dispatch","type","payload","setColors","mapColor","opacity","parseFloat","queryStyle","isNaN","setInactiveOpacity","setFonts","defaultFont","titleFont","paneTitleFont","labelFont","setSeriesColors","series","slice","call","querySelectorAll","unsetColor","querySelector","seriesColors","reduce","arr","el","pos","className","color","key","varName","seriesTypes","selector","_this","inactiveOpacity","forEach","loadTheme","done","service","document","container","createElement","display","innerHTML","body","appendChild","removeChild"],"mappings":"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","sourcesContent":["import { chartBaseTheme } from '@progress/kendo-charts';\nvar font = function (style) { return style.fontWeight + \" \" + style.fontSize + \" \" + style.fontFamily; };\nvar computedBackgroundColor = function (element) { return window.getComputedStyle(element).backgroundColor; };\nvar letterPos = function (letter) { return letter.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0); };\nvar seriesPos = function (name) {\n    var alpha = name.match(/series-([a-z])$/);\n    if (alpha !== null) {\n        return letterPos(alpha[1]);\n    }\n    var num = name.split('--series-')[1];\n    return parseInt(num, 10) - 1;\n};\nvar SERIES_COLORS = 30;\nvar seriesTemplate = function () {\n    var result = \"\\n      <div class=\\\"k-var--series-a\\\"></div>\\n      <div class=\\\"k-var--series-b\\\"></div>\\n      <div class=\\\"k-var--series-c\\\"></div>\\n      <div class=\\\"k-var--series-d\\\"></div>\\n      <div class=\\\"k-var--series-e\\\"></div>\\n      <div class=\\\"k-var--series-f\\\"></div>\\n\";\n    for (var i = 0; i < SERIES_COLORS; i++) {\n        result += \"\\n      <div class=\\\"k-var--series-\" + (i + 1) + \"\\\"></div>\";\n    }\n    return result;\n};\nvar template = \"\\n    <div class=\\\"k-var--accent\\\"></div>\\n    <div class=\\\"k-var--base\\\"></div>\\n    <div class=\\\"k-var--background\\\"></div>\\n\\n    <div class=\\\"k-var--normal-background\\\"></div>\\n    <div class=\\\"k-var--normal-text-color\\\"></div>\\n    <div class=\\\"k-var--hover-background\\\"></div>\\n    <div class=\\\"k-var--hover-text-color\\\"></div>\\n    <div class=\\\"k-var--selected-background\\\"></div>\\n    <div class=\\\"k-var--selected-text-color\\\"></div>\\n    <div class=\\\"k-var--chart-error-bars-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-background\\\"></div>\\n    <div class=\\\"k-var--chart-notes-border\\\"></div>\\n    <div class=\\\"k-var--chart-notes-lines\\\"></div>\\n    <div class=\\\"k-var--chart-crosshair-background\\\"></div>\\n\\n    <div class=\\\"k-var--chart-inactive\\\"></div>\\n    <div class=\\\"k-var--chart-major-lines\\\"></div>\\n    <div class=\\\"k-var--chart-minor-lines\\\"></div>\\n    <div class=\\\"k-var--chart-area-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-area-inactive-opacity\\\"></div>\\n    <div class=\\\"k-var--chart-line-inactive-opacity\\\"></div>\\n\\n    <div class=\\\"k-widget k-chart\\\">\\n        <div class=\\\"k-var--chart-font\\\"></div>\\n        <div class=\\\"k-var--chart-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-pane-title-font\\\"></div>\\n        <div class=\\\"k-var--chart-label-font\\\"></div>\\n    </div>\\n\\n    <div class=\\\"k-var--series-unset\\\"></div>\\n    <div class=\\\"k-var--series\\\">\\n      \" + seriesTemplate() + \"\\n    </div>\\n\";\n/**\n * @hidden\n */\nvar ThemeService = /** @class */ (function () {\n    function ThemeService(store) {\n        this.store = store;\n    }\n    ThemeService.prototype.setStyle = function (field, value) {\n        this.store.dispatch({ type: 'set', payload: { field: field, value: value } });\n    };\n    ThemeService.prototype.setColors = function () {\n        this.mapColor('axisDefaults.crosshair.color', 'chart-crosshair-background');\n        this.mapColor('axisDefaults.labels.color', 'normal-text-color');\n        this.mapColor('axisDefaults.line.color', 'chart-major-lines');\n        this.mapColor('axisDefaults.majorGridLines.color', 'chart-major-lines');\n        this.mapColor('axisDefaults.minorGridLines.color', 'chart-minor-lines');\n        this.mapColor('axisDefaults.notes.icon.background', 'chart-notes-background');\n        this.mapColor('axisDefaults.notes.icon.border.color', 'chart-notes-border');\n        this.mapColor('axisDefaults.notes.line.color', 'chart-notes-lines');\n        this.mapColor('axisDefaults.title.color', 'normal-text-color');\n        this.mapColor('chartArea.background', 'background');\n        this.mapColor('legend.inactiveItems.labels.color', 'chart-inactive');\n        this.mapColor('legend.inactiveItems.markers.color', 'chart-inactive');\n        this.mapColor('legend.labels.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.boxPlot.downColor', 'chart-major-lines');\n        this.mapColor('seriesDefaults.boxPlot.mean.color', 'base');\n        this.mapColor('seriesDefaults.boxPlot.median.color', 'base');\n        this.mapColor('seriesDefaults.boxPlot.whiskers.color', 'accent');\n        this.mapColor('seriesDefaults.bullet.target.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.candlestick.downColor', 'normal-text-color');\n        this.mapColor('seriesDefaults.candlestick.line.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.errorBars.color', 'chart-error-bars-background');\n        this.mapColor('seriesDefaults.horizontalWaterfall.line.color', 'chart-major-lines');\n        this.mapColor('seriesDefaults.icon.border.color', 'chart-major-lines');\n        this.mapColor('seriesDefaults.labels.background', 'background');\n        this.mapColor('seriesDefaults.labels.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.notes.icon.background', 'chart-notes-background');\n        this.mapColor('seriesDefaults.notes.icon.border.color', 'chart-notes-border');\n        this.mapColor('seriesDefaults.notes.line.color', 'chart-notes-lines');\n        this.mapColor('seriesDefaults.verticalBoxPlot.downColor', 'chart-major-lines');\n        this.mapColor('seriesDefaults.verticalBoxPlot.mean.color', 'base');\n        this.mapColor('seriesDefaults.verticalBoxPlot.median.color', 'base');\n        this.mapColor('seriesDefaults.verticalBoxPlot.whiskers.color', 'accent');\n        this.mapColor('seriesDefaults.verticalBullet.target.color', 'normal-text-color');\n        this.mapColor('seriesDefaults.waterfall.line.color', 'chart-major-lines');\n        this.mapColor('title.color', 'normal-text-color');\n        var opacity = parseFloat(this.queryStyle('chart-area-opacity').opacity);\n        if (!isNaN(opacity)) {\n            this.setStyle('seriesDefaults.area.opacity', opacity);\n            this.setStyle('seriesDefaults.radarArea.opacity', opacity);\n            this.setStyle('seriesDefaults.verticalArea.opacity', opacity);\n            this.setStyle('seriesDefaults.labels.opacity', opacity);\n        }\n        this.setInactiveOpacity(['area', 'verticalArea'], 'chart-area-inactive-opacity');\n        this.setInactiveOpacity(['line', 'verticalLine'], 'chart-line-inactive-opacity');\n    };\n    ThemeService.prototype.setFonts = function () {\n        var defaultFont = font(this.queryStyle('chart-font'));\n        var titleFont = font(this.queryStyle('chart-title-font'));\n        var paneTitleFont = font(this.queryStyle('chart-pane-title-font'));\n        var labelFont = font(this.queryStyle('chart-label-font'));\n        this.setStyle('axisDefaults.labels.font', labelFont);\n        this.setStyle('axisDefaults.notes.label.font', defaultFont);\n        this.setStyle('axisDefaults.title.font', defaultFont);\n        this.setStyle('legend.labels.font', defaultFont);\n        this.setStyle('seriesDefaults.labels.font', labelFont);\n        this.setStyle('seriesDefaults.notes.label.font', defaultFont);\n        this.setStyle('title.font', titleFont);\n        this.setStyle('paneDefaults.title.font', paneTitleFont);\n    };\n    ThemeService.prototype.setSeriesColors = function () {\n        var element = this.element;\n        var series = [].slice.call(element.querySelectorAll('.k-var--series div'));\n        var unsetColor = computedBackgroundColor(element.querySelector('.k-var--series-unset'));\n        var seriesColors = series.reduce(function (arr, el) {\n            var pos = seriesPos(el.className);\n            var color = computedBackgroundColor(el);\n            if (color !== unsetColor) {\n                arr[pos] = color;\n            }\n            return arr;\n        }, [] // Will populate the series colors in this array\n        );\n        this.setStyle('seriesColors', seriesColors);\n    };\n    ThemeService.prototype.mapColor = function (key, varName) {\n        this.setStyle(key, this.queryStyle(varName).backgroundColor);\n    };\n    ThemeService.prototype.queryStyle = function (varName) {\n        var element = this.element;\n        return window.getComputedStyle(element.querySelector(\".k-var--\" + varName));\n    };\n    ThemeService.prototype.setInactiveOpacity = function (seriesTypes, selector) {\n        var _this = this;\n        var inactiveOpacity = parseFloat(this.queryStyle(selector).opacity);\n        if (!isNaN(inactiveOpacity) && inactiveOpacity < 1) {\n            seriesTypes.forEach(function (type) {\n                return _this.setStyle(\"seriesDefaults.\" + type + \".highlight.inactiveOpacity\", inactiveOpacity);\n            });\n        }\n    };\n    return ThemeService;\n}());\nvar loadTheme = function (store, done) {\n    var service = new ThemeService(store);\n    if (typeof document === 'undefined') {\n        store.dispatch({ type: 'push', payload: chartBaseTheme() });\n        return;\n    }\n    var container = service.element = document.createElement('div');\n    container.style.display = 'none';\n    container.innerHTML = template;\n    document.body.appendChild(container);\n    try {\n        store.dispatch({ type: 'push', payload: chartBaseTheme() });\n        service.setColors();\n        service.setFonts();\n        service.setSeriesColors();\n    }\n    finally {\n        document.body.removeChild(service.element);\n        delete service.element;\n        done();\n    }\n};\nexport { loadTheme };\n"]},"metadata":{},"sourceType":"module"}
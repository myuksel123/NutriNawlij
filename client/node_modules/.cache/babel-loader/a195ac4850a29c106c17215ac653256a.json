{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport { NavLink, Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Catalog from './Catalog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [vitA, setVitA] = useState(false);\n  const [vitAColor, setVitAColor] = useState('greenyellow');\n  const [vitB1, setVitB1] = useState(false);\n  const [vitB1Color, setVitB1Color] = useState('greenyellow');\n  const [vitB2, setVitB2] = useState(false);\n  const [vitB2Color, setVitB2Color] = useState('greenyellow');\n  const [vitB3, setVitB3] = useState(false);\n  const [vitB3Color, setVitB3Color] = useState('greenyellow');\n  const [vitB5, setVitB5] = useState(false);\n  const [vitB5Color, setVitB5Color] = useState('greenyellow');\n  const [vitB6, setVitB6] = useState(false);\n  const [vitB6Color, setVitB6Color] = useState('greenyellow');\n  const [vitB7, setVitB7] = useState(false);\n  const [vitB7Color, setVitB7Color] = useState('greenyellow');\n  const [vitB9, setVitB9] = useState(false);\n  const [vitB9Color, setVitB9Color] = useState('greenyellow');\n  const [vitB12, setVitB12] = useState(false);\n  const [vitB12Color, setVitB12Color] = useState('greenyellow');\n  const [vitC, setVitC] = useState(false);\n  const [vitCColor, setVitCColor] = useState('greenyellow');\n  const [vitD, setVitD] = useState(false);\n  const [vitDColor, setVitDColor] = useState('greenyellow');\n  const [vitE, setVitE] = useState(false);\n  const [vitEColor, setVitEColor] = useState('greenyellow');\n  const [vitK, setVitK] = useState(false);\n  const [vitKColor, setVitKColor] = useState('greenyellow');\n  const [Calcium, setCalcium] = useState(false);\n  const [CalciumColor, setCalciumColor] = useState('greenyellow');\n  const [Phos, Phosset] = useState(false);\n  const [PhosColor, setPhosColor] = useState('greenyellow');\n  const [Mag, Magset] = useState(false);\n  const [MagColor, setMagColor] = useState('greenyellow');\n  const [Sod, Sodset] = useState(false);\n  const [SodColor, setSodColor] = useState('greenyellow');\n  const [Chlo, Chloset] = useState(false);\n  const [ChloColor, setChloColor] = useState('greenyellow');\n  const [Pot, Potset] = useState(false);\n  const [PotColor, setPotColor] = useState('greenyellow');\n  const [Sul, Sulset] = useState(false);\n  const [SulColor, setSulColor] = useState('greenyellow');\n  const [Ir, Ironset] = useState(false);\n  const [IrColor, setIrColor] = useState('greenyellow');\n  const [Mang, Mangset] = useState(false);\n  const [MangColor, setMangColor] = useState('greenyellow');\n  const [Cop, Copset] = useState(false);\n  const [CopColor, setCopColor] = useState('greenyellow');\n  const [Zi, Ziset] = useState(false);\n  const [ZiColor, setZiColor] = useState('greenyellow');\n  const [Io, Ioset] = useState(false);\n  const [IoColor, setIoColor] = useState('greenyellow');\n  const [Flo, Floset] = useState(false);\n  const [FloColor, setFloColor] = useState('greenyellow');\n  const [Sel, Selset] = useState(false);\n  const [SelColor, setSelColor] = useState('greenyellow');\n  const [Protein, setProtein] = useState(false);\n  const [ProteinColor, setProteinColor] = useState('greenyellow');\n  const [Saturated, setSaturated] = useState(false);\n  const [SaturatedColor, setSaturatedColor] = useState('greenyellow');\n  const [PolyUnsaturated, setPolyUnsaturated] = useState(false);\n  const [PolyUnsaturatedColor, setPolyUnsaturatedColor] = useState('greenyellow');\n  const [MonoUnsaturated, setMonoUnsaturated] = useState(false);\n  const [MonoUnsaturatedColor, setMonoUnsaturatedColor] = useState('greenyellow');\n  const [Starch, setStarch] = useState(false);\n  const [StarchColor, setStarchColor] = useState('greenyellow');\n  const [Sugar, setSugar] = useState(false);\n  const [SugarColor, setSugarColor] = useState('greenyellow');\n  const [Fiber, setFiber] = useState(false);\n  const [FiberColor, setFiberColor] = useState('greenyellow');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"questionspage\",\n    class: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"macros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header\",\n        children: \"Macros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !Protein;\n                setProtein(bool);\n                bool ? setProteinColor(\"red\") : setProteinColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: ProteinColor\n              },\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !PolyUnsaturated;\n                setPolyUnsaturated(bool);\n                bool ? setPolyUnsaturatedColor(\"red\") : setPolyUnsaturatedColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: PolyUnsaturatedColor\n              },\n              children: \"Poly-Unsaturated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !MonoUnsaturated;\n                setMonoUnsaturated(bool);\n                bool ? setMonoUnsaturatedColor(\"red\") : setMonoUnsaturatedColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: MonoUnsaturatedColor\n              },\n              children: \"Mono-Unsaturated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !Saturated;\n                setSaturated(bool);\n                bool ? setSaturatedColor(\"red\") : setSaturatedColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: SaturatedColor\n              },\n              children: \"Saturated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Carbohydrates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !Starch;\n                setStarch(bool);\n                bool ? setStarchColor(\"red\") : setStarchColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: StarchColor\n              },\n              children: \"Starches (Complex Carohydrates)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !Fiber;\n                setFiber(bool);\n                bool ? setFiberColor(\"red\") : setFiberColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: FiberColor\n              },\n              children: \"Fiber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button\",\n              onClick: () => {\n                const bool = !Sugar;\n                setSugar(bool);\n                bool ? setSugarColor(\"red\") : setSugarColor(\"greenyellow\");\n              },\n              style: {\n                backgroundColor: SugarColor\n              },\n              children: \"Sugar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"micros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Micros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Vitamins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitA;\n              setVitA(bool);\n              bool ? setVitAColor(\"red\") : setVitAColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitAColor\n            },\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB1;\n              setVitB1(!vitB1);\n              bool ? setVitB1Color(\"red\") : setVitB1Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB1Color\n            },\n            children: \"B1(thiamine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB2;\n              setVitB2(!vitB2);\n              bool ? setVitB2Color(\"red\") : setVitB2Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB2Color\n            },\n            children: \"B2(riboflavin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB3;\n              setVitB3(!vitB3);\n              bool ? setVitB3Color(\"red\") : setVitB3Color(\"greenyellow\");\n              console.log(vitB3);\n            },\n            style: {\n              backgroundColor: vitB3Color\n            },\n            children: \"B3(niacin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB5;\n              setVitB5(!vitB5);\n              bool ? setVitB5Color(\"red\") : setVitB5Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB5Color\n            },\n            children: \"B5(pantothenic acid)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB6;\n              setVitB6(!vitB6);\n              bool ? setVitB6Color(\"red\") : setVitB6Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB6Color\n            },\n            children: \"B6(pyridoxine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB7;\n              setVitB7(!vitB7);\n              bool ? setVitB7Color(\"red\") : setVitB7Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB7Color\n            },\n            children: \"B7(biotin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB9;\n              setVitB9(!vitB9);\n              bool ? setVitB9Color(\"red\") : setVitB9Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB9Color\n            },\n            children: \"B9(folate)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitB12;\n              setVitB12(!vitB12);\n              bool ? setVitB12Color(\"red\") : setVitB12Color(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitB12Color\n            },\n            children: \"B12(cobalamin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitC;\n              setVitC(bool);\n              bool ? setVitCColor(\"red\") : setVitCColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitCColor\n            },\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitD;\n              setVitD(bool);\n              bool ? setVitDColor(\"red\") : setVitDColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitDColor\n            },\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitE;\n              setVitE(bool);\n              bool ? setVitEColor(\"red\") : setVitEColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitEColor\n            },\n            children: \"E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !vitK;\n              setVitK(bool);\n              bool ? setVitKColor(\"red\") : setVitKColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: vitKColor\n            },\n            children: \"K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Minerals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Calcium;\n              setCalcium(bool);\n              bool ? setCalciumColor(\"red\") : setCalciumColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: CalciumColor\n            },\n            children: \"Calcium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Phos;\n              Phosset(bool);\n              bool ? setPhosColor(\"red\") : setPhosColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: PhosColor\n            },\n            children: \"Phosphorus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Mag;\n              Magset(bool);\n              bool ? setMagColor(\"red\") : setMagColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: MagColor\n            },\n            children: \"Magnesium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Sod;\n              Sodset(bool);\n              bool ? setSodColor(\"red\") : setSodColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: SodColor\n            },\n            children: \"Sodium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Chlo;\n              Chloset(bool);\n              bool ? setChloColor(\"red\") : setChloColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: ChloColor\n            },\n            children: \"Chloride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Pot;\n              Potset(bool);\n              bool ? setPotColor(\"red\") : setPotColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: PotColor\n            },\n            children: \"Potassium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Sul;\n              Sulset(bool);\n              bool ? setSulColor(\"red\") : setSulColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: SulColor\n            },\n            children: \"Sulfur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Ir;\n              Ironset(bool);\n              bool ? setIrColor(\"red\") : setIrColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: IrColor\n            },\n            children: \"Iron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Mang;\n              Mangset(bool);\n              bool ? setMangColor(\"red\") : setMangColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: MangColor\n            },\n            children: \"Manganese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Cop;\n              Copset(bool);\n              bool ? setCopColor(\"red\") : setCopColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: CopColor\n            },\n            children: \"Copper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Zi;\n              Ziset(bool);\n              bool ? setZiColor(\"red\") : setZiColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: ZiColor\n            },\n            children: \"Zinc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Io;\n              Ioset(bool);\n              bool ? setIoColor(\"red\") : setIoColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: IoColor\n            },\n            children: \"Iodine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Flo;\n              Floset(bool);\n              bool ? setFloColor(\"red\") : setFloColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: FloColor\n            },\n            children: \"Flouride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: () => {\n              const bool = !Sel;\n              Selset(bool);\n              bool ? setSelColor(\"red\") : setSelColor(\"greenyellow\");\n            },\n            style: {\n              backgroundColor: SelColor\n            },\n            children: \"Selenium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"../catalog\",\n        state: {\n          vitA,\n          vitB1,\n          vitB2,\n          vitB3,\n          vitB5,\n          vitB6,\n          vitB7,\n          vitB9,\n          vitB12,\n          vitC,\n          vitD,\n          vitE,\n          vitK,\n          Calcium,\n          Phos,\n          Mag,\n          Sod,\n          Chlo,\n          Pot,\n          Sul,\n          Ir,\n          Mang,\n          Cop,\n          Zi,\n          Io,\n          Sel,\n          Protein,\n          MonoUnsaturated,\n          Saturated,\n          PolyUnsaturated,\n          Starch,\n          Fiber,\n          Sugar\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"next\",\n        children: \"To the Results!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"rn0tvMIUbGBjTe3oUB2+ta96mHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx"],"names":["NavLink","Link","React","useState","Catalog","App","vitA","setVitA","vitAColor","setVitAColor","vitB1","setVitB1","vitB1Color","setVitB1Color","vitB2","setVitB2","vitB2Color","setVitB2Color","vitB3","setVitB3","vitB3Color","setVitB3Color","vitB5","setVitB5","vitB5Color","setVitB5Color","vitB6","setVitB6","vitB6Color","setVitB6Color","vitB7","setVitB7","vitB7Color","setVitB7Color","vitB9","setVitB9","vitB9Color","setVitB9Color","vitB12","setVitB12","vitB12Color","setVitB12Color","vitC","setVitC","vitCColor","setVitCColor","vitD","setVitD","vitDColor","setVitDColor","vitE","setVitE","vitEColor","setVitEColor","vitK","setVitK","vitKColor","setVitKColor","Calcium","setCalcium","CalciumColor","setCalciumColor","Phos","Phosset","PhosColor","setPhosColor","Mag","Magset","MagColor","setMagColor","Sod","Sodset","SodColor","setSodColor","Chlo","Chloset","ChloColor","setChloColor","Pot","Potset","PotColor","setPotColor","Sul","Sulset","SulColor","setSulColor","Ir","Ironset","IrColor","setIrColor","Mang","Mangset","MangColor","setMangColor","Cop","Copset","CopColor","setCopColor","Zi","Ziset","ZiColor","setZiColor","Io","Ioset","IoColor","setIoColor","Flo","Floset","FloColor","setFloColor","Sel","Selset","SelColor","setSelColor","Protein","setProtein","ProteinColor","setProteinColor","Saturated","setSaturated","SaturatedColor","setSaturatedColor","PolyUnsaturated","setPolyUnsaturated","PolyUnsaturatedColor","setPolyUnsaturatedColor","MonoUnsaturated","setMonoUnsaturated","MonoUnsaturatedColor","setMonoUnsaturatedColor","Starch","setStarch","StarchColor","setStarchColor","Sugar","setSugar","SugarColor","setSugarColor","Fiber","setFiber","FiberColor","setFiberColor","bool","backgroundColor","console","log","pathname","state"],"mappings":"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","sourcesContent":["import { NavLink, Link } from 'react-router-dom';\nimport React, { useState } from 'react'\nimport Catalog from './Catalog';\n\nfunction App(){\n    const [vitA,setVitA] = useState(false);\n    const [vitAColor,setVitAColor] = useState('greenyellow');\n\n    const [vitB1,setVitB1] = useState(false);\n    const [vitB1Color,setVitB1Color] = useState('greenyellow');\n\n    const [vitB2,setVitB2] = useState(false);\n    const [vitB2Color,setVitB2Color] = useState('greenyellow');\n\n    const [vitB3,setVitB3] = useState(false);\n    const [vitB3Color,setVitB3Color] = useState('greenyellow');\n\n    const [vitB5,setVitB5] = useState(false);\n    const [vitB5Color,setVitB5Color] = useState('greenyellow');\n\n    const [vitB6,setVitB6] = useState(false);\n    const [vitB6Color,setVitB6Color] = useState('greenyellow');\n\n    const [vitB7,setVitB7] = useState(false);\n    const [vitB7Color,setVitB7Color] = useState('greenyellow');\n\n    const [vitB9,setVitB9] = useState(false);\n    const [vitB9Color,setVitB9Color] = useState('greenyellow');\n\n    const [vitB12,setVitB12] = useState(false);\n    const [vitB12Color,setVitB12Color] = useState('greenyellow');\n\n    const [vitC,setVitC] = useState(false);\n    const [vitCColor,setVitCColor] = useState('greenyellow');\n\n    const [vitD,setVitD] = useState(false);\n    const [vitDColor,setVitDColor] = useState('greenyellow');\n\n    const [vitE,setVitE] = useState(false);\n    const [vitEColor,setVitEColor] = useState('greenyellow');\n\n    const [vitK,setVitK] = useState(false);\n    const [vitKColor,setVitKColor] = useState('greenyellow');\n\n    const [Calcium,setCalcium] = useState(false);\n    const [CalciumColor,setCalciumColor] = useState('greenyellow');\n\n    const [Phos,Phosset] = useState(false);\n    const [PhosColor,setPhosColor] = useState('greenyellow');\n\n    const [Mag,Magset] = useState(false);\n    const [MagColor,setMagColor] = useState('greenyellow');\n\n    const [Sod,Sodset] = useState(false);\n    const [SodColor,setSodColor] = useState('greenyellow');\n\n    const [Chlo,Chloset] = useState(false);\n    const [ChloColor,setChloColor] = useState('greenyellow');\n\n    const [Pot,Potset] = useState(false);\n    const [PotColor,setPotColor] = useState('greenyellow');\n\n    const [Sul,Sulset] = useState(false);\n    const [SulColor,setSulColor] = useState('greenyellow');\n\n    const [Ir,Ironset] = useState(false);\n    const [IrColor,setIrColor] = useState('greenyellow');\n\n    const [Mang,Mangset] = useState(false);\n    const [MangColor,setMangColor] = useState('greenyellow');\n\n    const [Cop,Copset] = useState(false);\n    const [CopColor,setCopColor] = useState('greenyellow');\n\n    const [Zi,Ziset] = useState(false);\n    const [ZiColor,setZiColor] = useState('greenyellow');\n\n    const [Io,Ioset] = useState(false);\n    const [IoColor,setIoColor] = useState('greenyellow');\n\n    const [Flo,Floset] = useState(false);\n    const [FloColor,setFloColor] = useState('greenyellow');\n\n    const [Sel,Selset] = useState(false);\n    const [SelColor,setSelColor] = useState('greenyellow');\n\n    const [Protein,setProtein] = useState(false);\n    const [ProteinColor,setProteinColor] = useState('greenyellow');\n\n    const [Saturated,setSaturated] = useState(false);\n    const [SaturatedColor,setSaturatedColor] = useState('greenyellow');\n\n    const [PolyUnsaturated,setPolyUnsaturated] = useState(false);\n    const [PolyUnsaturatedColor,setPolyUnsaturatedColor] = useState('greenyellow');\n\n    const [MonoUnsaturated,setMonoUnsaturated] = useState(false);\n    const [MonoUnsaturatedColor,setMonoUnsaturatedColor] = useState('greenyellow');\n\n    const [Starch,setStarch] = useState(false);\n    const [StarchColor,setStarchColor] = useState('greenyellow');\n\n    const [Sugar,setSugar] = useState(false);\n    const [SugarColor,setSugarColor] = useState('greenyellow');\n\n    const [Fiber,setFiber] = useState(false);\n    const [FiberColor,setFiberColor] = useState('greenyellow');\n\n    return(\n        <div id = 'questionspage' class =\"body\">\n            <div id = \"macros\">\n    <div class = \"header\">Macros</div>\n    <div class = \"options\">\n        <div class = \"macro\">\n          <h4>Protein</h4>\n          <div class = \"buttons\">\n        <button class = \"button\" onClick={() => {\n        const bool = !Protein;\n        setProtein(bool);\n          bool ? setProteinColor(\"red\")  : setProteinColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ProteinColor }}>Protein</button> \n        </div>\n          </div>\n\n        <div class = \"macro\">\n            <h4>Fats</h4>\n          <div class = \"buttons\">\n            <button class = \"button\" onClick={() => {\n        const bool = !PolyUnsaturated;\n        setPolyUnsaturated(bool);\n          bool ? setPolyUnsaturatedColor(\"red\")  : setPolyUnsaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PolyUnsaturatedColor}}>Poly-Unsaturated</button>\n\n<button class = \"button\" onClick={() => {\n        const bool = !MonoUnsaturated;\n        setMonoUnsaturated(bool);\n          bool ? setMonoUnsaturatedColor(\"red\")  : setMonoUnsaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MonoUnsaturatedColor}}>Mono-Unsaturated</button>\n\n             <button class = \"button\" onClick={() => {\n        const bool = !Saturated;\n        setSaturated(bool);\n          bool ? setSaturatedColor(\"red\")  : setSaturatedColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SaturatedColor }}>Saturated</button>\n\n        </div>\n        </div>\n\n\n        <div class = \"macro\">\n          <h4>Carbohydrates</h4>\n          <div class = \"buttons\">\n             \n           <button class = \"button\" onClick={() => {\n        const bool = !Starch;\n        setStarch(bool);\n          bool ? setStarchColor(\"red\")  : setStarchColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: StarchColor}}>Starches \n         (Complex Carohydrates)</button>\n         \n<button class = \"button\" onClick={() => {\n        const bool = !Fiber;\n        setFiber(bool);\n          bool ? setFiberColor(\"red\")  : setFiberColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: FiberColor }}>Fiber</button>\n\n<button class = \"button\" onClick={() => {\n        const bool = !Sugar;\n        setSugar(bool);\n          bool ? setSugarColor(\"red\")  : setSugarColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SugarColor }}>Sugar</button>\n</div>\n        </div>\n\n    </div>\n    </div>\n\n    <div id=\"micros\">\n        <div className =\"header\">Micros</div>\n        <div className = \"choice\">\n            <div className =\"section\">\n            <h1>Vitamins</h1>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitA;\n        setVitA(bool);\n          bool ? setVitAColor(\"red\")  : setVitAColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitAColor }}>A</button>\n\n            <button class = \"button\"  onClick ={() => {\n        const bool = !vitB1;\n        setVitB1(!vitB1);\n          bool ? setVitB1Color(\"red\")  : setVitB1Color(\"greenyellow\");   \n        }} \n         style={{ backgroundColor: vitB1Color }} >B1(thiamine)</button>\n\n            <button class = \"button\"  onClick ={() => {\n        const bool = !vitB2;\n        setVitB2(!vitB2);\n          bool ? setVitB2Color(\"red\")  : setVitB2Color(\"greenyellow\");   \n        }} \n         style={{ backgroundColor: vitB2Color }}>B2(riboflavin)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB3;\n        setVitB3(!vitB3);\n        bool ? setVitB3Color(\"red\")  : setVitB3Color(\"greenyellow\");   \n        console.log(vitB3);\n        }} \n         style={{ backgroundColor: vitB3Color }}>B3(niacin)</button>\n            \n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB5;\n            setVitB5(!vitB5); \n          bool ? setVitB5Color(\"red\")  : setVitB5Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB5Color }}>B5(pantothenic acid)</button>\n\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB6;\n            setVitB6(!vitB6); \n          bool ? setVitB6Color(\"red\")  : setVitB6Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB6Color }}>B6(pyridoxine)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB7;\n            setVitB7(!vitB7); \n          bool ? setVitB7Color(\"red\")  : setVitB7Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB7Color }} >B7(biotin)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB9;\n            setVitB9(!vitB9); \n          bool ? setVitB9Color(\"red\")  : setVitB9Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB9Color }} >B9(folate)</button>\n\n            <button class = \"button\" onClick ={() => {\n        const bool = !vitB12;\n            setVitB12(!vitB12); \n          bool ? setVitB12Color(\"red\")  : setVitB12Color(\"greenyellow\");  \n        }} \n         style={{ backgroundColor: vitB12Color }}>B12(cobalamin)</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitC;\n        setVitC(bool);\n          bool ? setVitCColor(\"red\")  : setVitCColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitCColor }} >C</button>\n         \n            <button class = \"button\" onClick={() => {\n        const bool = !vitD;\n        setVitD(bool);\n          bool ? setVitDColor(\"red\")  : setVitDColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitDColor }}  >D</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitE;\n        setVitE(bool);\n          bool ? setVitEColor(\"red\")  : setVitEColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitEColor }}>E</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !vitK;\n        setVitK(bool);\n          bool ? setVitKColor(\"red\")  : setVitKColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: vitKColor }}>K</button>\n            </div>\n\n            <div class =\"section\">\n            <h1>Minerals</h1>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Calcium;\n        setCalcium(bool);\n          bool ? setCalciumColor(\"red\")  : setCalciumColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: CalciumColor }}>Calcium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Phos;\n        Phosset(bool);\n          bool ? setPhosColor(\"red\")  : setPhosColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PhosColor }}>Phosphorus</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Mag;\n        Magset(bool);\n          bool ? setMagColor(\"red\")  : setMagColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MagColor }}>Magnesium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sod;\n        Sodset(bool);\n          bool ? setSodColor(\"red\")  : setSodColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SodColor }}>Sodium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Chlo;\n        Chloset(bool);\n          bool ? setChloColor(\"red\")  : setChloColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ChloColor }}>Chloride</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Pot;\n        Potset(bool);\n          bool ? setPotColor(\"red\")  : setPotColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: PotColor }}>Potassium</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sul;\n        Sulset(bool);\n          bool ? setSulColor(\"red\")  : setSulColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SulColor }}>Sulfur</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Ir;\n        Ironset(bool);\n          bool ? setIrColor(\"red\")  : setIrColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: IrColor }}>Iron</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Mang;\n        Mangset(bool);\n          bool ? setMangColor(\"red\")  : setMangColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: MangColor }}>Manganese</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Cop;\n        Copset(bool);\n          bool ? setCopColor(\"red\")  : setCopColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: CopColor }}>Copper</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Zi;\n        Ziset(bool);\n          bool ? setZiColor(\"red\")  : setZiColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: ZiColor }}>Zinc</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Io;\n        Ioset(bool);\n          bool ? setIoColor(\"red\")  : setIoColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: IoColor }}>Iodine</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Flo;\n        Floset(bool);\n          bool ? setFloColor(\"red\")  : setFloColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: FloColor }}>Flouride</button>\n\n            <button class = \"button\" onClick={() => {\n        const bool = !Sel;\n        Selset(bool);\n          bool ? setSelColor(\"red\")  : setSelColor(\"greenyellow\");\n        }} \n         style={{ backgroundColor: SelColor }}>Selenium</button>\n\n            </div>\n\n        </div>\n    </div>\n    <Link\n     to={{\n      pathname:\"../catalog\",\n      state: {vitA,vitB1,vitB2,vitB3,vitB5,vitB6,vitB7,vitB9,\n      vitB12,vitC,vitD,vitE,vitK,Calcium,Phos,Mag,Sod,Chlo,Pot,Sul,Ir,\n    Mang,Cop,Zi,Io,Sel,Protein,MonoUnsaturated,Saturated,PolyUnsaturated,Starch,Fiber,Sugar},\n     }}><button class = \"next\">\n    To the Results!</button>\n    </Link>\n  \n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}
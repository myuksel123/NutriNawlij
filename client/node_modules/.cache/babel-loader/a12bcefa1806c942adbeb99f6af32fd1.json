{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport { NavLink } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Catalog from './Catalog';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuipComponent() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Outside of a dog, a book is a man\\u2019s best friend. Inside of a dog, it\\u2019s too dark to read.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\n_c = QuipComponent;\n\nfunction App() {\n  _s();\n\n  QuipComonent();\n  const [vitA, setVitA] = useState(false);\n  const [vitAColor, setVitAColor] = useState('gray');\n  const [vitB1, setVitB1] = useState(false);\n  const [vitB1Color, setVitB1Color] = useState('gray');\n  const [vitB2, setVitB2] = useState(false);\n  const [vitB2Color, setVitB2Color] = useState('gray');\n  const [vitB3, setVitB3] = useState(false);\n  const [vitB3Color, setVitB3Color] = useState('gray');\n  const [vitB5, setVitB5] = useState(false);\n  const [vitB5Color, setVitB5Color] = useState('gray');\n  const [vitB6, setVitB6] = useState(false);\n  const [vitB6Color, setVitB6Color] = useState('gray');\n  const [vitB7, setVitB7] = useState(false);\n  const [vitB7Color, setVitB7Color] = useState('gray');\n  const [vitB9, setVitB9] = useState(false);\n  const [vitB9Color, setVitB9Color] = useState('gray');\n  const [vitB12, setVitB12] = useState(false);\n  const [vitB12Color, setVitB12Color] = useState('gray');\n  const [vitC, setVitC] = useState(false);\n  const [vitCColor, setVitCColor] = useState('gray');\n  const [vitD, setVitD] = useState(false);\n  const [vitDColor, setVitDColor] = useState('gray');\n  const [vitE, setVitE] = useState(false);\n  const [vitEColor, setVitEColor] = useState('gray');\n  const [vitK, setVitK] = useState(false);\n  const [vitKColor, setVitKColor] = useState('gray');\n  const [Calcium, setCalcium] = useState(false);\n  const [CalciumColor, setCalciumColor] = useState('gray');\n  const [Phos, Phosset] = useState(false);\n  const [PhosColor, setPhosColor] = useState('gray');\n  const [Mag, Magset] = useState(false);\n  const [MagColor, setMagColor] = useState('gray');\n  const [Sod, Sodset] = useState(false);\n  const [SodColor, setSodColor] = useState('gray');\n  const [Chlo, Chloset] = useState(false);\n  const [ChloColor, setChloColor] = useState('gray');\n  const [Pot, Potset] = useState(false);\n  const [PotColor, setPotColor] = useState('gray');\n  const [Sul, Sulset] = useState(false);\n  const [SulColor, setSulColor] = useState('gray');\n  const [Ir, Ironset] = useState(false);\n  const [IrColor, setIrColor] = useState('gray');\n  const [Mang, Mangset] = useState(false);\n  const [MangColor, setMangColor] = useState('gray');\n  const [Cop, Copset] = useState(false);\n  const [CopColor, setCopColor] = useState('gray');\n  const [Zi, Ziset] = useState(false);\n  const [ZiColor, setZiColor] = useState('gray');\n  const [Io, Ioset] = useState(false);\n  const [IoColor, setIoColor] = useState('gray');\n  const [Flo, Floset] = useState(false);\n  const [FloColor, setFloColor] = useState('gray');\n  const [Sel, Selset] = useState(false);\n  const [SelColor, setSelColor] = useState('gray');\n  const [Vegn, Vegnset] = useState(false);\n  const [VegnColor, setVegnColor] = useState('gray');\n  const [Vege, Vegeset] = useState(false);\n  const [VegeColor, setVegeColor] = useState('gray');\n  const [Hal, Halset] = useState(false);\n  const [HalColor, setHalColor] = useState('gray');\n  const [Kosh, Koshset] = useState(false);\n  const [KoshColor, setKoshColor] = useState('gray');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"macros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header\",\n        children: \"Macros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"How much protein?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [\"How much of each fat?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"scale\",\n            children: \"Unsaturated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Omega-3s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Saturated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Omega-6s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"macro\",\n          children: [\"How much of each Carb?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\",\n            children: \"Starches (Complex Carbohydrates)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"scale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"micros\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Micros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select the ones you want to get more of\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Vitamins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitA;\n              setVitA(bool);\n              bool ? setVitAColor(\"red\") : setVitAColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitAColor\n            },\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB1;\n              setVitB1(!vitB1);\n              bool ? setVitB1Color(\"red\") : setVitB1Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB1Color\n            },\n            children: \"B1(thiamine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB2;\n              setVitB2(!vitB2);\n              bool ? setVitB2Color(\"red\") : setVitB2Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB2Color\n            },\n            children: \"B2(riboflavin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB3;\n              setVitB3(!vitB3);\n              bool ? setVitB3Color(\"red\") : setVitB3Color(\"gray\");\n              console.log(vitB3);\n            },\n            style: {\n              backgroundColor: vitB3Color\n            },\n            children: \"B3(niacin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB5;\n              setVitB5(!vitB5);\n              bool ? setVitB5Color(\"red\") : setVitB5Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB5Color\n            },\n            children: \"B5(pantothenic acid)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB6;\n              setVitB6(!vitB6);\n              bool ? setVitB6Color(\"red\") : setVitB6Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB6Color\n            },\n            children: \"B6(pyridoxine)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB7;\n              setVitB7(!vitB7);\n              bool ? setVitB7Color(\"red\") : setVitB7Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB7Color\n            },\n            children: \"B7(biotin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB9;\n              setVitB9(!vitB9);\n              bool ? setVitB9Color(\"red\") : setVitB9Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB9Color\n            },\n            children: \"B9(folate)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitB12;\n              setVitB12(!vitB12);\n              bool ? setVitB12Color(\"red\") : setVitB12Color(\"gray\");\n            },\n            style: {\n              backgroundColor: vitB12Color\n            },\n            children: \"B12(cobalamin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitC;\n              setVitC(bool);\n              bool ? setVitCColor(\"red\") : setVitCColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitCColor\n            },\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitD;\n              setVitD(bool);\n              bool ? setVitDColor(\"red\") : setVitDColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitDColor\n            },\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitE;\n              setVitE(bool);\n              bool ? setVitEColor(\"red\") : setVitEColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitEColor\n            },\n            children: \"E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !vitK;\n              setVitK(bool);\n              bool ? setVitKColor(\"red\") : setVitKColor(\"gray\");\n            },\n            style: {\n              backgroundColor: vitKColor\n            },\n            children: \"K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Minerals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Calcium;\n              setCalcium(bool);\n              bool ? setCalciumColor(\"red\") : setCalciumColor(\"gray\");\n            },\n            style: {\n              backgroundColor: CalciumColor\n            },\n            children: \"Calcium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Phos;\n              Phosset(bool);\n              bool ? setPhosColor(\"red\") : setPhosColor(\"gray\");\n            },\n            style: {\n              backgroundColor: PhosColor\n            },\n            children: \"Phosphorus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Mag;\n              Magset(bool);\n              bool ? setMagColor(\"red\") : setMagColor(\"gray\");\n            },\n            style: {\n              backgroundColor: MagColor\n            },\n            children: \"Magnesium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sod;\n              Sodset(bool);\n              bool ? setSodColor(\"red\") : setSodColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SodColor\n            },\n            children: \"Sodium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Chlo;\n              Chloset(bool);\n              bool ? setChloColor(\"red\") : setChloColor(\"gray\");\n            },\n            style: {\n              backgroundColor: ChloColor\n            },\n            children: \"Chloride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Pot;\n              Potset(bool);\n              bool ? setPotColor(\"red\") : setPotColor(\"gray\");\n            },\n            style: {\n              backgroundColor: PotColor\n            },\n            children: \"Potassium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sul;\n              Sulset(bool);\n              bool ? setSulColor(\"red\") : setSulColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SulColor\n            },\n            children: \"Sulfur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Ir;\n              Ironset(bool);\n              bool ? setIrColor(\"red\") : setIrColor(\"gray\");\n            },\n            style: {\n              backgroundColor: IrColor\n            },\n            children: \"Iron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Mang;\n              Mangset(bool);\n              bool ? setMangColor(\"red\") : setMangColor(\"gray\");\n            },\n            style: {\n              backgroundColor: MangColor\n            },\n            children: \"Manganese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Cop;\n              Copset(bool);\n              bool ? setCopColor(\"red\") : setCopColor(\"gray\");\n            },\n            style: {\n              backgroundColor: CopColor\n            },\n            children: \"Copper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Zi;\n              Ziset(bool);\n              bool ? setZiColor(\"red\") : setZiColor(\"gray\");\n            },\n            style: {\n              backgroundColor: ZiColor\n            },\n            children: \"Zinc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Io;\n              Ioset(bool);\n              bool ? setIoColor(\"red\") : setIoColor(\"gray\");\n            },\n            style: {\n              backgroundColor: IoColor\n            },\n            children: \"Iodine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Flo;\n              Floset(bool);\n              bool ? setFloColor(\"red\") : setFloColor(\"gray\");\n            },\n            style: {\n              backgroundColor: FloColor\n            },\n            children: \"Flouride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const bool = !Sel;\n              Selset(bool);\n              bool ? setSelColor(\"red\") : setSelColor(\"gray\");\n            },\n            style: {\n              backgroundColor: SelColor\n            },\n            children: \"Selenium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"restrictions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Do any of these apply to you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Vegn;\n          Vegnset(bool);\n          bool ? setVegnColor(\"red\") : setVegnColor(\"gray\");\n        },\n        style: {\n          backgroundColor: VegnColor\n        },\n        children: \"Vegan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Vege;\n          Vegeset(bool);\n          bool ? setVegeColor(\"red\") : setVegeColor(\"gray\");\n        },\n        style: {\n          backgroundColor: VegeColor\n        },\n        children: \"Vegetarian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Hal;\n          Halset(bool);\n          bool ? setHalColor(\"red\") : setHalColor(\"gray\");\n        },\n        style: {\n          backgroundColor: HalColor\n        },\n        children: \"Halal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const bool = !Kosh;\n          Koshset(bool);\n          bool ? setKoshColor(\"red\") : setKoshColor(\"gray\");\n        },\n        style: {\n          backgroundColor: KoshColor\n        },\n        children: \"Kosher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"source.js\",\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Allergies\",\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"allergies\",\n          name: \"allergies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/catalog\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Catalog, {\n      VitaminA: vitA,\n      VitaminB1: vitB1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"TSDPLW02V3ZwbDnoP0bLmltzcMA=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuipComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Questions.jsx"],"names":["NavLink","React","useState","Catalog","ReactDOM","QuipComponent","App","QuipComonent","vitA","setVitA","vitAColor","setVitAColor","vitB1","setVitB1","vitB1Color","setVitB1Color","vitB2","setVitB2","vitB2Color","setVitB2Color","vitB3","setVitB3","vitB3Color","setVitB3Color","vitB5","setVitB5","vitB5Color","setVitB5Color","vitB6","setVitB6","vitB6Color","setVitB6Color","vitB7","setVitB7","vitB7Color","setVitB7Color","vitB9","setVitB9","vitB9Color","setVitB9Color","vitB12","setVitB12","vitB12Color","setVitB12Color","vitC","setVitC","vitCColor","setVitCColor","vitD","setVitD","vitDColor","setVitDColor","vitE","setVitE","vitEColor","setVitEColor","vitK","setVitK","vitKColor","setVitKColor","Calcium","setCalcium","CalciumColor","setCalciumColor","Phos","Phosset","PhosColor","setPhosColor","Mag","Magset","MagColor","setMagColor","Sod","Sodset","SodColor","setSodColor","Chlo","Chloset","ChloColor","setChloColor","Pot","Potset","PotColor","setPotColor","Sul","Sulset","SulColor","setSulColor","Ir","Ironset","IrColor","setIrColor","Mang","Mangset","MangColor","setMangColor","Cop","Copset","CopColor","setCopColor","Zi","Ziset","ZiColor","setZiColor","Io","Ioset","IoColor","setIoColor","Flo","Floset","FloColor","setFloColor","Sel","Selset","SelColor","setSelColor","Vegn","Vegnset","VegnColor","setVegnColor","Vege","Vegeset","VegeColor","setVegeColor","Hal","Halset","HalColor","setHalColor","Kosh","Koshset","KoshColor","setKoshColor","bool","backgroundColor","console","log"],"mappings":"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","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React, { useState } from 'react'\nimport Catalog from './Catalog';\nimport ReactDOM from 'react-dom';\n\nfunction QuipComponent() {\n    return <p>Outside of a dog, a book is a man’s best friend. Inside of a dog, it’s too dark to read.</p>;\n  }\nfunction App(){\n    QuipComonent();\n    const [vitA,setVitA] = useState(false);\n    const [vitAColor,setVitAColor] = useState('gray');\n\n    const [vitB1,setVitB1] = useState(false);\n    const [vitB1Color,setVitB1Color] = useState('gray');\n\n    const [vitB2,setVitB2] = useState(false);\n    const [vitB2Color,setVitB2Color] = useState('gray');\n\n    const [vitB3,setVitB3] = useState(false);\n    const [vitB3Color,setVitB3Color] = useState('gray');\n\n    const [vitB5,setVitB5] = useState(false);\n    const [vitB5Color,setVitB5Color] = useState('gray');\n\n    const [vitB6,setVitB6] = useState(false);\n    const [vitB6Color,setVitB6Color] = useState('gray');\n\n    const [vitB7,setVitB7] = useState(false);\n    const [vitB7Color,setVitB7Color] = useState('gray');\n\n    const [vitB9,setVitB9] = useState(false);\n    const [vitB9Color,setVitB9Color] = useState('gray');\n\n    const [vitB12,setVitB12] = useState(false);\n    const [vitB12Color,setVitB12Color] = useState('gray');\n\n    const [vitC,setVitC] = useState(false);\n    const [vitCColor,setVitCColor] = useState('gray');\n\n    const [vitD,setVitD] = useState(false);\n    const [vitDColor,setVitDColor] = useState('gray');\n\n    const [vitE,setVitE] = useState(false);\n    const [vitEColor,setVitEColor] = useState('gray');\n\n    const [vitK,setVitK] = useState(false);\n    const [vitKColor,setVitKColor] = useState('gray');\n\n    const [Calcium,setCalcium] = useState(false);\n    const [CalciumColor,setCalciumColor] = useState('gray');\n\n    const [Phos,Phosset] = useState(false);\n    const [PhosColor,setPhosColor] = useState('gray');\n\n    const [Mag,Magset] = useState(false);\n    const [MagColor,setMagColor] = useState('gray');\n\n    const [Sod,Sodset] = useState(false);\n    const [SodColor,setSodColor] = useState('gray');\n\n    const [Chlo,Chloset] = useState(false);\n    const [ChloColor,setChloColor] = useState('gray');\n\n    const [Pot,Potset] = useState(false);\n    const [PotColor,setPotColor] = useState('gray');\n\n    const [Sul,Sulset] = useState(false);\n    const [SulColor,setSulColor] = useState('gray');\n\n    const [Ir,Ironset] = useState(false);\n    const [IrColor,setIrColor] = useState('gray');\n\n    const [Mang,Mangset] = useState(false);\n    const [MangColor,setMangColor] = useState('gray');\n\n    const [Cop,Copset] = useState(false);\n    const [CopColor,setCopColor] = useState('gray');\n\n    const [Zi,Ziset] = useState(false);\n    const [ZiColor,setZiColor] = useState('gray');\n\n    const [Io,Ioset] = useState(false);\n    const [IoColor,setIoColor] = useState('gray');\n\n    const [Flo,Floset] = useState(false);\n    const [FloColor,setFloColor] = useState('gray');\n\n    const [Sel,Selset] = useState(false);\n    const [SelColor,setSelColor] = useState('gray');\n\n    const [Vegn,Vegnset] = useState(false);\n    const [VegnColor,setVegnColor] = useState('gray');\n\n    const [Vege,Vegeset] = useState(false);\n    const [VegeColor,setVegeColor] = useState('gray');\n\n    const [Hal,Halset] = useState(false);\n    const [HalColor,setHalColor] = useState('gray');\n\n    const [Kosh,Koshset] = useState(false);\n    const [KoshColor,setKoshColor] = useState('gray');\n\n  \n    return(\n        <div>\n            <div id = \"macros\">\n    <div class = \"header\">Macros</div>\n    <div class = \"options\">\n        <div class = \"macro\">\n        <div class = \"scale\">\n            How much protein?\n            </div>  \n        </div>\n\n        <div class = \"macro\">\n            How much of each fat?\n            <div id = \"scale\">\n                Unsaturated\n            </div>\n            <div class = \"scale\">\n                Omega-3s\n            </div>\n            <div class = \"scale\">\n                Saturated\n            </div>\n            <div class = \"scale\">\n                Omega-6s\n            </div>\n        </div>\n\n        <div class = \"macro\">\n            How much of each Carb?\n            <div class = \"scale\">\n                Starches (Complex Carbohydrates)\n            </div>\n            <div class = \"scale\">\n            </div>\n        </div>\n\n    </div>\n    </div>\n\n    <div id=\"micros\">\n        <div className =\"header\">Micros</div>\n        <h2>Select the ones you want to get more of</h2>\n        <div className = \"choice\">\n            <div className =\"section\">\n            <h1>Vitamins</h1>\n\n            <button onClick={() => {\n        const bool = !vitA;\n        setVitA(bool);\n          bool ? setVitAColor(\"red\")  : setVitAColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitAColor }}>A</button>\n\n            <button onClick ={() => {\n        const bool = !vitB1;\n        setVitB1(!vitB1);\n          bool ? setVitB1Color(\"red\")  : setVitB1Color(\"gray\");   \n        }} \n         style={{ backgroundColor: vitB1Color }} >B1(thiamine)</button>\n\n            <button  onClick ={() => {\n        const bool = !vitB2;\n        setVitB2(!vitB2);\n          bool ? setVitB2Color(\"red\")  : setVitB2Color(\"gray\");   \n        }} \n         style={{ backgroundColor: vitB2Color }}>B2(riboflavin)</button>\n\n            <button  onClick ={() => {\n        const bool = !vitB3;\n        setVitB3(!vitB3);\n        bool ? setVitB3Color(\"red\")  : setVitB3Color(\"gray\");   \n        console.log(vitB3);\n        }} \n         style={{ backgroundColor: vitB3Color }}>B3(niacin)</button>\n            \n            <button  onClick ={() => {\n        const bool = !vitB5;\n            setVitB5(!vitB5); \n          bool ? setVitB5Color(\"red\")  : setVitB5Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB5Color }}>B5(pantothenic acid)</button>\n\n\n            <button onClick ={() => {\n        const bool = !vitB6;\n            setVitB6(!vitB6); \n          bool ? setVitB6Color(\"red\")  : setVitB6Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB6Color }}>B6(pyridoxine)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB7;\n            setVitB7(!vitB7); \n          bool ? setVitB7Color(\"red\")  : setVitB7Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB7Color }} >B7(biotin)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB9;\n            setVitB9(!vitB9); \n          bool ? setVitB9Color(\"red\")  : setVitB9Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB9Color }} >B9(folate)</button>\n\n            <button onClick ={() => {\n        const bool = !vitB12;\n            setVitB12(!vitB12); \n          bool ? setVitB12Color(\"red\")  : setVitB12Color(\"gray\");  \n        }} \n         style={{ backgroundColor: vitB12Color }}>B12(cobalamin)</button>\n\n            <button onClick={() => {\n        const bool = !vitC;\n        setVitC(bool);\n          bool ? setVitCColor(\"red\")  : setVitCColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitCColor }} >C</button>\n         \n            <button onClick={() => {\n        const bool = !vitD;\n        setVitD(bool);\n          bool ? setVitDColor(\"red\")  : setVitDColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitDColor }}  >D</button>\n\n            <button onClick={() => {\n        const bool = !vitE;\n        setVitE(bool);\n          bool ? setVitEColor(\"red\")  : setVitEColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitEColor }}>E</button>\n\n            <button onClick={() => {\n        const bool = !vitK;\n        setVitK(bool);\n          bool ? setVitKColor(\"red\")  : setVitKColor(\"gray\");\n        }} \n         style={{ backgroundColor: vitKColor }}>K</button>\n            </div>\n\n            <div class =\"section\">\n            <h1>Minerals</h1>\n\n            <button onClick={() => {\n        const bool = !Calcium;\n        setCalcium(bool);\n          bool ? setCalciumColor(\"red\")  : setCalciumColor(\"gray\");\n        }} \n         style={{ backgroundColor: CalciumColor }}>Calcium</button>\n\n            <button onClick={() => {\n        const bool = !Phos;\n        Phosset(bool);\n          bool ? setPhosColor(\"red\")  : setPhosColor(\"gray\");\n        }} \n         style={{ backgroundColor: PhosColor }}>Phosphorus</button>\n\n            <button onClick={() => {\n        const bool = !Mag;\n        Magset(bool);\n          bool ? setMagColor(\"red\")  : setMagColor(\"gray\");\n        }} \n         style={{ backgroundColor: MagColor }}>Magnesium</button>\n\n            <button onClick={() => {\n        const bool = !Sod;\n        Sodset(bool);\n          bool ? setSodColor(\"red\")  : setSodColor(\"gray\");\n        }} \n         style={{ backgroundColor: SodColor }}>Sodium</button>\n\n            <button  onClick={() => {\n        const bool = !Chlo;\n        Chloset(bool);\n          bool ? setChloColor(\"red\")  : setChloColor(\"gray\");\n        }} \n         style={{ backgroundColor: ChloColor }}>Chloride</button>\n\n            <button onClick={() => {\n        const bool = !Pot;\n        Potset(bool);\n          bool ? setPotColor(\"red\")  : setPotColor(\"gray\");\n        }} \n         style={{ backgroundColor: PotColor }}>Potassium</button>\n\n            <button onClick={() => {\n        const bool = !Sul;\n        Sulset(bool);\n          bool ? setSulColor(\"red\")  : setSulColor(\"gray\");\n        }} \n         style={{ backgroundColor: SulColor }}>Sulfur</button>\n\n            <button onClick={() => {\n        const bool = !Ir;\n        Ironset(bool);\n          bool ? setIrColor(\"red\")  : setIrColor(\"gray\");\n        }} \n         style={{ backgroundColor: IrColor }}>Iron</button>\n\n            <button onClick={() => {\n        const bool = !Mang;\n        Mangset(bool);\n          bool ? setMangColor(\"red\")  : setMangColor(\"gray\");\n        }} \n         style={{ backgroundColor: MangColor }}>Manganese</button>\n\n            <button onClick={() => {\n        const bool = !Cop;\n        Copset(bool);\n          bool ? setCopColor(\"red\")  : setCopColor(\"gray\");\n        }} \n         style={{ backgroundColor: CopColor }}>Copper</button>\n\n            <button onClick={() => {\n        const bool = !Zi;\n        Ziset(bool);\n          bool ? setZiColor(\"red\")  : setZiColor(\"gray\");\n        }} \n         style={{ backgroundColor: ZiColor }}>Zinc</button>\n\n            <button onClick={() => {\n        const bool = !Io;\n        Ioset(bool);\n          bool ? setIoColor(\"red\")  : setIoColor(\"gray\");\n        }} \n         style={{ backgroundColor: IoColor }}>Iodine</button>\n\n            <button onClick={() => {\n        const bool = !Flo;\n        Floset(bool);\n          bool ? setFloColor(\"red\")  : setFloColor(\"gray\");\n        }} \n         style={{ backgroundColor: FloColor }}>Flouride</button>\n\n            <button onClick={() => {\n        const bool = !Sel;\n        Selset(bool);\n          bool ? setSelColor(\"red\")  : setSelColor(\"gray\");\n        }} \n         style={{ backgroundColor: SelColor }}>Selenium</button>\n\n            </div>\n\n        </div>\n    </div>\n    <div id=\"restrictions\">\n        <h1>Do any of these apply to you?</h1>\n\n        <button onClick={() => {\n        const bool = !Vegn;\n        Vegnset(bool);\n          bool ? setVegnColor(\"red\")  : setVegnColor(\"gray\");\n        }} \n         style={{ backgroundColor: VegnColor }}>Vegan</button>\n\n        <button onClick={() => {\n        const bool = !Vege;\n        Vegeset(bool);\n          bool ? setVegeColor(\"red\")  : setVegeColor(\"gray\");\n        }} \n         style={{ backgroundColor: VegeColor }}>Vegetarian</button>\n\n        <button onClick={() => {\n        const bool = !Hal;\n        Halset(bool);\n          bool ? setHalColor(\"red\")  : setHalColor(\"gray\");\n        }} \n         style={{ backgroundColor: HalColor }}>Halal</button>\n\n        <button onClick={() => {\n        const bool = !Kosh;\n        Koshset(bool);\n          bool ? setKoshColor(\"red\")  : setKoshColor(\"gray\");\n        }} \n         style={{ backgroundColor: KoshColor }}>Kosher</button>\n\n        <form action =\"source.js\" method = \"post\">\n            <label  for=\"Allergies\">Allergies:</label>\n            <input type=\"text\" id=\"allergies\" name=\"allergies\"></input>\n        <button>Select</button>\n            </form>\n    </div>\n    <NavLink to=\"/catalog\"><button>\n    Next</button></NavLink>\n    <Catalog VitaminA={vitA} VitaminB1 ={vitB1}/>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}
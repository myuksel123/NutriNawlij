{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport { checkPropTypes } from \"prop-types\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = props => {\n  _s();\n\n  const [VitaminA, setVitaminA] = useState([]);\n  const [VitaminB1, setVitaminB1] = useState([]);\n  const [VitaminB2, setVitaminB2] = useState([]);\n  const [VitaminB3, setVitaminB3] = useState([]);\n  const [VitaminB5, setVitaminB5] = useState([]);\n  const [VitaminB6, setVitaminB6] = useState([]);\n  const [VitaminB7, setVitaminB7] = useState([]);\n  const [VitaminB9, setVitaminB9] = useState([]);\n  const [VitaminB12, setVitaminB12] = useState([]);\n  const [Calcium, setCalcium] = useState([]);\n  const [Phosphorus, setPhosporus] = useState([]);\n  const [Magnesium, setMagnesium] = useState([]);\n  const [Sod, Sodset] = useState([]);\n  const [Chlo, Chloset] = useState([]);\n  const [Pot, Potset] = useState([]);\n  const [Sul, Sulset] = useState([]);\n  const [Ir, Ironset] = useState([]);\n  const [Mang, Mangset] = useState([]);\n  const [Cop, Copset] = useState([]);\n  const [Zi, Ziset] = useState([]);\n  const [Io, Ioset] = useState([]);\n  const [Flo, Floset] = useState([]);\n  const [Sel, Selset] = useState([]);\n  const [results, setResults] = useState([]); //console.log(props.location.state);\n\n  useEffect(() => {\n    fetch(\"/VitaminA\").then(res => res.json()).then(VitaminA => setVitaminA(VitaminA));\n  }, []);\n  console.log(VitaminA.rows);\n\n  for (let i = 0; i < VitaminA.rowCount; i++) {\n    results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"options\",\n      children: [VitaminA.rows[i].description, \" has \", VitaminA.rows[i].amount, \" \", VitaminA.rows[i].unit, \" \", VitaminA.rows[i].name, \"  per 100g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"3GA0eSfqtMYkxKggylyPm/cmUbw=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/home/meryem/repos/NutriNear2/client/src/pages/Catalog.jsx"],"names":["checkPropTypes","React","useState","useEffect","useLocation","Catalog","props","VitaminA","setVitaminA","VitaminB1","setVitaminB1","VitaminB2","setVitaminB2","VitaminB3","setVitaminB3","VitaminB5","setVitaminB5","VitaminB6","setVitaminB6","VitaminB7","setVitaminB7","VitaminB9","setVitaminB9","VitaminB12","setVitaminB12","Calcium","setCalcium","Phosphorus","setPhosporus","Magnesium","setMagnesium","Sod","Sodset","Chlo","Chloset","Pot","Potset","Sul","Sulset","Ir","Ironset","Mang","Mangset","Cop","Copset","Zi","Ziset","Io","Ioset","Flo","Floset","Sel","Selset","results","setResults","fetch","then","res","json","console","log","rows","i","rowCount","push","description","amount","unit","name"],"mappings":"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","sourcesContent":["import { checkPropTypes } from \"prop-types\";\nimport React from \"react\";\nimport {useState,useEffect} from 'react';\nimport {useLocation} from 'react-router-dom'\n\n\nconst Catalog = (props) =>{\n    const [VitaminA, setVitaminA] = useState([]);\n    const [VitaminB1, setVitaminB1] = useState([]);\n    const [VitaminB2, setVitaminB2] = useState([]);\n    const [VitaminB3, setVitaminB3] = useState([]);\n    const [VitaminB5, setVitaminB5] = useState([]);\n    const [VitaminB6, setVitaminB6] = useState([]);\n    const [VitaminB7, setVitaminB7] = useState([]);\n    const [VitaminB9, setVitaminB9] = useState([]);\n    const [VitaminB12, setVitaminB12] = useState([]);\n    const[Calcium,setCalcium]=useState([]);\n    const[Phosphorus,setPhosporus]=useState([]);\n    const [Magnesium,setMagnesium] = useState([]);\n    const [Sod,Sodset] = useState([]);\n    const [Chlo,Chloset] = useState([]);\n    const [Pot,Potset] = useState([]);\n    const [Sul,Sulset] = useState([]);\n    const [Ir,Ironset] = useState([]);\n    const [Mang,Mangset] = useState([]);\n    const [Cop,Copset] = useState([]);\n    const [Zi,Ziset] = useState([]);\n    const [Io,Ioset] = useState([]);\n    const [Flo,Floset] = useState([]);\n    const [Sel,Selset] = useState([]);\n\n\n\n    const [results, setResults] = useState([]);\n    //console.log(props.location.state);\n\n    useEffect(()=>{\n    fetch(\"/VitaminA\").then(\n        res=>res.json())\n        .then(VitaminA=>setVitaminA(VitaminA));\n    }, []);\n    \n    console.log(VitaminA.rows);\n\n  for(let i=0; i<VitaminA.rowCount; i++){\n    results.push(<div class =\"options\">{VitaminA.rows[i].description} has {\n       VitaminA.rows[i].amount} {VitaminA.rows[i].unit} {VitaminA.rows[i].name}  per 100g</div>);\n    }\n    return(\n        <div>\n            {results}\n        </div>\n    );\n}\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}
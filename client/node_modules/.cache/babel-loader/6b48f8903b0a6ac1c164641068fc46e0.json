{"ast":null,"code":"import { geometry as g, drawing as d } from '@progress/kendo-drawing';\nimport { Class, defined, last, setDefaultOptions } from '../../common';\nimport { proxy } from '../utils';\nimport { Layer } from './layer';\nimport { Movable } from '../scroller/draggable';\nimport { Location } from '../location';\nvar Group = d.Group;\nexport var ShapeLayer = function (Layer) {\n  function ShapeLayer(map, options) {\n    Layer.call(this, map, options);\n    this._pan = proxy(this._pan, this);\n    this.surface = d.Surface.create(this.element, {\n      width: map.scrollElement.clientWidth,\n      height: map.scrollElement.clientHeight\n    });\n\n    this._initRoot();\n\n    this.movable = new Movable(this.surface.element);\n    this._markers = [];\n    this._click = this._handler('shapeClick');\n    this.surface.bind('click', this._click);\n    this._mouseenter = this._handler('shapeMouseEnter');\n    this.surface.bind('mouseenter', this._mouseenter);\n    this._mouseleave = this._handler('shapeMouseLeave');\n    this.surface.bind('mouseleave', this._mouseleave);\n  }\n\n  if (Layer) ShapeLayer.__proto__ = Layer;\n  ShapeLayer.prototype = Object.create(Layer && Layer.prototype);\n  ShapeLayer.prototype.constructor = ShapeLayer;\n\n  ShapeLayer.prototype.destroy = function destroy() {\n    Layer.prototype.destroy.call(this);\n    this.surface.destroy();\n  };\n\n  ShapeLayer.prototype._reset = function _reset() {\n    Layer.prototype._reset.call(this);\n\n    this._translateSurface();\n\n    this._data = this._readData();\n\n    if (this._hasData()) {\n      this._load(this._data);\n    }\n  };\n\n  ShapeLayer.prototype._initRoot = function _initRoot() {\n    this._root = new Group();\n    this.surface.draw(this._root);\n  };\n\n  ShapeLayer.prototype._beforeReset = function _beforeReset() {\n    this.surface.clear();\n\n    this._initRoot();\n  };\n\n  ShapeLayer.prototype._resize = function _resize() {\n    this.surface.size(this.map.size());\n  };\n\n  ShapeLayer.prototype._readData = function _readData() {\n    var data = Layer.prototype._readData.call(this);\n\n    if (data.type === \"FeatureCollection\") {\n      return data.features;\n    }\n\n    if (data.type === \"GeometryCollection\") {\n      return data.geometries;\n    }\n\n    return data;\n  };\n\n  ShapeLayer.prototype._load = function _load(data) {\n    var this$1 = this;\n    this._data = data;\n\n    this._clearMarkers();\n\n    if (!this._loader) {\n      this._loader = new GeoJsonLoader(this.map, this.options.style, this);\n    }\n\n    var container = new Group();\n\n    for (var i = 0; i < data.length; i++) {\n      var shape = this$1._loader.parse(data[i]);\n\n      if (shape) {\n        container.append(shape);\n      }\n    }\n\n    this._root.clear();\n\n    this._root.append(container);\n  };\n\n  ShapeLayer.prototype.shapeCreated = function shapeCreated(shape) {\n    var cancelled = false; // the GeoJSON loader builds \"Point\" type as a circle\n    // use the circle shape type as and indicator for rendering a marker\n    // keep the behavior under a setting as this is supported by kendo jQuery Map\n    // but we opted out of this in blazor\n\n    if (shape instanceof d.Circle && this.map.options.renderPointsAsMarkers) {\n      cancelled = defined(this._createMarker(shape));\n    }\n\n    if (!cancelled) {\n      var args = {\n        layer: this,\n        shape: shape\n      };\n      cancelled = this.map.trigger('shapeCreated', args);\n    }\n\n    return cancelled;\n  };\n\n  ShapeLayer.prototype.featureCreated = function featureCreated(e) {\n    e.layer = this;\n    this.map.trigger('shapeFeatureCreated', e);\n  };\n\n  ShapeLayer.prototype._createMarker = function _createMarker(shape) {\n    var marker = this.map.markers.bind({\n      location: shape.location\n    }, shape.dataItem);\n\n    if (marker) {\n      this._markers.push(marker);\n    }\n\n    return marker;\n  };\n\n  ShapeLayer.prototype._clearMarkers = function _clearMarkers() {\n    var this$1 = this;\n\n    for (var i = 0; i < this._markers.length; i++) {\n      this$1.map.markers.remove(this$1._markers[i]);\n    }\n\n    this._markers = [];\n  };\n\n  ShapeLayer.prototype._pan = function _pan() {\n    if (!this._panning) {\n      this._panning = true;\n      this.surface.suspendTracking();\n    }\n  };\n\n  ShapeLayer.prototype._panEnd = function _panEnd(e) {\n    Layer.prototype._panEnd.call(this, e);\n\n    this._translateSurface();\n\n    this.surface.resumeTracking();\n    this._panning = false;\n  };\n\n  ShapeLayer.prototype._translateSurface = function _translateSurface() {\n    var map = this.map;\n    var nw = map.locationToView(map.extent().nw);\n\n    if (this.surface.translate) {\n      this.surface.translate(nw);\n      this.movable.moveTo({\n        x: nw.x,\n        y: nw.y\n      });\n    }\n  };\n\n  ShapeLayer.prototype._handler = function _handler(event) {\n    var layer = this;\n    return function (e) {\n      if (e.element) {\n        var args = {\n          layer: layer,\n          layerIndex: (layer.map.layers || []).indexOf(layer),\n          shape: e.element,\n          shapeIndex: (layer._data || []).indexOf(e.element.dataItem),\n          originalEvent: e.originalEvent\n        };\n        layer.map.trigger(event, args);\n      }\n    };\n  };\n\n  ShapeLayer.prototype._activate = function _activate() {\n    Layer.prototype._activate.call(this);\n\n    this._panHandler = proxy(this._pan, this);\n    this.map.bind('pan', this.panHandler);\n  };\n\n  ShapeLayer.prototype._deactivate = function _deactivate() {\n    Layer.prototype._deactivate.call(this);\n\n    this.map.unbind('pan', this._panHandler);\n  };\n\n  return ShapeLayer;\n}(Layer);\nsetDefaultOptions(ShapeLayer, {\n  autoBind: true,\n  zIndex: 100\n});\n\nvar GeoJsonLoader = function (Class) {\n  function GeoJsonLoader(locator, defaultStyle, observer) {\n    Class.call(this);\n    this.observer = observer;\n    this.locator = locator;\n    this.style = defaultStyle;\n  }\n\n  if (Class) GeoJsonLoader.__proto__ = Class;\n  GeoJsonLoader.prototype = Object.create(Class && Class.prototype);\n  GeoJsonLoader.prototype.constructor = GeoJsonLoader;\n\n  GeoJsonLoader.prototype.parse = function parse(item) {\n    var root = new Group();\n    var unwrap = true;\n\n    if (item.type === 'Feature') {\n      unwrap = false;\n\n      this._loadGeometryTo(root, item.geometry, item);\n\n      this._featureCreated(root, item);\n    } else {\n      this._loadGeometryTo(root, item, item);\n    }\n\n    if (unwrap && root.children.length < 2) {\n      root = root.children[0];\n    }\n\n    return root;\n  };\n\n  GeoJsonLoader.prototype._shapeCreated = function _shapeCreated(shape) {\n    var cancelled = false;\n\n    if (this.observer && this.observer.shapeCreated) {\n      cancelled = this.observer.shapeCreated(shape);\n    }\n\n    return cancelled;\n  };\n\n  GeoJsonLoader.prototype._featureCreated = function _featureCreated(group, dataItem) {\n    if (this.observer && this.observer.featureCreated) {\n      this.observer.featureCreated({\n        group: group,\n        dataItem: dataItem,\n        properties: dataItem.properties\n      });\n    }\n  };\n  /* eslint-disable indent */\n\n\n  GeoJsonLoader.prototype._loadGeometryTo = function _loadGeometryTo(container, geometry, dataItem) {\n    var this$1 = this;\n    var coords = geometry.coordinates;\n    var i;\n    var path;\n\n    switch (geometry.type) {\n      case 'LineString':\n        path = this._loadPolygon(container, [coords], dataItem);\n\n        this._setLineFill(path);\n\n        break;\n\n      case 'MultiLineString':\n        for (i = 0; i < coords.length; i++) {\n          path = this$1._loadPolygon(container, [coords[i]], dataItem);\n\n          this$1._setLineFill(path);\n        }\n\n        break;\n\n      case 'Polygon':\n        this._loadPolygon(container, coords, dataItem);\n\n        break;\n\n      case 'MultiPolygon':\n        for (i = 0; i < coords.length; i++) {\n          this$1._loadPolygon(container, coords[i], dataItem);\n        }\n\n        break;\n\n      case 'Point':\n        this._loadPoint(container, coords, dataItem);\n\n        break;\n\n      case 'MultiPoint':\n        for (i = 0; i < coords.length; i++) {\n          this$1._loadPoint(container, coords[i], dataItem);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n  /* eslint-disable indent */\n\n\n  GeoJsonLoader.prototype._setLineFill = function _setLineFill(path) {\n    var segments = path.segments;\n\n    if (segments.length < 4 || !segments[0].anchor().equals(last(segments).anchor())) {\n      path.options.fill = null;\n    }\n  };\n\n  GeoJsonLoader.prototype._loadShape = function _loadShape(container, shape) {\n    if (!this._shapeCreated(shape)) {\n      container.append(shape);\n    }\n\n    return shape;\n  };\n\n  GeoJsonLoader.prototype._loadPolygon = function _loadPolygon(container, rings, dataItem) {\n    var shape = this._buildPolygon(rings);\n\n    shape.dataItem = dataItem;\n    return this._loadShape(container, shape);\n  };\n\n  GeoJsonLoader.prototype._buildPolygon = function _buildPolygon(rings) {\n    var this$1 = this;\n    var type = rings.length > 1 ? d.MultiPath : d.Path;\n    var path = new type(this.style);\n\n    for (var i = 0; i < rings.length; i++) {\n      for (var j = 0; j < rings[i].length; j++) {\n        var point = this$1.locator.locationToView(Location.fromLngLat(rings[i][j]));\n\n        if (j === 0) {\n          path.moveTo(point.x, point.y);\n        } else {\n          path.lineTo(point.x, point.y);\n        }\n      }\n    }\n\n    return path;\n  };\n\n  GeoJsonLoader.prototype._loadPoint = function _loadPoint(container, coords, dataItem) {\n    var location = Location.fromLngLat(coords);\n    var point = this.locator.locationToView(location);\n    var circle = new g.Circle(point, 10);\n    var shape = new d.Circle(circle, this.style);\n    shape.dataItem = dataItem;\n    shape.location = location;\n    return this._loadShape(container, shape);\n  };\n\n  return GeoJsonLoader;\n}(Class);","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-charts/dist/es/map/layers/shape.js"],"names":["geometry","g","drawing","d","Class","defined","last","setDefaultOptions","proxy","Layer","Movable","Location","Group","ShapeLayer","map","options","call","_pan","surface","Surface","create","element","width","scrollElement","clientWidth","height","clientHeight","_initRoot","movable","_markers","_click","_handler","bind","_mouseenter","_mouseleave","__proto__","prototype","Object","constructor","destroy","_reset","_translateSurface","_data","_readData","_hasData","_load","_root","draw","_beforeReset","clear","_resize","size","data","type","features","geometries","this$1","_clearMarkers","_loader","GeoJsonLoader","style","container","i","length","shape","parse","append","shapeCreated","cancelled","Circle","renderPointsAsMarkers","_createMarker","args","layer","trigger","featureCreated","e","marker","markers","location","dataItem","push","remove","_panning","suspendTracking","_panEnd","resumeTracking","nw","locationToView","extent","translate","moveTo","x","y","event","layerIndex","layers","indexOf","shapeIndex","originalEvent","_activate","_panHandler","panHandler","_deactivate","unbind","autoBind","zIndex","locator","defaultStyle","observer","item","root","unwrap","_loadGeometryTo","_featureCreated","children","_shapeCreated","group","properties","coords","coordinates","path","_loadPolygon","_setLineFill","_loadPoint","segments","anchor","equals","fill","_loadShape","rings","_buildPolygon","MultiPath","Path","j","point","fromLngLat","lineTo","circle"],"mappings":"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","sourcesContent":["import {\n    geometry as g,\n    drawing as d\n} from '@progress/kendo-drawing';\n\nimport {\n    Class,\n    defined,\n    last,\n    setDefaultOptions\n} from '../../common';\n\nimport {\n    proxy\n} from '../utils';\n\nimport {\n    Layer\n} from './layer';\n\nimport {\n    Movable\n} from '../scroller/draggable';\n\nimport {\n    Location\n} from '../location';\n\nvar Group = d.Group;\n\nexport var ShapeLayer = (function (Layer) {\n    function ShapeLayer(map, options) {\n        Layer.call(this, map, options);\n\n        this._pan = proxy(this._pan, this);\n\n        this.surface = d.Surface.create(this.element, {\n            width: map.scrollElement.clientWidth,\n            height: map.scrollElement.clientHeight\n        });\n\n        this._initRoot();\n        this.movable = new Movable(this.surface.element);\n        this._markers = [];\n\n        this._click = this._handler('shapeClick');\n        this.surface.bind('click', this._click);\n        this._mouseenter = this._handler('shapeMouseEnter');\n        this.surface.bind('mouseenter', this._mouseenter);\n        this._mouseleave = this._handler('shapeMouseLeave');\n        this.surface.bind('mouseleave', this._mouseleave);\n    }\n\n    if ( Layer ) ShapeLayer.__proto__ = Layer;\n    ShapeLayer.prototype = Object.create( Layer && Layer.prototype );\n    ShapeLayer.prototype.constructor = ShapeLayer;\n\n    ShapeLayer.prototype.destroy = function destroy () {\n        Layer.prototype.destroy.call(this);\n\n        this.surface.destroy();\n    };\n\n    ShapeLayer.prototype._reset = function _reset () {\n        Layer.prototype._reset.call(this);\n\n        this._translateSurface();\n\n        this._data = this._readData();\n\n        if (this._hasData()) {\n            this._load(this._data);\n        }\n    };\n\n    ShapeLayer.prototype._initRoot = function _initRoot () {\n        this._root = new Group();\n        this.surface.draw(this._root);\n    };\n\n    ShapeLayer.prototype._beforeReset = function _beforeReset () {\n        this.surface.clear();\n        this._initRoot();\n    };\n\n    ShapeLayer.prototype._resize = function _resize () {\n        this.surface.size(this.map.size());\n    };\n\n    ShapeLayer.prototype._readData = function _readData () {\n        var data = Layer.prototype._readData.call(this);\n\n        if (data.type === \"FeatureCollection\") {\n            return data.features;\n        }\n\n        if (data.type === \"GeometryCollection\") {\n            return data.geometries;\n        }\n\n        return data;\n    };\n\n    ShapeLayer.prototype._load = function _load (data) {\n        var this$1 = this;\n\n        this._data = data;\n        this._clearMarkers();\n\n        if (!this._loader) {\n            this._loader = new GeoJsonLoader(this.map, this.options.style, this);\n        }\n\n        var container = new Group();\n\n        for (var i = 0; i < data.length; i++) {\n            var shape = this$1._loader.parse(data[i]);\n\n            if (shape) {\n                container.append(shape);\n            }\n        }\n\n        this._root.clear();\n        this._root.append(container);\n    };\n\n    ShapeLayer.prototype.shapeCreated = function shapeCreated (shape) {\n        var cancelled = false;\n\n        // the GeoJSON loader builds \"Point\" type as a circle\n        // use the circle shape type as and indicator for rendering a marker\n        // keep the behavior under a setting as this is supported by kendo jQuery Map\n        // but we opted out of this in blazor\n        if (shape instanceof d.Circle && this.map.options.renderPointsAsMarkers) {\n            cancelled = defined(this._createMarker(shape));\n        }\n\n        if (!cancelled) {\n            var args = {\n                layer: this,\n                shape: shape\n            };\n\n            cancelled = this.map.trigger('shapeCreated', args);\n        }\n\n        return cancelled;\n    };\n\n    ShapeLayer.prototype.featureCreated = function featureCreated (e) {\n        e.layer = this;\n        this.map.trigger('shapeFeatureCreated', e);\n    };\n\n    ShapeLayer.prototype._createMarker = function _createMarker (shape) {\n        var marker = this.map.markers.bind({\n            location: shape.location\n        }, shape.dataItem);\n\n        if (marker) {\n            this._markers.push(marker);\n        }\n\n        return marker;\n    };\n\n    ShapeLayer.prototype._clearMarkers = function _clearMarkers () {\n        var this$1 = this;\n\n        for (var i = 0; i < this._markers.length; i++) {\n            this$1.map.markers.remove(this$1._markers[i]);\n        }\n\n        this._markers = [];\n    };\n\n    ShapeLayer.prototype._pan = function _pan () {\n        if (!this._panning) {\n            this._panning = true;\n            this.surface.suspendTracking();\n        }\n    };\n\n    ShapeLayer.prototype._panEnd = function _panEnd (e) {\n        Layer.prototype._panEnd.call(this, e);\n        this._translateSurface();\n        this.surface.resumeTracking();\n        this._panning = false;\n    };\n\n    ShapeLayer.prototype._translateSurface = function _translateSurface () {\n        var map = this.map;\n        var nw = map.locationToView(map.extent().nw);\n\n        if (this.surface.translate) {\n            this.surface.translate(nw);\n            this.movable.moveTo({\n                x: nw.x,\n                y: nw.y\n            });\n        }\n    };\n\n    ShapeLayer.prototype._handler = function _handler (event) {\n        var layer = this;\n\n        return function(e) {\n            if (e.element) {\n                var args = {\n                    layer: layer,\n                    layerIndex: (layer.map.layers || []).indexOf(layer),\n                    shape: e.element,\n                    shapeIndex: (layer._data || []).indexOf(e.element.dataItem),\n                    originalEvent: e.originalEvent\n                };\n\n                layer.map.trigger(event, args);\n            }\n        };\n    };\n\n    ShapeLayer.prototype._activate = function _activate () {\n        Layer.prototype._activate.call(this);\n        this._panHandler = proxy(this._pan, this);\n        this.map.bind('pan', this.panHandler);\n    };\n\n    ShapeLayer.prototype._deactivate = function _deactivate () {\n        Layer.prototype._deactivate.call(this);\n        this.map.unbind('pan', this._panHandler);\n    };\n\n    return ShapeLayer;\n}(Layer));\n\nsetDefaultOptions(ShapeLayer, {\n    autoBind: true,\n    zIndex: 100\n});\n\nvar GeoJsonLoader = (function (Class) {\n    function GeoJsonLoader(locator, defaultStyle, observer) {\n        Class.call(this);\n        this.observer = observer;\n        this.locator = locator;\n        this.style = defaultStyle;\n    }\n\n    if ( Class ) GeoJsonLoader.__proto__ = Class;\n    GeoJsonLoader.prototype = Object.create( Class && Class.prototype );\n    GeoJsonLoader.prototype.constructor = GeoJsonLoader;\n\n    GeoJsonLoader.prototype.parse = function parse (item) {\n        var root = new Group();\n        var unwrap = true;\n\n        if (item.type === 'Feature') {\n            unwrap = false;\n            this._loadGeometryTo(root, item.geometry, item);\n            this._featureCreated(root, item);\n        } else {\n            this._loadGeometryTo(root, item, item);\n        }\n\n        if (unwrap && root.children.length < 2) {\n            root = root.children[0];\n        }\n\n        return root;\n    };\n\n    GeoJsonLoader.prototype._shapeCreated = function _shapeCreated (shape) {\n        var cancelled = false;\n\n        if (this.observer && this.observer.shapeCreated) {\n            cancelled = this.observer.shapeCreated(shape);\n        }\n\n        return cancelled;\n    };\n\n    GeoJsonLoader.prototype._featureCreated = function _featureCreated (group, dataItem) {\n        if (this.observer && this.observer.featureCreated) {\n            this.observer.featureCreated({\n                group: group,\n                dataItem: dataItem,\n                properties: dataItem.properties\n            });\n        }\n    };\n\n    /* eslint-disable indent */\n    GeoJsonLoader.prototype._loadGeometryTo = function _loadGeometryTo (container, geometry, dataItem) {\n        var this$1 = this;\n\n        var coords = geometry.coordinates;\n        var i;\n        var path;\n\n        switch (geometry.type) {\n            case 'LineString':\n                path = this._loadPolygon(container, [coords], dataItem);\n                this._setLineFill(path);\n                break;\n            case 'MultiLineString':\n                for (i = 0; i < coords.length; i++) {\n                    path = this$1._loadPolygon(container, [coords[i]], dataItem);\n                    this$1._setLineFill(path);\n                }\n                break;\n            case 'Polygon':\n                this._loadPolygon(container, coords, dataItem);\n                break;\n            case 'MultiPolygon':\n                for (i = 0; i < coords.length; i++) {\n                    this$1._loadPolygon(container, coords[i], dataItem);\n                }\n                break;\n            case 'Point':\n                this._loadPoint(container, coords, dataItem);\n                break;\n            case 'MultiPoint':\n                for (i = 0; i < coords.length; i++) {\n                    this$1._loadPoint(container, coords[i], dataItem);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    /* eslint-disable indent */\n\n    GeoJsonLoader.prototype._setLineFill = function _setLineFill (path) {\n        var segments = path.segments;\n\n        if (segments.length < 4 || !segments[0].anchor().equals(last(segments).anchor())) {\n            path.options.fill = null;\n        }\n    };\n\n    GeoJsonLoader.prototype._loadShape = function _loadShape (container, shape) {\n        if (!this._shapeCreated(shape)) {\n            container.append(shape);\n        }\n\n        return shape;\n    };\n\n    GeoJsonLoader.prototype._loadPolygon = function _loadPolygon (container, rings, dataItem) {\n        var shape = this._buildPolygon(rings);\n        shape.dataItem = dataItem;\n        return this._loadShape(container, shape);\n    };\n\n    GeoJsonLoader.prototype._buildPolygon = function _buildPolygon (rings) {\n        var this$1 = this;\n\n        var type = rings.length > 1 ? d.MultiPath : d.Path;\n        var path = new type(this.style);\n\n        for (var i = 0; i < rings.length; i++) {\n            for (var j = 0; j < rings[i].length; j++) {\n                var point = this$1.locator.locationToView(Location.fromLngLat(rings[i][j]));\n                if (j === 0) {\n                    path.moveTo(point.x, point.y);\n                } else {\n                    path.lineTo(point.x, point.y);\n                }\n            }\n        }\n\n        return path;\n    };\n\n    GeoJsonLoader.prototype._loadPoint = function _loadPoint (container, coords, dataItem) {\n        var location = Location.fromLngLat(coords);\n        var point = this.locator.locationToView(location);\n        var circle = new g.Circle(point, 10);\n        var shape = new d.Circle(circle, this.style);\n\n        shape.dataItem = dataItem;\n        shape.location = location;\n\n        return this._loadShape(container, shape);\n    };\n\n    return GeoJsonLoader;\n}(Class));\n"]},"metadata":{},"sourceType":"module"}
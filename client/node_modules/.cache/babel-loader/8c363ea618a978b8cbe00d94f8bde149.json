{"ast":null,"code":"var getTouch = function (domEvent) {\n  return {\n    x: {\n      location: domEvent.pageX\n    },\n    y: {\n      location: domEvent.pageY\n    }\n  };\n};\n\nvar eventArgs = function (e, previousArgs) {\n  var pointers = e.pointers;\n  var pointer = pointers[0];\n  var xLocation = pointer.pageX;\n  var yLocation = pointer.pageY;\n  var distance = 0;\n\n  if (pointers.length > 1) {\n    var pointer1 = pointers[0];\n    var pointer2 = pointers[1];\n    distance = Math.sqrt(Math.pow(pointer1.pageX - pointer2.pageX, 2) + Math.pow(pointer1.pageY - pointer2.pageY, 2));\n  }\n\n  return {\n    distance: distance,\n    event: e.srcEvent,\n    preventDefault: function () {\n      e.preventDefault();\n    },\n    target: e.target,\n    touches: pointers.map(getTouch),\n    type: e.type,\n    x: {\n      delta: previousArgs ? xLocation - previousArgs.x.location : 0,\n      initialDelta: e.deltaX,\n      location: xLocation,\n      startLocation: xLocation - e.deltaX\n    },\n    y: {\n      delta: previousArgs ? yLocation - previousArgs.y.location : 0,\n      initialDelta: e.deltaY,\n      location: yLocation,\n      startLocation: yLocation - e.deltaY\n    }\n  };\n};\n\nfunction shouldBindGroup(groupNames, events) {\n  for (var idx = 0; idx < groupNames.length; idx++) {\n    if (events[groupNames[idx]]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar eventGroups = [{\n  end: 'panend',\n  move: 'panmove',\n  start: 'panstart'\n}, {\n  gesturechange: 'pinchmove',\n  gestureend: 'pinchend',\n  gesturestart: 'pinchstart'\n}, {\n  press: 'press'\n}, {\n  tap: 'tap'\n}];\n/**\n * @hidden\n */\n\nvar DomEvents =\n/** @class */\nfunction () {\n  function DomEvents(hammerInstance, events) {\n    this.hammerInstance = hammerInstance;\n    this.eventHandlers = {};\n    this.tap = this.tap.bind(this);\n    this.press = this.press.bind(this);\n    this.panstart = this.panstart.bind(this);\n    this.panmove = this.panmove.bind(this);\n    this.panend = this.panend.bind(this);\n    this.pinchstart = this.pinchstart.bind(this);\n    this.pinchmove = this.pinchmove.bind(this);\n    this.pinchend = this.pinchend.bind(this);\n\n    if (events) {\n      this.bind(events);\n    }\n  }\n\n  DomEvents.prototype.tap = function (e) {\n    this.trigger('tap', e);\n  };\n\n  DomEvents.prototype.press = function (e) {\n    this.trigger('press', e);\n  };\n\n  DomEvents.prototype.panstart = function (e) {\n    delete this.previous;\n    this.previous = this.trigger('start', e);\n  };\n\n  DomEvents.prototype.panmove = function (e) {\n    this.previous = this.trigger('move', e);\n  };\n\n  DomEvents.prototype.panend = function (e) {\n    this.trigger('end', e);\n    delete this.previous;\n  };\n\n  DomEvents.prototype.pinchstart = function (e) {\n    this.trigger('gesturestart', e);\n  };\n\n  DomEvents.prototype.pinchmove = function (e) {\n    this.trigger('gesturechange', e);\n  };\n\n  DomEvents.prototype.pinchend = function (e) {\n    this.trigger('gestureend', e);\n  };\n\n  DomEvents.prototype.trigger = function (name, e) {\n    var args = eventArgs(e, this.previous);\n\n    if (this.eventHandlers[name]) {\n      this.eventHandlers[name](args);\n    }\n\n    return args;\n  };\n\n  DomEvents.prototype.bind = function (events) {\n    if (events === void 0) {\n      events = {};\n    }\n\n    this.unbind();\n    this.eventHandlers = events;\n\n    for (var idx = 0; idx < eventGroups.length; idx++) {\n      var eventGroup = eventGroups[idx];\n      var groupNames = Object.keys(eventGroup);\n\n      if (shouldBindGroup(groupNames, events)) {\n        for (var nameIdx = 0; nameIdx < groupNames.length; nameIdx++) {\n          var name_1 = eventGroup[groupNames[nameIdx]];\n          this.hammerInstance.on(name_1, this[name_1]);\n        }\n      }\n    }\n  };\n\n  DomEvents.prototype.unbind = function () {\n    if (this.hammerInstance) {\n      this.hammerInstance.off();\n    }\n\n    this.eventHandlers = {};\n  };\n\n  DomEvents.prototype.destroy = function () {\n    if (this.hammerInstance) {\n      this.hammerInstance.destroy();\n      delete this.hammerInstance;\n    }\n\n    delete this.eventHandlers;\n  };\n\n  DomEvents.prototype.toggleDrag = function (enable) {\n    this.toggle('pan', enable);\n  };\n\n  DomEvents.prototype.toggleZoom = function (enable) {\n    this.toggle('pinch', enable);\n  };\n\n  DomEvents.prototype.toggle = function (recognizer, enable) {\n    if (this.hammerInstance) {\n      var instanceRecognizer = this.hammerInstance.get(recognizer);\n      instanceRecognizer.set({\n        enable: enable\n      });\n    }\n  };\n\n  return DomEvents;\n}();\n\nexport { DomEvents };","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/node_modules/@progress/kendo-react-charts/dist/es/events/dom-events.js"],"names":["getTouch","domEvent","x","location","pageX","y","pageY","eventArgs","e","previousArgs","pointers","pointer","xLocation","yLocation","distance","length","pointer1","pointer2","Math","sqrt","pow","event","srcEvent","preventDefault","target","touches","map","type","delta","initialDelta","deltaX","startLocation","deltaY","shouldBindGroup","groupNames","events","idx","eventGroups","end","move","start","gesturechange","gestureend","gesturestart","press","tap","DomEvents","hammerInstance","eventHandlers","bind","panstart","panmove","panend","pinchstart","pinchmove","pinchend","prototype","trigger","previous","name","args","unbind","eventGroup","Object","keys","nameIdx","name_1","on","off","destroy","toggleDrag","enable","toggle","toggleZoom","recognizer","instanceRecognizer","get","set"],"mappings":"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","sourcesContent":["var getTouch = function (domEvent) {\n    return {\n        x: {\n            location: domEvent.pageX\n        },\n        y: {\n            location: domEvent.pageY\n        }\n    };\n};\nvar eventArgs = function (e, previousArgs) {\n    var pointers = e.pointers;\n    var pointer = pointers[0];\n    var xLocation = pointer.pageX;\n    var yLocation = pointer.pageY;\n    var distance = 0;\n    if (pointers.length > 1) {\n        var pointer1 = pointers[0];\n        var pointer2 = pointers[1];\n        distance = Math.sqrt(Math.pow(pointer1.pageX - pointer2.pageX, 2) +\n            Math.pow(pointer1.pageY - pointer2.pageY, 2));\n    }\n    return {\n        distance: distance,\n        event: e.srcEvent,\n        preventDefault: function () {\n            e.preventDefault();\n        },\n        target: e.target,\n        touches: pointers.map(getTouch),\n        type: e.type,\n        x: {\n            delta: previousArgs ? xLocation - previousArgs.x.location : 0,\n            initialDelta: e.deltaX,\n            location: xLocation,\n            startLocation: xLocation - e.deltaX\n        },\n        y: {\n            delta: previousArgs ? yLocation - previousArgs.y.location : 0,\n            initialDelta: e.deltaY,\n            location: yLocation,\n            startLocation: yLocation - e.deltaY\n        }\n    };\n};\nfunction shouldBindGroup(groupNames, events) {\n    for (var idx = 0; idx < groupNames.length; idx++) {\n        if (events[groupNames[idx]]) {\n            return true;\n        }\n    }\n    return false;\n}\nvar eventGroups = [{\n        end: 'panend',\n        move: 'panmove',\n        start: 'panstart'\n    }, {\n        gesturechange: 'pinchmove',\n        gestureend: 'pinchend',\n        gesturestart: 'pinchstart'\n    }, {\n        press: 'press'\n    }, {\n        tap: 'tap'\n    }];\n/**\n * @hidden\n */\nvar DomEvents = /** @class */ (function () {\n    function DomEvents(hammerInstance, events) {\n        this.hammerInstance = hammerInstance;\n        this.eventHandlers = {};\n        this.tap = this.tap.bind(this);\n        this.press = this.press.bind(this);\n        this.panstart = this.panstart.bind(this);\n        this.panmove = this.panmove.bind(this);\n        this.panend = this.panend.bind(this);\n        this.pinchstart = this.pinchstart.bind(this);\n        this.pinchmove = this.pinchmove.bind(this);\n        this.pinchend = this.pinchend.bind(this);\n        if (events) {\n            this.bind(events);\n        }\n    }\n    DomEvents.prototype.tap = function (e) {\n        this.trigger('tap', e);\n    };\n    DomEvents.prototype.press = function (e) {\n        this.trigger('press', e);\n    };\n    DomEvents.prototype.panstart = function (e) {\n        delete this.previous;\n        this.previous = this.trigger('start', e);\n    };\n    DomEvents.prototype.panmove = function (e) {\n        this.previous = this.trigger('move', e);\n    };\n    DomEvents.prototype.panend = function (e) {\n        this.trigger('end', e);\n        delete this.previous;\n    };\n    DomEvents.prototype.pinchstart = function (e) {\n        this.trigger('gesturestart', e);\n    };\n    DomEvents.prototype.pinchmove = function (e) {\n        this.trigger('gesturechange', e);\n    };\n    DomEvents.prototype.pinchend = function (e) {\n        this.trigger('gestureend', e);\n    };\n    DomEvents.prototype.trigger = function (name, e) {\n        var args = eventArgs(e, this.previous);\n        if (this.eventHandlers[name]) {\n            this.eventHandlers[name](args);\n        }\n        return args;\n    };\n    DomEvents.prototype.bind = function (events) {\n        if (events === void 0) { events = {}; }\n        this.unbind();\n        this.eventHandlers = events;\n        for (var idx = 0; idx < eventGroups.length; idx++) {\n            var eventGroup = eventGroups[idx];\n            var groupNames = Object.keys(eventGroup);\n            if (shouldBindGroup(groupNames, events)) {\n                for (var nameIdx = 0; nameIdx < groupNames.length; nameIdx++) {\n                    var name_1 = eventGroup[groupNames[nameIdx]];\n                    this.hammerInstance.on(name_1, this[name_1]);\n                }\n            }\n        }\n    };\n    DomEvents.prototype.unbind = function () {\n        if (this.hammerInstance) {\n            this.hammerInstance.off();\n        }\n        this.eventHandlers = {};\n    };\n    DomEvents.prototype.destroy = function () {\n        if (this.hammerInstance) {\n            this.hammerInstance.destroy();\n            delete this.hammerInstance;\n        }\n        delete this.eventHandlers;\n    };\n    DomEvents.prototype.toggleDrag = function (enable) {\n        this.toggle('pan', enable);\n    };\n    DomEvents.prototype.toggleZoom = function (enable) {\n        this.toggle('pinch', enable);\n    };\n    DomEvents.prototype.toggle = function (recognizer, enable) {\n        if (this.hammerInstance) {\n            var instanceRecognizer = this.hammerInstance.get(recognizer);\n            instanceRecognizer.set({\n                enable: enable\n            });\n        }\n    };\n    return DomEvents;\n}());\nexport { DomEvents };\n"]},"metadata":{},"sourceType":"module"}
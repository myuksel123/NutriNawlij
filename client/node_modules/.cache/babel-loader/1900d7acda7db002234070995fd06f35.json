{"ast":null,"code":"var _jsxFileName = \"/home/meryem/repos/Movie_Trend_Visualizer/client/src/pages/Query_2.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Axios from \"axios\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartValueAxis, ChartValueAxisItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartLegend } from '@progress/kendo-react-charts';\nimport '@progress/kendo-theme-default/dist/all.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Query2() {\n  _s();\n\n  const [query2AData, setQuery2AData] = React.useState([]);\n  const [query2BData, setQuery2BData] = React.useState([]);\n  var enAvgRev = {\n    English: []\n  };\n  var enYr = {\n    English: []\n  };\n  var nonEnAvgRev = {\n    Other: []\n  };\n  var nonEnYr = {\n    Other: []\n  };\n  React.useEffect(() => {\n    Axios.get('http://localhost:3001/englishrevenueavg/yearly').then(response => {\n      setQuery2AData(response.data);\n    });\n  }, []);\n  React.useEffect(() => {\n    Axios.get('http://localhost:3001/nonenglishrevenueavg/yearly').then(response => {\n      setQuery2BData(response.data);\n    });\n  }, []);\n  React.useEffect(() => {\n    generateData();\n  }, [query2AData, query2BData]);\n  React.useEffect(() => {\n    Render();\n  }, [enAvgRev, nonEnAvgRev, enYr, nonEnYr]);\n\n  function generateData() {\n    for (var i = 0; i < query2AData.length; i++) {\n      enAvgRev.English.push(query2AData[i].AVGREVENUE);\n      enYr.English.push(query2AData[i].YEAR);\n    }\n\n    for (var i = 0; i < query2BData.length; i++) {\n      nonEnAvgRev.Other.push(query2BData[i].AVGREVENUE);\n      nonEnYr.Other.push(query2BData[i].YEAR);\n    }\n  }\n\n  const categories = enYr.English;\n  const series = [{\n    name: 'English',\n    data: enAvgRev.English\n  }, {\n    name: 'Other',\n    data: nonEnAvgRev.Other\n  }];\n\n  const ChartContainer = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"k-card\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          pannable: {\n            lock: 'y'\n          },\n          zoomable: {\n            mousewheel: {\n              lock: 'y'\n            },\n            selection: {\n              lock: 'y'\n            }\n          },\n          style: {\n            height: 500,\n            width: 600\n          },\n          children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n            text: \"Financial Success Based on Original Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n            position: \"top\",\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartValueAxis, {\n            children: /*#__PURE__*/_jsxDEV(ChartValueAxisItem, {\n              title: {\n                text: 'Average Earnings'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n            children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n              title: {\n                text: 'Year'\n              },\n              categories: categories,\n              labels: {\n                rotation: 320\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n            children: series.map((item, idx) => /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n              type: \"line\",\n              style: \"smooth\",\n              tooltip: {\n                visible: true\n              },\n              data: item.data,\n              name: item.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  function Render() {\n    console.log(\"here\");\n    console.log(enAvgRev.English);\n    return /*#__PURE__*/_jsxDEV(ChartContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(\"true\");\n  console.log(enAvgRev.English);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row align-items-start my-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-lg-6\",\n              children: /*#__PURE__*/_jsxDEV(ChartContainer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"font-weight-light\",\n              children: \"AVERAGE REVENUE OF FILMS (ENGLISH)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"dl\", {\n              children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                children: \"Considerations:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-lg-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: \"- Required to have more than 15 English movies released in a year to be included to avoid very small datasets skewing data. \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: \"- When choosing the monthly granularity, we consider movies starting from the beginning of the yearly graph (year 2000) for more fluid integration/connectiveness. Original intention was to have specific languages outside of English shown, but there weren\\u2019t enough movies for a specific language to model.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n                children: \"Applications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                children: \"- A diversity metric to see how society responds to growing industries outside of the familiar English domain, how welcoming the society has been to different cultures and their depictions of the world.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Query2, \"D0PG9F3oafY0xy7kILMyBBmZzWc=\");\n\n_c = Query2;\nexport default Query2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query2\");","map":{"version":3,"sources":["/home/meryem/repos/Movie_Trend_Visualizer/client/src/pages/Query_2.js"],"names":["React","Axios","Chart","ChartSeries","ChartSeriesItem","ChartValueAxis","ChartValueAxisItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartLegend","BrowserRouter","Router","Route","Switch","Query2","query2AData","setQuery2AData","useState","query2BData","setQuery2BData","enAvgRev","English","enYr","nonEnAvgRev","Other","nonEnYr","useEffect","get","then","response","data","generateData","Render","i","length","push","AVGREVENUE","YEAR","categories","series","name","ChartContainer","lock","mousewheel","selection","height","width","text","rotation","map","item","idx","visible","console","log","display","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Axios from \"axios\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartValueAxis,\n  ChartValueAxisItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartLegend,\n} from '@progress/kendo-react-charts';\nimport '@progress/kendo-theme-default/dist/all.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction Query2() {\n\n  const [query2AData, setQuery2AData] = React.useState([]);\n  const [query2BData, setQuery2BData] = React.useState([]);\n\n  var enAvgRev = {\n    English: [],\n  };\n  var enYr = {\n    English: [],\n  };\n\n  var nonEnAvgRev = {\n    Other: [],\n  };\n  var nonEnYr = {\n    Other: [],\n  };\n\n  React.useEffect(() => {\n    Axios.get('http://localhost:3001/englishrevenueavg/yearly').then((response) => {\n      setQuery2AData(response.data);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    Axios.get('http://localhost:3001/nonenglishrevenueavg/yearly').then((response) => {\n      setQuery2BData(response.data);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    generateData();\n  }, [query2AData, query2BData]);\n\n  React.useEffect(() => {\n    Render();\n  }, [enAvgRev, nonEnAvgRev, enYr, nonEnYr]);\n\n  function generateData() {\n    for (var i = 0; i < query2AData.length; i++) {\n      enAvgRev.English.push(query2AData[i].AVGREVENUE);\n      enYr.English.push(query2AData[i].YEAR);\n    }\n\n    for (var i = 0; i < query2BData.length; i++) {\n      nonEnAvgRev.Other.push(query2BData[i].AVGREVENUE);\n      nonEnYr.Other.push(query2BData[i].YEAR);\n    }\n  }\n\n  const categories = enYr.English;\n  const series = [\n    {\n      name: 'English',\n      data: enAvgRev.English,\n    },\n    {\n      name: 'Other',\n      data: nonEnAvgRev.Other,\n    },\n  ];\n\n  const ChartContainer = () => (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"k-card\">\n          <Chart\n            pannable={{\n              lock: 'y',\n            }}\n            zoomable={{\n              mousewheel: {\n                lock: 'y',\n              },\n              selection: {\n                lock: 'y',\n              },\n            }}\n            style={{\n              height: 500,\n              width: 600,\n            }}\n          >\n            <ChartTitle text=\"Financial Success Based on Original Language\" />\n            <ChartLegend position=\"top\" orientation=\"horizontal\" />\n            <ChartValueAxis>\n              <ChartValueAxisItem\n                title={{\n                  text: 'Average Earnings',\n                }}\n              />\n            </ChartValueAxis>\n\n            <ChartCategoryAxis>\n              <ChartCategoryAxisItem\n                title={{ text: 'Year' }}\n                categories={categories}\n                labels={{\n                  rotation: 320}}   \n              />\n            </ChartCategoryAxis>\n            <ChartSeries>\n              {series.map((item, idx) => (\n                <ChartSeriesItem\n                  key={idx}\n                  type=\"line\"\n                  style=\"smooth\"\n                  tooltip={{\n                    visible: true,\n                  }}\n                  data={item.data}\n                  name={item.name}\n                />\n              ))}\n            </ChartSeries>\n          </Chart>\n        </div>\n      </div>\n    </>\n  );\n\n  function Render() {\n    console.log(\"here\");\n    console.log(enAvgRev.English);\n    return (\n      <ChartContainer />\n    );\n  }\n\n  console.log(\"true\");\n  console.log(enAvgRev.English);\n  return (\n    <Router>\n      <div className=\"home\">\n        <div class=\"container\">\n          <div class=\"row align-items-start my-5\">\n            <div style={{display: \"flex\", flexDirection:\"row\"}}>\n            <div class=\"col-lg-6\">\n              <ChartContainer />\n            </div>\n          </div>\n          <div class=\"col-lg-6\">\n            <h1 class=\"font-weight-light\">AVERAGE REVENUE OF FILMS (ENGLISH)</h1>\n            <dl>\n              <dt>Considerations:</dt>\n              <div class=\"col-lg-auto\">\n                <dd>-\tRequired to have more than 15 English movies released in a year to be included to avoid very small datasets skewing data. </dd>\n                <dd>\n                  -\tWhen choosing the monthly granularity, we consider movies starting from the beginning of the yearly graph (year 2000) for more fluid integration/connectiveness. Original intention was to have specific languages outside of English shown, but there weren’t enough movies for a specific language to model.\n                </dd>\n                {/* <dd>\n                      - Prior to 1998, many of the years only had a few movies that provided movie financial information.\n                      Thus, these years were not considered because basing a year's performance on three movies would not yield reliable results.\n                    </dd> */}\n              </div>\n              <dt>\n                Applications\n              </dt>\n              <dd>\n                - A diversity metric to see how society responds to growing industries outside of the familiar English domain, how welcoming the society has been to different cultures and their depictions of the world.\n              </dd>\n            </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ Router >\n  );\n}\n\nexport default Query2;"]},"metadata":{},"sourceType":"module"}